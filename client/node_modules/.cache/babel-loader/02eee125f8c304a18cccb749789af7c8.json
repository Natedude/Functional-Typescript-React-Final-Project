{"ast":null,"code":"import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive'; // Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\n\nexport const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n  if (!isAudioWorkletNode(audioNode) && activeInputs.every(connections => connections.size === 0)) {\n    setInternalStateToPassive(audioNode);\n  }\n};","map":{"version":3,"sources":["../../../src/helpers/set-internal-state-to-passive-when-necessary.ts"],"names":[],"mappings":"AAAA,SAAS,kBAAT,QAAmC,8BAAnC;AAGA,SAAS,yBAAT,QAA0C,iCAA1C,C,CAEA;;AACA,OAAO,MAAM,sCAAsC,GAAG,CAClD,SADkD,EAElD,YAFkD,KAGlD;AACA,MAAI,CAAC,kBAAkB,CAAC,SAAD,CAAnB,IAAkC,YAAY,CAAC,KAAb,CAAoB,WAAD,IAAiB,WAAW,CAAC,IAAZ,KAAqB,CAAzD,CAAtC,EAAmG;AAC/F,IAAA,yBAAyB,CAAC,SAAD,CAAzB;AACH;AACJ,CAPM","sourceRoot":"","sourcesContent":["import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=set-internal-state-to-passive-when-necessary.js.map"]},"metadata":{},"sourceType":"module"}