{"ast":null,"code":"var _jsxFileName = \"/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/matthewMadore_Instrument.tsx\",\n    _s = $RefreshSig$();\n\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List } from 'immutable'; //import React from 'react'\n\nimport React, { useState } from 'react'; // project imports\n\nimport { Instrument } from '../Instruments';\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// interface IDictionary {\n//   add(key: string, value: any): void;\n//   remove(key: string): void;\n//   containsKey(key: string): boolean;\n//   keys(): string[];\n//   values(): any[];\n// }\n// let keysMap = new Map<string, string>([\n//   [\"key1\", \"value1\"],\n//   [\"key2\", \"value2\"]\n// ]);\n// interface ChordsAndNotes {\n// majorTonic: string[];\n// minorSupertonic: string[];\n// minorMediant: string[];\n// majorSubdominant: string[];\n// majorDominant: string[];\n// minorSubmediant: string[];\n// diminishedleading: string[];\n// Tonic:string[];\n// supertonic:string[];\n// mediant:string[];\n// subdominant:string[];\n// dominant:string[];\n// submediant:string[];\n// leadingTone:string[];\n// tonic:string[];\n// }\n// majorTonic,\n// minorSupertonic,\n// minorMediant,\n// majorSubdominant,\n// majorDominant,\n// minorSubmediant,\n// diminishedleading,\n// tonic:string,\n// supertonic,\n// mediant,\n// subdominant,\n// dominant,\n// submediant,\n// leadingTone,\n// tonic,\nexport function ChordOrNoteButton({\n  notesToPlay,\n  //sampler,\n  index,\n  chordOrNoteButton // boolean\n\n}) {\n  _s();\n\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n  // w w 1/2 w w w 1/2\n  const KeyOfDmajor = {\n    Amaj: ['D4', 'Gb4', 'A4'],\n    Bmin: ['B4', 'D4', 'Gb4'],\n    Gmaj: ['C4', 'E4'],\n    Dmaj: ['A4', 'D4', 'Gb4'],\n    Emin: ['E4', 'B4'],\n    Fsmin: ['Gb4', 'A4', 'C4'],\n    A2: ['A4'],\n    B2: ['B4'],\n    Cs2: ['Db4'],\n    D2: ['D4'],\n    E2: ['E4'],\n    Fs2: ['Gb4'],\n    G2: ['E4'],\n    A3: ['Gb4']\n  };\n  const KeyOfAmajor = {\n    Amaj: ['D4', 'Gb3', 'A3'],\n    Bmin: ['B3', 'D3', 'Gb3'],\n    Csmin: ['C3', 'E3'],\n    Dmaj: ['A3', 'D3', 'Gb3'],\n    Emaj: ['E3', 'B3'],\n    Fsmin: ['Gb3', 'A3', 'C3'],\n    A2: ['A1'],\n    B2: ['A2'],\n    Cs2: ['A3'],\n    D2: ['D3'],\n    E2: ['E3'],\n    Fs2: ['Gb3'],\n    G2: ['F3'],\n    A3: ['Gb3']\n  };\n  const [sampler, setSampler] = useState(new Tone.Sampler({\n    urls: {\n      A4: 'sampled_piano_a.wav',\n      Bb4: 'sampled_piano_bb.wav',\n      B4: 'sampled_piano_b.wav',\n      C4: 'sampled_piano_c.wav',\n      Db4: 'sampled_piano_cs.wav',\n      D4: 'sampled_piano_d.wav',\n      Eb4: 'sampled_piano_eb.wav',\n      E4: 'sampled_piano_e.wav',\n      F4: 'sampled_piano_f.wav',\n      Gb4: 'sampled_piano_gb.wav',\n      G4: 'sampled_piano_g.wav'\n    },\n    baseUrl: 'http://localhost:3000/matthewMadore/samples/'\n  }).toDestination());\n  let majorI = ['D4', 'Gb4', 'A4'];\n  let minorii = ['B4', 'D4', 'Gb4'];\n  let minoriii = ['C4', 'E4'];\n  let majorIV = ['A4', 'D4', 'Gb4'];\n  let majorV = ['E4', 'B4'];\n  let minorvi = ['D4', 'Gb4', 'A4'];\n  let diminishedvii = ['Gb4', 'A4', 'C4'];\n  let tonic = ['A4'];\n  let supertonic = ['B4'];\n  let mediant = ['Db4'];\n  let subdominant = ['D4'];\n  let dominant = ['E4'];\n  let submediant = ['Gb4'];\n  let leadingTone = ['E4'];\n  let octave = ['Gb4'];\n\n  const keyHandler = event => {\n    let soundToPlay;\n    console.log(event);\n\n    switch (event.code) {\n      case 'Digit2':\n        {\n          soundToPlay = majorI;\n          break;\n        }\n\n      case 'Digit3':\n        {\n          soundToPlay = minorii;\n          break;\n        }\n\n      case 'Digit4':\n        {\n          soundToPlay = minoriii;\n          break;\n        }\n\n      case 'Digit5':\n        {\n          soundToPlay = majorIV;\n          break;\n        }\n\n      case 'KeyQ':\n        {\n          soundToPlay = majorV;\n          break;\n        }\n\n      case 'KeyW':\n        {\n          soundToPlay = minorvi;\n          break;\n        }\n\n      case 'KeyE':\n        {\n          soundToPlay = diminishedvii;\n          break;\n        }\n\n      case 'KeyI':\n        {\n          soundToPlay = tonic;\n          break;\n        }\n\n      case 'KeyO':\n        {\n          soundToPlay = supertonic;\n          break;\n        }\n\n      case 'KeyP':\n        {\n          soundToPlay = mediant;\n          break;\n        }\n\n      case 'BracketRight':\n        {\n          soundToPlay = subdominant;\n          break;\n        }\n\n      case 'KeyK':\n        {\n          soundToPlay = dominant;\n          break;\n        }\n\n      case 'KeyL':\n        {\n          soundToPlay = submediant;\n          break;\n        }\n\n      case 'Semicolon':\n        {\n          soundToPlay = leadingTone;\n          break;\n        }\n\n      case 'Quote':\n        {\n          soundToPlay = octave;\n          break;\n        }\n\n      default:\n        {\n          soundToPlay = ['C1'];\n          break;\n        }\n    }\n\n    return soundToPlay;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: () => sampler === null || sampler === void 0 ? void 0 : sampler.triggerAttack(`${majorV}`) // Question: what is `onMouseDown`?\n    ,\n    onMouseUp: () => sampler === null || sampler === void 0 ? void 0 : sampler.triggerRelease(`${majorV}`, '+0.20') // Question: what is `onMouseUp`?\n    // onKeyDown={(e) => sampler?.triggerAttack(`${keyHandler(e)}`)}\n    ,\n    onKeyDown: e => sampler === null || sampler === void 0 ? void 0 : sampler.triggerAttack(`${keyHandler(e)}`),\n    tabIndex: 0,\n    onKeyUp: e => sampler === null || sampler === void 0 ? void 0 : sampler.triggerRelease(`${keyHandler(e)}`, '+0.10'),\n    className: classNames('ba pointer absolute dim blue', {\n      'bg-black blue h1': chordOrNoteButton,\n      // minor keys are black\n      'yellow bg-red h1': !chordOrNoteButton // major keys are white\n\n    }),\n    style: {\n      // CSS\n      top: `${index > 7 ? '20' : 0}`,\n      left: `${index * 5}rem`,\n      zIndex: chordOrNoteButton ? 1 : 0,\n      height: '50px',\n      width: '50px',\n      padding: .10,\n      marginLeft: chordOrNoteButton ? '0.25rem' : 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChordOrNoteButton, \"TgAJdWjJW423EXBnE0okxIUSdmI=\");\n\n_c = ChordOrNoteButton;\n\nfunction WaveformType({\n  title,\n  onClick,\n  active\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1 green', {\n      'b--yellow green': active,\n      'gray b--light-gray': !active\n    }),\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = WaveformType;\n\nfunction Piano({\n  synth,\n  setSynth\n}) {\n  const chordsOrNotes = List([{\n    chordOrNote: 'Amaj',\n    notes: ['D3', 'Gb3', 'A3'],\n    idx: 1\n  }, {\n    chordOrNote: 'Bmin',\n    notes: ['B3', 'D3', 'Gb3'],\n    idx: 2\n  }, {\n    chordOrNote: 'Csmin',\n    notes: ['C3', 'E3'],\n    idx: 3\n  }, {\n    chordOrNote: 'Dmaj',\n    notes: ['A3', 'D3', 'Gb3'],\n    idx: 4\n  }, {\n    chordOrNote: 'Emaj',\n    notes: ['E3', 'B3'],\n    idx: 5\n  }, {\n    chordOrNote: 'Fsmin',\n    notes: ['Gb3', 'A3', 'C3'],\n    idx: 6\n  }, {\n    chordOrNote: 'A2',\n    notes: ['A3'],\n    idx: 7\n  }, {\n    chordOrNote: 'B2',\n    notes: ['B3'],\n    idx: 8\n  }, {\n    chordOrNote: 'Cs2',\n    notes: ['Db3'],\n    idx: 9\n  }, {\n    chordOrNote: 'D2',\n    notes: ['D3'],\n    idx: 10\n  }, {\n    chordOrNote: 'E2',\n    notes: ['E3'],\n    idx: 11\n  }, {\n    chordOrNote: 'Fs2',\n    notes: ['Gb3'],\n    idx: 12\n  }, {\n    chordOrNote: 'G2',\n    notes: ['E3'],\n    idx: 13\n  }, {\n    chordOrNote: 'A3',\n    notes: ['Gb3'],\n    idx: 14\n  }]); // { chordOrNote: 'Amaj', notes: 0 },\n  // { note: 'Db', idx: 0.5 },\n  // { note: 'D', idx: 1 },\n  // { note: 'Eb', idx: 1.5 },\n  // { note: 'E', idx: 2 },\n  // { note: 'F', idx: 3 },\n  // { note: 'Gb', idx: 3.5 },\n  // { note: 'G', idx: 4 },\n  // { note: 'Ab', idx: 4.5 },\n  // { note: 'A', idx: 5 },\n  // { note: 'Bb', idx: 5.5 },\n  // { note: 'B', idx: 6 }\n\n  const setOscillator = newType => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      return new Tone.Synth({\n        oscillator: {\n          type: newType\n        }\n      }).toDestination();\n    });\n  };\n\n  const oscillators = List(['sine', 'sawtooth', 'square', 'triangle', 'fmsine', 'fmsawtooth', 'fmtriangle', 'amsine', 'amsawtooth', 'amtriangle']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative flex-wrap h4 w-100 ml4\",\n      children: chordsOrNotes.map(chordsOrNote => {\n        const stringOfNotes = chordsOrNote.notes;\n        return /*#__PURE__*/_jsxDEV(ChordOrNoteButton, {\n          chordOrNoteButton: true //react key\n          ,\n          notesToPlay: stringOfNotes,\n          index: chordsOrNote.idx // chordOrNote={true}\n          // sampler = {sampler}\n          // chordOrNote = {}\n          // setChordsAndnote = {}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'pl4 pt4 flex',\n      children: oscillators.map(o => /*#__PURE__*/_jsxDEV(WaveformType, {\n        title: o,\n        onClick: () => setOscillator(o) //active={synth?.oscillator.type === o}\n\n      }, o, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Piano;\nexport const matthewMadore_Instrument = new Instrument('matthewMadore_Instrument', Piano);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ChordOrNoteButton\");\n$RefreshReg$(_c2, \"WaveformType\");\n$RefreshReg$(_c3, \"Piano\");","map":{"version":3,"sources":["/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/matthewMadore_Instrument.tsx"],"names":["Tone","classNames","List","React","useState","Instrument","ChordOrNoteButton","notesToPlay","index","chordOrNoteButton","KeyOfDmajor","Amaj","Bmin","Gmaj","Dmaj","Emin","Fsmin","A2","B2","Cs2","D2","E2","Fs2","G2","A3","KeyOfAmajor","Csmin","Emaj","sampler","setSampler","Sampler","urls","A4","Bb4","B4","C4","Db4","D4","Eb4","E4","F4","Gb4","G4","baseUrl","toDestination","majorI","minorii","minoriii","majorIV","majorV","minorvi","diminishedvii","tonic","supertonic","mediant","subdominant","dominant","submediant","leadingTone","octave","keyHandler","event","soundToPlay","console","log","code","triggerAttack","triggerRelease","e","top","left","zIndex","height","width","padding","marginLeft","WaveformType","title","onClick","active","Piano","synth","setSynth","chordsOrNotes","chordOrNote","notes","idx","setOscillator","newType","oldSynth","disconnect","Synth","oscillator","type","oscillators","map","chordsOrNote","stringOfNotes","o","matthewMadore_Instrument"],"mappings":"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","sourcesContent":["// 3rd party library imports\nimport * as Tone from 'tone'\nimport classNames from 'classnames'\nimport { List, Range } from 'immutable'\n//import React from 'react'\nimport React, { useState } from 'react'\n\n// project imports\nimport { Instrument, InstrumentProps } from '../Instruments'\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\ninterface ButtonProps {\n  chordOrNoteButton: boolean\n  notesToPlay: string[] // chords\n  index: number\n  //chordOrNote: string\n  //sampler: Tone.Sampler\n  //setChordsAndnotes: string[]\n}\n// interface IDictionary {\n//   add(key: string, value: any): void;\n//   remove(key: string): void;\n//   containsKey(key: string): boolean;\n//   keys(): string[];\n//   values(): any[];\n// }\n\n// let keysMap = new Map<string, string>([\n//   [\"key1\", \"value1\"],\n//   [\"key2\", \"value2\"]\n// ]);\n\n// interface ChordsAndNotes {\n// majorTonic: string[];\n// minorSupertonic: string[];\n// minorMediant: string[];\n// majorSubdominant: string[];\n// majorDominant: string[];\n// minorSubmediant: string[];\n// diminishedleading: string[];\n// Tonic:string[];\n// supertonic:string[];\n// mediant:string[];\n// subdominant:string[];\n// dominant:string[];\n// submediant:string[];\n// leadingTone:string[];\n// tonic:string[];\n// }\n\n// majorTonic,\n// minorSupertonic,\n// minorMediant,\n// majorSubdominant,\n// majorDominant,\n// minorSubmediant,\n// diminishedleading,\n// tonic:string,\n// supertonic,\n// mediant,\n// subdominant,\n// dominant,\n// submediant,\n// leadingTone,\n// tonic,\n\n\n\nexport function ChordOrNoteButton ({\n  notesToPlay,\n  //sampler,\n  index,\n  chordOrNoteButton // boolean\n}: // chordOrNote, // string\n//setChordsAndnotes,\nButtonProps): JSX.Element {\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n  // w w 1/2 w w w 1/2\n  const KeyOfDmajor = {\n    Amaj: ['D4', 'Gb4', 'A4'],\n    Bmin: ['B4', 'D4', 'Gb4'],\n    Gmaj: ['C4', 'E4'],\n    Dmaj: ['A4', 'D4', 'Gb4'],\n    Emin: ['E4', 'B4'],\n    Fsmin: ['Gb4', 'A4', 'C4'],\n    A2: ['A4'],\n    B2: ['B4'],\n    Cs2: ['Db4'],\n    D2: ['D4'],\n    E2: ['E4'],\n    Fs2: ['Gb4'],\n    G2: ['E4'],\n    A3: ['Gb4']\n  }\n\n  const KeyOfAmajor = {\n    Amaj: ['D4', 'Gb3', 'A3'],\n    Bmin: ['B3', 'D3', 'Gb3'],\n    Csmin: ['C3', 'E3'],\n    Dmaj: ['A3', 'D3', 'Gb3'],\n    Emaj: ['E3', 'B3'],\n    Fsmin: ['Gb3', 'A3', 'C3'],\n    A2: ['A1'],\n    B2: ['A2'],\n    Cs2: ['A3'],\n    D2: ['D3'],\n    E2: ['E3'],\n    Fs2: ['Gb3'],\n    G2: ['F3'],\n    A3: ['Gb3']\n  }\n\n  const [sampler, setSampler] = useState(\n    new Tone.Sampler({\n      urls: {\n        A4: 'sampled_piano_a.wav',\n        Bb4: 'sampled_piano_bb.wav',\n        B4: 'sampled_piano_b.wav',\n        C4: 'sampled_piano_c.wav',\n        Db4: 'sampled_piano_cs.wav',\n        D4: 'sampled_piano_d.wav',\n        Eb4: 'sampled_piano_eb.wav',\n        E4: 'sampled_piano_e.wav',\n        F4: 'sampled_piano_f.wav',\n        Gb4: 'sampled_piano_gb.wav',\n        G4: 'sampled_piano_g.wav'\n      },\n\n      baseUrl: 'http://localhost:3000/matthewMadore/samples/'\n    }).toDestination()\n  )\n\n\n    let majorI = ['D4', 'Gb4', 'A4']\n    let minorii = ['B4', 'D4', 'Gb4']\n    let minoriii = ['C4', 'E4']\n    let majorIV = ['A4', 'D4', 'Gb4']\n    let majorV = ['E4', 'B4']\n    let minorvi = ['D4', 'Gb4', 'A4']\n    let diminishedvii = ['Gb4', 'A4', 'C4']\n    let tonic = ['A4']\n    let supertonic = ['B4']\n    let mediant = ['Db4']\n    let subdominant = ['D4']\n    let dominant = ['E4']\n    let submediant = ['Gb4']\n    let leadingTone = ['E4']\n    let octave = ['Gb4']\n\nconst keyHandler = (event: React.KeyboardEvent<HTMLDivElement>): string[] => {\n  let soundToPlay: string[]\n  console.log(event)\n  switch (event.code) {\n    case 'Digit2': {\n      soundToPlay = majorI\n      break\n    }\n    case 'Digit3': {\n      soundToPlay = minorii\n      break\n    }\n    case 'Digit4': {\n      soundToPlay = minoriii\n      break\n    }\n    case 'Digit5': {\n      soundToPlay = majorIV\n      break\n    }\n    case 'KeyQ': {\n      soundToPlay = majorV\n      break\n    }\n    case 'KeyW': {\n      soundToPlay = minorvi\n      break\n    }\n    case 'KeyE': {\n      soundToPlay = diminishedvii\n      break\n    }\n    case 'KeyI': {\n      soundToPlay = tonic\n      break\n    }\n    case 'KeyO': {\n      soundToPlay = supertonic\n      break\n    }\n    case 'KeyP': {\n      soundToPlay = mediant\n      break\n    }\n    case 'BracketRight': {\n      soundToPlay = subdominant\n      break\n    }\n    case 'KeyK': {\n      soundToPlay = dominant\n      break\n    }\n    case 'KeyL': {\n      soundToPlay = submediant\n      break\n    }\n    case 'Semicolon': {\n      soundToPlay = leadingTone\n      break\n    }\n    case 'Quote': {\n      soundToPlay = octave\n      break\n    }\n    default: {\n      soundToPlay = ['C1']\n      break\n    }\n  }\n  return soundToPlay\n}\n\n  return (\n    <div\n      onMouseDown={() => sampler?.triggerAttack(`${majorV}`)} // Question: what is `onMouseDown`?\n      onMouseUp={() => sampler?.triggerRelease(`${majorV}`, '+0.20')} // Question: what is `onMouseUp`?\n      // onKeyDown={(e) => sampler?.triggerAttack(`${keyHandler(e)}`)}\n      onKeyDown={(e) => sampler?.triggerAttack(`${keyHandler(e)}`)}\n      tabIndex={0}\n      onKeyUp={(e) => sampler?.triggerRelease(`${keyHandler(e)}`, '+0.10')}\n      className={classNames('ba pointer absolute dim blue', {\n        'bg-black blue h1': chordOrNoteButton, // minor keys are black\n        'yellow bg-red h1': !chordOrNoteButton // major keys are white\n      })}\n      style={{\n        // CSS\n        top: `${index > 7 ? '20' : 0}`,\n        left: `${index * 5}rem`,\n        zIndex: chordOrNoteButton ? 1 : 0,\n        height: '50px',\n        width:'50px',\n        padding:.10 ,\n        marginLeft: chordOrNoteButton ? '0.25rem' : 0\n      }}\n    ></div>\n  )\n}\n\nfunction WaveformType ({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      className={classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1 green', {\n        'b--yellow green': active,\n        'gray b--light-gray': !active\n      })}\n    >\n      {title}\n    </div>\n  )\n}\n\nfunction Piano ({ synth, setSynth }: InstrumentProps): JSX.Element {\n  const chordsOrNotes = List([\n    { chordOrNote: 'Amaj', notes: ['D3', 'Gb3', 'A3'], idx: 1 },\n    { chordOrNote: 'Bmin', notes: ['B3', 'D3', 'Gb3'], idx: 2 },\n    { chordOrNote: 'Csmin', notes: ['C3', 'E3'], idx: 3 },\n    { chordOrNote: 'Dmaj', notes: ['A3', 'D3', 'Gb3'], idx: 4 },\n    { chordOrNote: 'Emaj', notes: ['E3', 'B3'], idx: 5 },\n    { chordOrNote: 'Fsmin', notes: ['Gb3', 'A3', 'C3'], idx: 6 },\n    { chordOrNote: 'A2', notes: ['A3'], idx: 7 },\n    { chordOrNote: 'B2', notes: ['B3'], idx: 8 },\n    { chordOrNote: 'Cs2', notes: ['Db3'], idx: 9 },\n    { chordOrNote: 'D2', notes: ['D3'], idx: 10 },\n    { chordOrNote: 'E2', notes: ['E3'], idx: 11 },\n    { chordOrNote: 'Fs2', notes: ['Gb3'], idx: 12 },\n    { chordOrNote: 'G2', notes: ['E3'], idx: 13 },\n    { chordOrNote: 'A3', notes: ['Gb3'], idx: 14 }\n  ])\n  // { chordOrNote: 'Amaj', notes: 0 },\n  // { note: 'Db', idx: 0.5 },\n  // { note: 'D', idx: 1 },\n  // { note: 'Eb', idx: 1.5 },\n  // { note: 'E', idx: 2 },\n  // { note: 'F', idx: 3 },\n  // { note: 'Gb', idx: 3.5 },\n  // { note: 'G', idx: 4 },\n  // { note: 'Ab', idx: 4.5 },\n  // { note: 'A', idx: 5 },\n  // { note: 'Bb', idx: 5.5 },\n  // { note: 'B', idx: 6 }\n\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect()\n\n      return new Tone.Synth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions\n      }).toDestination()\n    })\n  }\n\n  const oscillators: List<OscillatorType> = List([\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle',\n    'fmsine',\n    'fmsawtooth',\n    'fmtriangle',\n    'amsine',\n    'amsawtooth',\n    'amtriangle'\n  ]) as List<OscillatorType>\n\n  return (\n    <div className='pv4'>\n      <div className='relative flex-wrap h4 w-100 ml4'>\n        {chordsOrNotes.map(chordsOrNote => {\n          const stringOfNotes = chordsOrNote.notes\n          return (\n            <ChordOrNoteButton\n              chordOrNoteButton={true} //react key\n              notesToPlay={stringOfNotes}\n              index={chordsOrNote.idx}\n              // chordOrNote={true}\n              // sampler = {sampler}\n              // chordOrNote = {}\n              // setChordsAndnote = {}\n            />\n          )\n        })}\n      </div>\n      <div className={'pl4 pt4 flex'}>\n        {oscillators.map(o => (\n          <WaveformType\n            key={o}\n            title={o}\n            onClick={() => setOscillator(o)}\n            //active={synth?.oscillator.type === o}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport const matthewMadore_Instrument = new Instrument(\n  'matthewMadore_Instrument',\n  Piano\n)\n"]},"metadata":{},"sourceType":"module"}