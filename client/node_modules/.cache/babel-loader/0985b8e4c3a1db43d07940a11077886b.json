{"ast":null,"code":"export const createTestConstantSourceNodeAccurateSchedulingSupport = nativeOfflineAudioContextConstructor => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return false;\n    }\n\n    const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100); // Bug #62: Safari does not support ConstantSourceNodes.\n\n    if (nativeOfflineAudioContext.createConstantSource === undefined) {\n      return true;\n    }\n\n    const nativeConstantSourceNode = nativeOfflineAudioContext.createConstantSource();\n    /*\n     * @todo This is using bug #75 to detect bug #70. That works because both bugs were unique to\n     * the implementation of Firefox right now, but it could probably be done in a better way.\n     */\n\n    return nativeConstantSourceNode.offset.maxValue !== Number.POSITIVE_INFINITY;\n  };\n};","map":{"version":3,"sources":["../../../src/factories/test-constant-source-node-accurate-scheduling-support.ts"],"names":[],"mappings":"AAEA,OAAO,MAAM,qDAAqD,GAC9D,oCAD0H,IAE1H;AACA,SAAO,MAAK;AACR,QAAI,oCAAoC,KAAK,IAA7C,EAAmD;AAC/C,aAAO,KAAP;AACH;;AAED,UAAM,yBAAyB,GAAG,IAAI,oCAAJ,CAAyC,CAAzC,EAA4C,CAA5C,EAA+C,KAA/C,CAAlC,CALQ,CAOR;;AACA,QAAI,yBAAyB,CAAC,oBAA1B,KAAmD,SAAvD,EAAkE;AAC9D,aAAO,IAAP;AACH;;AAED,UAAM,wBAAwB,GAAG,yBAAyB,CAAC,oBAA1B,EAAjC;AAEA;;;AAGG;;AACH,WAAO,wBAAwB,CAAC,MAAzB,CAAgC,QAAhC,KAA6C,MAAM,CAAC,iBAA3D;AACH,GAnBD;AAoBH,CAvBM","sourceRoot":"","sourcesContent":["export const createTestConstantSourceNodeAccurateSchedulingSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeOfflineAudioContext.createConstantSource === undefined) {\n            return true;\n        }\n        const nativeConstantSourceNode = nativeOfflineAudioContext.createConstantSource();\n        /*\n         * @todo This is using bug #75 to detect bug #70. That works because both bugs were unique to\n         * the implementation of Firefox right now, but it could probably be done in a better way.\n         */\n        return nativeConstantSourceNode.offset.maxValue !== Number.POSITIVE_INFINITY;\n    };\n};\n//# sourceMappingURL=test-constant-source-node-accurate-scheduling-support.js.map"]},"metadata":{},"sourceType":"module"}