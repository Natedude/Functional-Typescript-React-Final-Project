{"ast":null,"code":"export const createGetAudioParamRenderer = getAudioParamConnections => {\n  return audioParam => {\n    const audioParamConnections = getAudioParamConnections(audioParam);\n\n    if (audioParamConnections.renderer === null) {\n      throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n    }\n\n    return audioParamConnections.renderer;\n  };\n};","map":{"version":3,"sources":["../../../src/factories/get-audio-param-renderer.ts"],"names":[],"mappings":"AAGA,OAAO,MAAM,2BAA2B,GAAmC,wBAAD,IAA6B;AACnG,SAAQ,UAAD,IAAe;AAClB,UAAM,qBAAqB,GAAG,wBAAwB,CAA8B,UAA9B,CAAtD;;AAEA,QAAI,qBAAqB,CAAC,QAAtB,KAAmC,IAAvC,EAA6C;AACzC,YAAM,IAAI,KAAJ,CAAU,kEAAV,CAAN;AACH;;AAED,WAAO,qBAAqB,CAAC,QAA7B;AACH,GARD;AASH,CAVM","sourceRoot":"","sourcesContent":["export const createGetAudioParamRenderer = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n        return audioParamConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-param-renderer.js.map"]},"metadata":{},"sourceType":"module"}