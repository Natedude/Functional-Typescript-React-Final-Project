{"ast":null,"code":"// 3rd party\nimport { List, Map } from 'immutable'; // project dependencies\n\nimport { PianoInstrument } from './instruments/Piano';\nimport { WaveformVisualizer } from './visualizers/Waveform'; // matthewMadore\n\nimport { matthewMadore_Instrument } from './instruments/matthewMadore_Instrument';\nimport { matthewMadore_Visual } from './visualizers/matthewMadore_Visual'; // Nathan Hildum - Natedude\n\nimport { Natedude_Instrument } from './instruments/Natedude';\nimport { Natedude_Visual } from './visualizers/Natedude'; // Neesha Magar\n\nimport { Nishamgr_Flute } from './instruments/Nishamgr_Flute';\nimport { Nishamgr_Circle } from './visualizers/Nishamgr_Circle'; // Andres - jaq19\n\nimport { jaq19_Xylophone } from './instruments/jaq19'; //uncomment after file compiles\n\nimport { jaq19_Visual } from './visualizers/jaq19';\n/** ------------------------------------------------------------------------ **\n * The entire application state is stored in AppState.\n ** ------------------------------------------------------------------------ */\n\n/**\n * Observation: pure map (compare and contrast with impure map)\n *\n * 'instrument': Instrument\n * 'visualizer': Visualizer\n */\n\nconst instruments = List([PianoInstrument, matthewMadore_Instrument, Natedude_Instrument, Nishamgr_Flute, jaq19_Xylophone]); //add jaq19_Xylophone to list after it compiles\n\nconst visualizers = List([WaveformVisualizer, matthewMadore_Visual, Natedude_Visual, Nishamgr_Circle, jaq19_Visual]);\nexport const defaultState = Map({\n  instruments,\n  visualizers\n});","map":{"version":3,"sources":["/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/State.tsx"],"names":["List","Map","PianoInstrument","WaveformVisualizer","matthewMadore_Instrument","matthewMadore_Visual","Natedude_Instrument","Natedude_Visual","Nishamgr_Flute","Nishamgr_Circle","jaq19_Xylophone","jaq19_Visual","instruments","visualizers","defaultState"],"mappings":"AAAA;AACA,SAASA,IAAT,EAAeC,GAAf,QAA0B,WAA1B,C,CAEA;;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,kBAAT,QAAmC,wBAAnC,C,CACA;;AACA,SAASC,wBAAT,QAAyC,wCAAzC;AACA,SAASC,oBAAT,QAAqC,oCAArC,C,CACA;;AACA,SAASC,mBAAT,QAAoC,wBAApC;AACA,SAASC,eAAT,QAAgC,wBAAhC,C,CACA;;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,eAAT,QAAgC,+BAAhC,C,CACA;;AACA,SAASC,eAAT,QAAgC,qBAAhC,C,CAAuD;;AACvD,SAASC,YAAT,QAA6B,qBAA7B;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA,MAAMC,WAAW,GAAGZ,IAAI,CAAC,CAACE,eAAD,EAAkBE,wBAAlB,EAA4CE,mBAA5C,EAAiEE,cAAjE,EAAiFE,eAAjF,CAAD,CAAxB,C,CAA6H;;AAC7H,MAAMG,WAAW,GAAGb,IAAI,CAAC,CAACG,kBAAD,EAAqBE,oBAArB,EAA2CE,eAA3C,EAA4DE,eAA5D,EAA6EE,YAA7E,CAAD,CAAxB;AACA,OAAO,MAAMG,YAAsB,GAAGb,GAAG,CAAc;AACrDW,EAAAA,WADqD;AAErDC,EAAAA;AAFqD,CAAd,CAAlC","sourcesContent":["// 3rd party\nimport { List, Map } from 'immutable';\n\n// project dependencies\nimport { PianoInstrument } from './instruments/Piano';\nimport { WaveformVisualizer } from './visualizers/Waveform';\n// matthewMadore\nimport { matthewMadore_Instrument } from './instruments/matthewMadore_Instrument';\nimport { matthewMadore_Visual } from './visualizers/matthewMadore_Visual';\n// Nathan Hildum - Natedude\nimport { Natedude_Instrument } from './instruments/Natedude';\nimport { Natedude_Visual } from './visualizers/Natedude';\n// Neesha Magar\nimport { Nishamgr_Flute } from './instruments/Nishamgr_Flute';\nimport { Nishamgr_Circle } from './visualizers/Nishamgr_Circle';\n// Andres - jaq19\nimport { jaq19_Xylophone } from './instruments/jaq19'; //uncomment after file compiles\nimport { jaq19_Visual } from './visualizers/jaq19';\n\n/** ------------------------------------------------------------------------ **\n * The entire application state is stored in AppState.\n ** ------------------------------------------------------------------------ */\n\n/**\n * Observation: pure map (compare and contrast with impure map)\n *\n * 'instrument': Instrument\n * 'visualizer': Visualizer\n */\nexport type AppState = Map<string, any>;\n\n\nconst instruments = List([PianoInstrument, matthewMadore_Instrument, Natedude_Instrument, Nishamgr_Flute, jaq19_Xylophone]); //add jaq19_Xylophone to list after it compiles\nconst visualizers = List([WaveformVisualizer, matthewMadore_Visual, Natedude_Visual, Nishamgr_Circle, jaq19_Visual]);\nexport const defaultState: AppState = Map<string, any>({\n  instruments,\n  visualizers,\n});\n"]},"metadata":{},"sourceType":"module"}