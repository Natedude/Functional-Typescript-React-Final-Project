{"ast":null,"code":"import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  gain: 1\n};\nexport const createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class GainNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const gainNodeRenderer = isOffline ? createGainNodeRenderer() : null;\n      super(context, false, nativeGainNode, gainNodeRenderer); // Bug #74: Safari does not export the correct values for maxValue and minValue.\n\n      this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n    }\n\n    get gain() {\n      return this._gain;\n    }\n\n  };\n};","map":{"version":3,"sources":["../../../src/factories/gain-node-constructor.ts"],"names":[],"mappings":"AAAA,SAAS,0BAAT,EAAqC,0BAArC,QAAuE,cAAvE;AAIA,MAAM,eAAe,GAAG;AACpB,EAAA,YAAY,EAAE,CADM;AAEpB,EAAA,gBAAgB,EAAE,KAFE;AAGpB,EAAA,qBAAqB,EAAE,UAHH;AAIpB,EAAA,IAAI,EAAE;AAJc,CAAxB;AAOA,OAAO,MAAM,yBAAyB,GAAgC,CAClE,oBADkE,EAElE,gBAFkE,EAGlE,sBAHkE,EAIlE,oBAJkE,EAKlE,gBALkE,EAMlE,2BANkE,KAOlE;AACA,SAAO,MAAM,QAAN,SAA2C,oBAA3C,CAAkE;AAGrE,IAAA,WAAA,CAAY,OAAZ,EAAwB,OAAxB,EAAuD;AACnD,YAAM,aAAa,GAAG,gBAAgB,CAAC,OAAD,CAAtC;AACA,YAAM,aAAa,GAAG,EAAE,GAAG,eAAL;AAAsB,WAAG;AAAzB,OAAtB;AACA,YAAM,cAAc,GAAG,oBAAoB,CAAC,aAAD,EAAgB,aAAhB,CAA3C;AACA,YAAM,SAAS,GAAG,2BAA2B,CAAC,aAAD,CAA7C;AACA,YAAM,gBAAgB,GAAiC,SAAS,GAAG,sBAAsB,EAAzB,GAA8B,IAA9F;AAEA,YAAM,OAAN,EAAe,KAAf,EAAsB,cAAtB,EAAsC,gBAAtC,EAPmD,CASnD;;AACA,WAAK,KAAL,GAAa,gBAAgB,CAAC,IAAD,EAAO,SAAP,EAAkB,cAAc,CAAC,IAAjC,EAAuC,0BAAvC,EAAmE,0BAAnE,CAA7B;AACH;;AAEO,QAAJ,IAAI,GAAA;AACJ,aAAO,KAAK,KAAZ;AACH;;AAlBoE,GAAzE;AAoBH,CA5BM","sourceRoot":"","sourcesContent":["import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    gain: 1\n};\nexport const createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class GainNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const gainNodeRenderer = (isOffline ? createGainNodeRenderer() : null);\n            super(context, false, nativeGainNode, gainNodeRenderer);\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get gain() {\n            return this._gain;\n        }\n    };\n};\n//# sourceMappingURL=gain-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}