{"ast":null,"code":"var _jsxFileName = \"/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/matthewMadore_Instrument.tsx\",\n    _s = $RefreshSig$();\n\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List } from 'immutable'; //import React from 'react'\n\nimport React, { useState } from 'react'; // project imports\n\nimport { Instrument } from '../Instruments';\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// interface IDictionary {\n//   add(key: string, value: any): void;\n//   remove(key: string): void;\n//   containsKey(key: string): boolean;\n//   keys(): string[];\n//   values(): any[];\n// }\n// let keysMap = new Map<string, string>([\n//   [\"key1\", \"value1\"],\n//   [\"key2\", \"value2\"]\n// ]);\n// interface ChordsAndNotes {\n// majorTonic: string[];\n// minorSupertonic: string[];\n// minorMediant: string[];\n// majorSubdominant: string[];\n// majorDominant: string[];\n// minorSubmediant: string[];\n// diminishedleading: string[];\n// Tonic:string[];\n// supertonic:string[];\n// mediant:string[];\n// subdominant:string[];\n// dominant:string[];\n// submediant:string[];\n// leadingTone:string[];\n// tonic:string[];\n// }\n// majorTonic,\n// minorSupertonic,\n// minorMediant,\n// majorSubdominant,\n// majorDominant,\n// minorSubmediant,\n// diminishedleading,\n// tonic:string,\n// supertonic,\n// mediant,\n// subdominant,\n// dominant,\n// submediant,\n// leadingTone,\n// tonic,\nfunction generateKeyToPlay(keyToBuild) {\n  //for generating chord or note name to be diplayed on button\n  const chromaticScale = ['A', // 0,\n  'Bb', // 1\n  'B', // 2\n  'C', // 3\n  'Db', // 4\n  'D', // 5\n  'Eb', // 6\n  'E', // 7\n  'F', // 8\n  'Gb', // 9\n  'G', // 10\n  'Ab', // 11,\n  'A', // 12,\n  'Bb', // 13\n  'B', // 14\n  'C', // 15\n  'Db', // 16\n  'D', // 5\n  'Eb', // 6\n  'E', // 7\n  'F', // 8\n  'Gb', // 9\n  'G', // 10\n  'Ab' // 11\n  ];\n  const chromaticScaleWithOctave = ['A3', // 0,\n  'Bb3', // 1\n  'B3', // 2\n  'C3', // 3\n  'Db3', // 4\n  'D3', // 5\n  'Eb3', // 6\n  'E3', // 7\n  'F3', // 8\n  'Gb3', // 9\n  'G3', // 10\n  'Ab3', // 11\n  'A4', // 12\n  'Bb4', // 13\n  'B4', // 14\n  'C4', // 15\n  'Db4', // 16\n  'D4', // 17\n  'Eb4', // 18\n  'E4', // 19\n  'F4', // 20\n  'Gb4', // 21\n  'G4', // 22\n  'Ab4' // 23\n  ]; //building first key\n  // acrynome for shars and flats: fat cats give dog an everlasting battle or Beadgfc\n  // In key of Amajor sharps are are F C G or in flats it is Gb Db Ab\n  // scale for 'A' with sharps: A B C# D E F# G# A\n  // scale for 'A':              A B Db D E Gb Ab A\n  // A major chord is A Db E or 0 4 7\n  // b minor is B D Gb or 2 5 9\n  //  0 , 2 , 4 , 5, 7, 9, 11, 12\n  // majorTonic,\n  // minorSupertonic,\n  // minorMediant,\n  // majorSubdominant,\n  // majorDominant,\n  // minorSubmediant,\n  // diminishedleading,\n  // tonic:string,\n  // supertonic,\n  // mediant,\n  // subdominant,\n  // dominant,\n  // submediant,\n  // leadingTone,\n  // tonic,\n  //'A'\n\n  function makeThing(a, b, c, index) {\n    return {\n      chordOrNote: `${getNote(a)}maj`,\n      notes: [`${getNoteOctave(a)}`, `${getNoteOctave(b)}`, `${getNoteOctave(c)}`],\n      idx: index\n    };\n  }\n\n  ;\n\n  function makeThing(a, b, c, index) {\n    return {\n      chordOrNote: `${getNote(a)}maj`,\n      notes: [`${getNoteOctave(a)}`, `${getNoteOctave(b)}`, `${getNoteOctave(c)}`],\n      idx: index\n    };\n  }\n\n  ;\n  const usersSelectedKey = chromaticScale.indexOf(keyToBuild);\n\n  function getNote(number) {\n    return chromaticScale[chromaticScale.indexOf(keyToBuild) + number];\n  }\n\n  ;\n\n  function getNoteOctave(number) {\n    return chromaticScaleWithOctave[usersSelectedKey + number];\n  }\n\n  ; // scale for 'A':              A B Db D E Gb Ab A\n\n  const keyToPlay = List([{\n    chordOrNote: `${getNote(0)}maj`,\n    notes: [`${getNoteOctave(0)}`, `${getNoteOctave(4)}`, `${getNoteOctave(7)}`],\n    idx: 1\n  }, {\n    chordOrNote: `${getNote(2)}min`,\n    notes: [`${getNoteOctave(2)}`, `${getNoteOctave(5)}`, `${getNoteOctave(9)}`],\n    idx: 2\n  }, {\n    chordOrNote: `${getNote(4)}min`,\n    notes: [`${getNoteOctave(4)}`, `${getNoteOctave(7)}`, `${getNoteOctave(11)}`],\n    idx: 3\n  }, {\n    chordOrNote: `${getNote(5)}maj`,\n    notes: [`${getNoteOctave(5)}`, `${getNoteOctave(9)}`, `${getNoteOctave(12)}`],\n    idx: 4\n  }, {\n    chordOrNote: `${getNote(7)}maj`,\n    notes: [`${getNoteOctave(7)}`, `${getNoteOctave(11)}`, `${getNoteOctave(14)}`],\n    idx: 8\n  }, {\n    chordOrNote: `${getNote(9)}min`,\n    notes: [`${getNoteOctave(9)}`, `${getNoteOctave(12)}`, `${getNoteOctave(16)}`],\n    idx: 9\n  }, {\n    chordOrNote: `${getNote(11)}dim`,\n    notes: [`${getNoteOctave(11)}`, `${getNoteOctave(14)}`, `${getNoteOctave(17)}`],\n    idx: 10\n  }, {\n    chordOrNote: `${getNote(0)}`,\n    notes: [`${getNoteOctave(0)}`],\n    idx: 11\n  }, {\n    chordOrNote: `${getNote(2)}`,\n    notes: [`${getNoteOctave(2)}`],\n    idx: 5\n  }, {\n    chordOrNote: `${getNote(4)}`,\n    notes: [`${getNoteOctave(4)}`],\n    idx: 6\n  }, {\n    chordOrNote: `${getNote(5)}`,\n    notes: [`${getNoteOctave(5)}`],\n    idx: 7\n  }, {\n    chordOrNote: `${getNote(7)}`,\n    notes: [`${getNoteOctave(7)}`],\n    idx: 12\n  }, {\n    chordOrNote: `${getNote(9)}`,\n    notes: [`${getNoteOctave(9)}`],\n    idx: 13\n  }, {\n    chordOrNote: `${getNote(11)}`,\n    notes: [`${getNoteOctave(11)}`],\n    idx: 14\n  }, {\n    chordOrNote: `${getNote(12)}`,\n    notes: [`${getNoteOctave(12)}`],\n    idx: 15\n  }]);\n  return keyToPlay;\n} // console.log('chromaticScale[0]')\n// console.log(chromaticScale[1])\n\n\nexport function ChordOrNoteButton({\n  notesToPlay,\n  //sampler,\n  index,\n  chordOrNoteButton // boolean\n\n}) {\n  _s();\n\n  var _newKeyToPlay$get, _newKeyToPlay$get2, _newKeyToPlay$get3, _newKeyToPlay$get4, _newKeyToPlay$get5, _newKeyToPlay$get6, _newKeyToPlay$get7, _newKeyToPlay$get8, _newKeyToPlay$get9, _newKeyToPlay$get10, _newKeyToPlay$get11, _newKeyToPlay$get12, _newKeyToPlay$get13, _newKeyToPlay$get14, _newKeyToPlay$get15;\n\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n  // w w 1/2 w w w 1/2\n  const [sampler, setSampler] = useState(new Tone.Sampler({\n    urls: {\n      A4: 'sampled_piano_a.wav',\n      Bb4: 'sampled_piano_bb.wav',\n      B4: 'sampled_piano_b.wav',\n      C4: 'sampled_piano_c.wav',\n      Db4: 'sampled_piano_cs.wav',\n      D4: 'sampled_piano_d.wav',\n      Eb4: 'sampled_piano_eb.wav',\n      E4: 'sampled_piano_e.wav',\n      F4: 'sampled_piano_f.wav',\n      Gb4: 'sampled_piano_gb.wav',\n      G4: 'sampled_piano_g.wav'\n    },\n    baseUrl: 'http://localhost:3000/matthewMadore/samples/'\n  }).toDestination()); // minorSupertonic,\n  // minorMediant,\n  // majorSubdominant,\n  // majorDominant,\n  // minorSubmediant,\n  // diminishedleading,\n  // tonic:string,\n  // supertonic,\n  // mediant,\n  // subdominant,\n  // dominant,\n  // submediant,\n  // leadingTone,\n  // tonic,\n\n  const newKeyToPlay = generateKeyToPlay('A'); //  if( newKeyToPlay != undefined) {\n\n  const playChordOrNote = {\n    'majorI': (_newKeyToPlay$get = newKeyToPlay.get(0)) === null || _newKeyToPlay$get === void 0 ? void 0 : _newKeyToPlay$get.notes,\n    // [A, Db, E]\n    'minorii': (_newKeyToPlay$get2 = newKeyToPlay.get(1)) === null || _newKeyToPlay$get2 === void 0 ? void 0 : _newKeyToPlay$get2.notes,\n    'minoriii': (_newKeyToPlay$get3 = newKeyToPlay.get(2)) === null || _newKeyToPlay$get3 === void 0 ? void 0 : _newKeyToPlay$get3.notes,\n    'majorIV': (_newKeyToPlay$get4 = newKeyToPlay.get(3)) === null || _newKeyToPlay$get4 === void 0 ? void 0 : _newKeyToPlay$get4.notes,\n    'tonic': (_newKeyToPlay$get5 = newKeyToPlay.get(4)) === null || _newKeyToPlay$get5 === void 0 ? void 0 : _newKeyToPlay$get5.notes,\n    'supertonic': (_newKeyToPlay$get6 = newKeyToPlay.get(5)) === null || _newKeyToPlay$get6 === void 0 ? void 0 : _newKeyToPlay$get6.notes,\n    'mediant': (_newKeyToPlay$get7 = newKeyToPlay.get(6)) === null || _newKeyToPlay$get7 === void 0 ? void 0 : _newKeyToPlay$get7.notes,\n    'subdominant': (_newKeyToPlay$get8 = newKeyToPlay.get(7)) === null || _newKeyToPlay$get8 === void 0 ? void 0 : _newKeyToPlay$get8.notes,\n    'majorV': (_newKeyToPlay$get9 = newKeyToPlay.get(8)) === null || _newKeyToPlay$get9 === void 0 ? void 0 : _newKeyToPlay$get9.notes,\n    'minorvi': (_newKeyToPlay$get10 = newKeyToPlay.get(9)) === null || _newKeyToPlay$get10 === void 0 ? void 0 : _newKeyToPlay$get10.notes,\n    'diminishedvii': (_newKeyToPlay$get11 = newKeyToPlay.get(10)) === null || _newKeyToPlay$get11 === void 0 ? void 0 : _newKeyToPlay$get11.notes,\n    'dominant': (_newKeyToPlay$get12 = newKeyToPlay.get(11)) === null || _newKeyToPlay$get12 === void 0 ? void 0 : _newKeyToPlay$get12.notes,\n    'submediant': (_newKeyToPlay$get13 = newKeyToPlay.get(12)) === null || _newKeyToPlay$get13 === void 0 ? void 0 : _newKeyToPlay$get13.notes,\n    'leadingTone': (_newKeyToPlay$get14 = newKeyToPlay.get(13)) === null || _newKeyToPlay$get14 === void 0 ? void 0 : _newKeyToPlay$get14.notes,\n    'octave': (_newKeyToPlay$get15 = newKeyToPlay.get(14)) === null || _newKeyToPlay$get15 === void 0 ? void 0 : _newKeyToPlay$get15.notes\n  }; // }\n\n  newKeyToPlay.map(playChordsOrNote => console.log(playChordsOrNote.chordOrNote + ' ' + (playChordsOrNote === null || playChordsOrNote === void 0 ? void 0 : playChordsOrNote.notes))); //console.log( playChrodOrNote.majorI)\n\n  let sound2Play = ['A'];\n  console.log(sound2Play);\n\n  const keyDownHandler = event => {\n    let soundToPlay;\n    console.log(event);\n\n    switch (event.code) {\n      case 'Digit1':\n        {\n          soundToPlay = playChordOrNote.majorI;\n          break;\n        }\n\n      case 'Digit2':\n        {\n          soundToPlay = playChordOrNote.minorii;\n          break;\n        }\n\n      case 'Digit3':\n        {\n          soundToPlay = playChordOrNote.minoriii;\n          break;\n        }\n\n      case 'Digit4':\n        {\n          soundToPlay = playChordOrNote.majorIV;\n          break;\n        }\n\n      case 'KeyQ':\n        {\n          soundToPlay = playChordOrNote.majorV;\n          break;\n        }\n\n      case 'KeyW':\n        {\n          soundToPlay = playChordOrNote.minorvi;\n          break;\n        }\n\n      case 'KeyE':\n        {\n          soundToPlay = playChordOrNote.diminishedvii;\n          break;\n        }\n\n      case 'KeyI':\n        {\n          soundToPlay = playChordOrNote.tonic;\n          break;\n        }\n\n      case 'KeyO':\n        {\n          soundToPlay = playChordOrNote.supertonic;\n          break;\n        }\n\n      case 'KeyP':\n        {\n          soundToPlay = playChordOrNote.mediant;\n          break;\n        }\n\n      case 'BracketLeft':\n        {\n          soundToPlay = playChordOrNote.subdominant;\n          break;\n        }\n\n      case 'KeyK':\n        {\n          soundToPlay = playChordOrNote.dominant;\n          break;\n        }\n\n      case 'KeyL':\n        {\n          soundToPlay = playChordOrNote.submediant;\n          break;\n        }\n\n      case 'Semicolon':\n        {\n          soundToPlay = playChordOrNote.leadingTone;\n          break;\n        }\n\n      case 'Quote':\n        {\n          soundToPlay = playChordOrNote.octave;\n          break;\n        }\n\n      default:\n        {\n          soundToPlay = ['C1'];\n          break;\n        }\n    }\n\n    return soundToPlay;\n  };\n\n  const keyUpHandler = event => {\n    let soundToPlay;\n    console.log(event);\n\n    switch (event.code) {\n      case 'Digit1':\n        {\n          soundToPlay = playChordOrNote.majorI;\n          break;\n        }\n\n      case 'Digit2':\n        {\n          soundToPlay = playChordOrNote.minorii;\n          break;\n        }\n\n      case 'Digit3':\n        {\n          soundToPlay = playChordOrNote.minoriii;\n          break;\n        }\n\n      case 'Digit4':\n        {\n          soundToPlay = playChordOrNote.majorIV;\n          break;\n        }\n\n      case 'KeyQ':\n        {\n          soundToPlay = playChordOrNote.majorV;\n          break;\n        }\n\n      case 'KeyW':\n        {\n          soundToPlay = playChordOrNote.minorvi;\n          break;\n        }\n\n      case 'KeyE':\n        {\n          soundToPlay = playChordOrNote.diminishedvii;\n          break;\n        }\n\n      case 'KeyI':\n        {\n          soundToPlay = playChordOrNote.tonic;\n          break;\n        }\n\n      case 'KeyO':\n        {\n          soundToPlay = playChordOrNote.supertonic;\n          break;\n        }\n\n      case 'KeyP':\n        {\n          soundToPlay = playChordOrNote.mediant;\n          break;\n        }\n\n      case 'BracketLeft':\n        {\n          soundToPlay = playChordOrNote.subdominant;\n          break;\n        }\n\n      case 'KeyK':\n        {\n          soundToPlay = playChordOrNote.dominant;\n          break;\n        }\n\n      case 'KeyL':\n        {\n          soundToPlay = playChordOrNote.submediant;\n          break;\n        }\n\n      case 'Semicolon':\n        {\n          soundToPlay = playChordOrNote.leadingTone;\n          break;\n        }\n\n      case 'Quote':\n        {\n          soundToPlay = playChordOrNote.octave;\n          break;\n        }\n\n      default:\n        {\n          soundToPlay = ['C1'];\n          break;\n        }\n    }\n\n    return soundToPlay;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: () => sampler === null || sampler === void 0 ? void 0 : sampler.triggerAttack(sound2Play) // Question: what is `onMouseDown`?\n    ,\n    onMouseUp: () => sampler === null || sampler === void 0 ? void 0 : sampler.triggerRelease(sound2Play, '+0.10') // Question: what is `onMouseUp`?\n    // onKeyDown={(e) => sampler?.triggerAttack(`${keyHandler(e)}`)}\n    ,\n    onKeyDown: e => sampler === null || sampler === void 0 ? void 0 : sampler.triggerAttack(`${keyDownHandler(e)}`),\n    tabIndex: 0,\n    onKeyUp: e => sampler === null || sampler === void 0 ? void 0 : sampler.triggerRelease(`${keyUpHandler(e)}`, '+0.10'),\n    className: classNames('ba pointer absolute dim blue', {\n      'bg-black blue h1': chordOrNoteButton,\n      // minor keys are black\n      'yellow bg-red h1': !chordOrNoteButton // major keys are white\n\n    }),\n    style: {\n      // CSS\n      top: `${index > 11 || 4 < index && index < 8 ? '10rem' : 0}`,\n      left: `${index > 7 ? '10rem' : 0}`,\n      zIndex: chordOrNoteButton ? 1 : 0,\n      height: '50px',\n      width: '50px',\n      padding: 0.1,\n      marginLeft: chordOrNoteButton ? '0.25rem' : 0 // `${event.key}``${}`\n\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 442,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChordOrNoteButton, \"TgAJdWjJW423EXBnE0okxIUSdmI=\");\n\n_c = ChordOrNoteButton;\n\nfunction WaveformType({\n  title,\n  onClick,\n  active\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1 green', {\n      'b--yellow green': active,\n      'gray b--light-gray': !active\n    }),\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 470,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = WaveformType;\nconst chordAndNotes2 = List([{\n  chordOrNote: 'Amaj',\n  notes: ['D3', 'Gb3', 'A3'],\n  idx: 1\n}, {\n  chordOrNote: 'Bmin',\n  notes: ['B3', 'D3', 'Gb3'],\n  idx: 2\n}, {\n  chordOrNote: 'Csmin',\n  notes: ['C3', 'E3'],\n  idx: 3\n}, {\n  chordOrNote: 'Dmaj',\n  notes: ['A3', 'D3', 'Gb3'],\n  idx: 4\n}, {\n  chordOrNote: 'Emaj',\n  notes: ['E3', 'B3'],\n  idx: 5\n}, {\n  chordOrNote: 'Fsmin',\n  notes: ['Gb3', 'A3', 'C3'],\n  idx: 6\n}, {\n  chordOrNote: 'A2',\n  notes: ['A3'],\n  idx: 7\n}, {\n  chordOrNote: 'B2',\n  notes: ['B3'],\n  idx: 8\n}, {\n  chordOrNote: 'Cs2',\n  notes: ['Db3'],\n  idx: 9\n}, {\n  chordOrNote: 'D2',\n  notes: ['D3'],\n  idx: 10\n}, {\n  chordOrNote: 'E2',\n  notes: ['E3'],\n  idx: 11\n}, {\n  chordOrNote: 'Fs2',\n  notes: ['Gb3'],\n  idx: 12\n}, {\n  chordOrNote: 'G2',\n  notes: ['E3'],\n  idx: 13\n}, {\n  chordOrNote: 'A3',\n  notes: ['Gb3'],\n  idx: 14\n}]);\n\nfunction Piano({\n  synth,\n  setSynth\n}) {\n  // { chordOrNote: 'Amaj', notes: 0 },\n  // { note: 'Db', idx: 0.5 },\n  // { note: 'D', idx: 1 },\n  // { note: 'Eb', idx: 1.5 },\n  // { note: 'E', idx: 2 },\n  // { note: 'F', idx: 3 },\n  // { note: 'Gb', idx: 3.5 },\n  // { note: 'G', idx: 4 },\n  // { note: 'Ab', idx: 4.5 },\n  // { note: 'A', idx: 5 },\n  // { note: 'Bb', idx: 5.5 },\n  // { note: 'B', idx: 6 }\n  const setOscillator = newType => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      return new Tone.Synth({\n        oscillator: {\n          type: newType\n        }\n      }).toDestination();\n    });\n  };\n\n  const oscillators = List(['sine', 'sawtooth', 'square', 'triangle', 'fmsine', 'fmsawtooth', 'fmtriangle', 'amsine', 'amsawtooth', 'amtriangle']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative flex-wrap h4 w-100 ml4\",\n      children: chordAndNotes2.map(chordAndNotes2 => {\n        const stringOfNotes = chordAndNotes2.notes;\n        return /*#__PURE__*/_jsxDEV(ChordOrNoteButton, {\n          chordOrNoteButton: true //react key\n          ,\n          notesToPlay: stringOfNotes,\n          index: chordAndNotes2.idx // chordOrNote={true}\n          // sampler = {sampler}\n          // chordOrNote = {}\n          // setChordsAndnote = {}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'pl4 pt4 flex',\n      children: oscillators.map(o => /*#__PURE__*/_jsxDEV(WaveformType, {\n        title: o,\n        onClick: () => setOscillator(o) //active={synth?.oscillator.type === o}\n\n      }, o, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 538,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Piano;\nexport const matthewMadore_Instrument = new Instrument('matthewMadore_Instrument', Piano);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ChordOrNoteButton\");\n$RefreshReg$(_c2, \"WaveformType\");\n$RefreshReg$(_c3, \"Piano\");","map":{"version":3,"sources":["/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/matthewMadore_Instrument.tsx"],"names":["Tone","classNames","List","React","useState","Instrument","generateKeyToPlay","keyToBuild","chromaticScale","chromaticScaleWithOctave","makeThing","a","b","c","index","chordOrNote","getNote","notes","getNoteOctave","idx","usersSelectedKey","indexOf","number","keyToPlay","ChordOrNoteButton","notesToPlay","chordOrNoteButton","sampler","setSampler","Sampler","urls","A4","Bb4","B4","C4","Db4","D4","Eb4","E4","F4","Gb4","G4","baseUrl","toDestination","newKeyToPlay","playChordOrNote","get","map","playChordsOrNote","console","log","sound2Play","keyDownHandler","event","soundToPlay","code","majorI","minorii","minoriii","majorIV","majorV","minorvi","diminishedvii","tonic","supertonic","mediant","subdominant","dominant","submediant","leadingTone","octave","keyUpHandler","triggerAttack","triggerRelease","e","top","left","zIndex","height","width","padding","marginLeft","WaveformType","title","onClick","active","chordAndNotes2","Piano","synth","setSynth","setOscillator","newType","oldSynth","disconnect","Synth","oscillator","type","oscillators","stringOfNotes","o","matthewMadore_Instrument"],"mappings":"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","sourcesContent":["// 3rd party library imports\nimport * as Tone from 'tone'\nimport classNames from 'classnames'\nimport { List, Range } from 'immutable'\n//import React from 'react'\nimport React, { useState } from 'react'\n\n// project imports\nimport { Instrument, InstrumentProps } from '../Instruments'\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\ninterface ButtonProps {\n  chordOrNoteButton: boolean\n  notesToPlay: string[] // chords\n  index: number\n  //chordOrNote: string\n  //sampler: Tone.Sampler\n  //setChordsAndnotes: string[]\n}\n// interface IDictionary {\n//   add(key: string, value: any): void;\n//   remove(key: string): void;\n//   containsKey(key: string): boolean;\n//   keys(): string[];\n//   values(): any[];\n// }\n\n// let keysMap = new Map<string, string>([\n//   [\"key1\", \"value1\"],\n//   [\"key2\", \"value2\"]\n// ]);\n\n// interface ChordsAndNotes {\n// majorTonic: string[];\n// minorSupertonic: string[];\n// minorMediant: string[];\n// majorSubdominant: string[];\n// majorDominant: string[];\n// minorSubmediant: string[];\n// diminishedleading: string[];\n// Tonic:string[];\n// supertonic:string[];\n// mediant:string[];\n// subdominant:string[];\n// dominant:string[];\n// submediant:string[];\n// leadingTone:string[];\n// tonic:string[];\n// }\n\n// majorTonic,\n// minorSupertonic,\n// minorMediant,\n// majorSubdominant,\n// majorDominant,\n// minorSubmediant,\n// diminishedleading,\n// tonic:string,\n// supertonic,\n// mediant,\n// subdominant,\n// dominant,\n// submediant,\n// leadingTone,\n// tonic,\nfunction generateKeyToPlay (\n  keyToBuild: string // 'A'\n):\n  List<{\n    chordOrNote: string\n    notes: string[]\n    idx: number\n  }>\n{\n  //for generating chord or note name to be diplayed on button\n  const chromaticScale = [\n    'A', // 0,\n    'Bb', // 1\n    'B', // 2\n    'C', // 3\n    'Db', // 4\n    'D', // 5\n    'Eb', // 6\n    'E', // 7\n    'F', // 8\n    'Gb', // 9\n    'G', // 10\n    'Ab', // 11,\n    'A', // 12,\n    'Bb', // 13\n    'B', // 14\n    'C', // 15\n    'Db', // 16\n    'D', // 5\n    'Eb', // 6\n    'E', // 7\n    'F', // 8\n    'Gb', // 9\n    'G', // 10\n    'Ab' // 11\n  ]\n  const chromaticScaleWithOctave = [\n    'A3', // 0,\n    'Bb3', // 1\n    'B3', // 2\n    'C3', // 3\n    'Db3', // 4\n    'D3', // 5\n    'Eb3', // 6\n    'E3', // 7\n    'F3', // 8\n    'Gb3', // 9\n    'G3', // 10\n    'Ab3', // 11\n    'A4', // 12\n    'Bb4', // 13\n    'B4', // 14\n    'C4', // 15\n    'Db4', // 16\n    'D4', // 17\n    'Eb4', // 18\n    'E4', // 19\n    'F4', // 20\n    'Gb4', // 21\n    'G4', // 22\n    'Ab4' // 23\n  ]\n\n  //building first key\n  // acrynome for shars and flats: fat cats give dog an everlasting battle or Beadgfc\n  // In key of Amajor sharps are are F C G or in flats it is Gb Db Ab\n   // scale for 'A' with sharps: A B C# D E F# G# A\n  // scale for 'A':              A B Db D E Gb Ab A\n  // A major chord is A Db E or 0 4 7\n  // b minor is B D Gb or 2 5 9\n  //  0 , 2 , 4 , 5, 7, 9, 11, 12\n  // majorTonic,\n  // minorSupertonic,\n  // minorMediant,\n  // majorSubdominant,\n  // majorDominant,\n  // minorSubmediant,\n  // diminishedleading,\n  // tonic:string,\n  // supertonic,\n  // mediant,\n  // subdominant,\n  // dominant,\n  // submediant,\n  // leadingTone,\n  // tonic,\n  //'A'\n  interface ThingProps{\n    chordOrNote: string;\n    notes: string[];\n    idx: number;\n  }\n  function makeThing(a:number,b:number,c:number,index:number): ThingProps{\n    return ({\n      chordOrNote: `${getNote(a)}maj`,\n      notes: [`${getNoteOctave(a)}`, `${getNoteOctave(b)}`, `${getNoteOctave(c)}`],\n      idx: index\n    });\n  };\n\n  interface ThingProps{\n    chordOrNote: string;\n    notes: string[];\n    idx: number;\n  }\n  function makeThing(a:number,b:number,c:number,index:number): ThingProps{\n    return ({\n      chordOrNote: `${getNote(a)}maj`,\n      notes: [`${getNoteOctave(a)}`, `${getNoteOctave(b)}`, `${getNoteOctave(c)}`],\n      idx: index\n    });\n  };\n\n  const usersSelectedKey = chromaticScale.indexOf(keyToBuild)\n  function getNote(number: number) {\n    return chromaticScale[chromaticScale.indexOf(keyToBuild) + number]\n  };\n\n  function getNoteOctave(number: number ) {\n    return chromaticScaleWithOctave[usersSelectedKey + number]\n  };\n  // scale for 'A':              A B Db D E Gb Ab A\n  const keyToPlay = List([\n    { chordOrNote: `${getNote(0)}maj`,   notes: [`${getNoteOctave(0)}`, `${getNoteOctave(4)}`, `${getNoteOctave(7)}`], idx: 1 },\n    { chordOrNote: `${getNote(2)}min`, notes: [`${getNoteOctave(2)}`, `${getNoteOctave(5)}`, `${getNoteOctave(9)}`], idx: 2 },\n    { chordOrNote: `${getNote(4)}min`, notes: [`${getNoteOctave(4)}`, `${getNoteOctave(7)}`, `${getNoteOctave(11)}`], idx: 3 },\n    { chordOrNote: `${getNote(5)}maj`, notes: [`${getNoteOctave(5)}`, `${getNoteOctave(9)}`, `${getNoteOctave(12)}`], idx: 4 },\n    { chordOrNote: `${getNote(7)}maj`, notes: [`${getNoteOctave(7)}`, `${getNoteOctave(11)}`, `${getNoteOctave(14)}`], idx: 8 },\n    { chordOrNote: `${getNote(9)}min`, notes: [`${getNoteOctave(9)}`, `${getNoteOctave(12)}`, `${getNoteOctave(16)}`], idx: 9 },\n    { chordOrNote: `${getNote(11)}dim`,notes: [`${getNoteOctave(11)}`, `${getNoteOctave(14)}`, `${getNoteOctave(17)}`], idx: 10 },\n    { chordOrNote: `${getNote(0)}`,    notes: [`${getNoteOctave(0)}`], idx: 11 },\n    { chordOrNote: `${getNote(2)}`,  notes: [`${getNoteOctave(2)}`], idx: 5 },\n    { chordOrNote: `${getNote(4)}`,  notes: [`${getNoteOctave(4)}`], idx: 6 },\n    { chordOrNote: `${getNote(5)}`,  notes: [`${getNoteOctave(5)}`], idx: 7 },\n    { chordOrNote: `${getNote(7)}`,  notes: [`${getNoteOctave(7)}`], idx: 12 },\n    { chordOrNote: `${getNote(9)}`,  notes: [`${getNoteOctave(9)}`], idx: 13 },\n    { chordOrNote: `${getNote(11)}`, notes: [`${getNoteOctave(11)}`], idx: 14 },\n    { chordOrNote: `${getNote(12)}`, notes: [`${getNoteOctave(12)}`], idx: 15 }\n  ])\n  return  keyToPlay\n}\n\n\n\n  // console.log('chromaticScale[0]')\n  // console.log(chromaticScale[1])\n\nexport function ChordOrNoteButton ({\n  notesToPlay,\n  //sampler,\n  index,\n  chordOrNoteButton // boolean\n}: // chordOrNote, // string\n//setChordsAndnotes,\nButtonProps): JSX.Element {\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n  // w w 1/2 w w w 1/2\n\n\n  const [sampler, setSampler] = useState(\n    new Tone.Sampler({\n      urls: {\n        A4: 'sampled_piano_a.wav',\n        Bb4: 'sampled_piano_bb.wav',\n        B4: 'sampled_piano_b.wav',\n        C4: 'sampled_piano_c.wav',\n        Db4: 'sampled_piano_cs.wav',\n        D4: 'sampled_piano_d.wav',\n        Eb4: 'sampled_piano_eb.wav',\n        E4: 'sampled_piano_e.wav',\n        F4: 'sampled_piano_f.wav',\n        Gb4: 'sampled_piano_gb.wav',\n        G4: 'sampled_piano_g.wav'\n      },\n\n      baseUrl: 'http://localhost:3000/matthewMadore/samples/'\n    }).toDestination()\n  )\n\n\n  // minorSupertonic,\n  // minorMediant,\n  // majorSubdominant,\n  // majorDominant,\n  // minorSubmediant,\n  // diminishedleading,\n  // tonic:string,\n  // supertonic,\n  // mediant,\n  // subdominant,\n  // dominant,\n  // submediant,\n  // leadingTone,\n  // tonic,\n  const newKeyToPlay = generateKeyToPlay('A')\n//  if( newKeyToPlay != undefined) {\n  const playChordOrNote = {\n    'majorI': newKeyToPlay.get(0)?.notes,  // [A, Db, E]\n    'minorii': newKeyToPlay.get(1)?.notes,\n    'minoriii': newKeyToPlay.get(2)?.notes,\n    'majorIV': newKeyToPlay.get(3)?.notes,\n    'tonic': newKeyToPlay.get(4)?.notes,\n   'supertonic': newKeyToPlay.get(5)?.notes,\n   'mediant': newKeyToPlay.get(6)?.notes,\n   'subdominant': newKeyToPlay.get(7)?.notes,\n   'majorV': newKeyToPlay.get(8)?.notes,\n   'minorvi': newKeyToPlay.get(9)?.notes,\n   'diminishedvii': newKeyToPlay.get(10)?.notes,\n   'dominant': newKeyToPlay.get(11)?.notes,\n   'submediant': newKeyToPlay.get(12)?.notes,\n   'leadingTone': newKeyToPlay.get(13)?.notes,\n   'octave': newKeyToPlay.get(14)?.notes,\n  }\n// }\nnewKeyToPlay.map(playChordsOrNote =>\n  console.log(playChordsOrNote.chordOrNote + ' ' + playChordsOrNote?.notes))\n  //console.log( playChrodOrNote.majorI)\n\nlet sound2Play = ['A']\n\nconsole.log(sound2Play)\n  const keyDownHandler = (\n    event: React.KeyboardEvent<HTMLDivElement>\n  ): string[] | undefined => {\n    let soundToPlay: string[] | undefined\n    console.log(event)\n    switch (event.code) {\n      case 'Digit1': {\n        soundToPlay = playChordOrNote.majorI\n        break\n      }\n      case 'Digit2': {\n        soundToPlay = playChordOrNote.minorii\n        break\n      }\n      case 'Digit3': {\n        soundToPlay = playChordOrNote.minoriii\n        break\n      }\n      case 'Digit4': {\n        soundToPlay = playChordOrNote.majorIV\n        break\n      }\n      case 'KeyQ': {\n        soundToPlay = playChordOrNote.majorV\n        break\n      }\n      case 'KeyW': {\n        soundToPlay = playChordOrNote.minorvi\n        break\n      }\n      case 'KeyE': {\n        soundToPlay = playChordOrNote.diminishedvii\n        break\n      }\n      case 'KeyI': {\n        soundToPlay = playChordOrNote.tonic\n        break\n      }\n      case 'KeyO': {\n        soundToPlay = playChordOrNote.supertonic\n        break\n      }\n      case 'KeyP': {\n        soundToPlay = playChordOrNote.mediant\n        break\n      }\n      case 'BracketLeft': {\n        soundToPlay = playChordOrNote.subdominant\n        break\n      }\n      case 'KeyK': {\n        soundToPlay = playChordOrNote.dominant\n        break\n      }\n      case 'KeyL': {\n        soundToPlay = playChordOrNote.submediant\n        break\n      }\n      case 'Semicolon': {\n        soundToPlay = playChordOrNote.leadingTone\n        break\n      }\n      case 'Quote': {\n        soundToPlay = playChordOrNote.octave\n        break\n      }\n      default: {\n        soundToPlay = ['C1']\n        break\n      }\n    }\n    return soundToPlay\n  }\n\n  const keyUpHandler = (\n    event: React.KeyboardEvent<HTMLDivElement>\n  ): string[] | undefined => {\n    let soundToPlay: string[] | undefined\n    console.log(event)\n    switch (event.code) {\n      case 'Digit1': {\n        soundToPlay = playChordOrNote.majorI\n        break\n      }\n      case 'Digit2': {\n        soundToPlay = playChordOrNote.minorii\n        break\n      }\n      case 'Digit3': {\n        soundToPlay = playChordOrNote.minoriii\n        break\n      }\n      case 'Digit4': {\n        soundToPlay = playChordOrNote.majorIV\n        break\n      }\n      case 'KeyQ': {\n        soundToPlay = playChordOrNote.majorV\n        break\n      }\n      case 'KeyW': {\n        soundToPlay = playChordOrNote.minorvi\n        break\n      }\n      case 'KeyE': {\n        soundToPlay = playChordOrNote.diminishedvii\n        break\n      }\n      case 'KeyI': {\n        soundToPlay = playChordOrNote.tonic\n        break\n      }\n      case 'KeyO': {\n        soundToPlay = playChordOrNote.supertonic\n        break\n      }\n      case 'KeyP': {\n        soundToPlay = playChordOrNote.mediant\n        break\n      }\n      case 'BracketLeft': {\n        soundToPlay = playChordOrNote.subdominant\n        break\n      }\n      case 'KeyK': {\n        soundToPlay = playChordOrNote.dominant\n        break\n      }\n      case 'KeyL': {\n        soundToPlay = playChordOrNote.submediant\n        break\n      }\n      case 'Semicolon': {\n        soundToPlay = playChordOrNote.leadingTone\n        break\n      }\n      case 'Quote': {\n        soundToPlay = playChordOrNote.octave\n        break\n      }\n      default: {\n        soundToPlay = ['C1']\n        break\n      }\n    }\n    return soundToPlay\n  }\n\n  return (\n    <div\n      onMouseDown={() => sampler?.triggerAttack(sound2Play)} // Question: what is `onMouseDown`?\n      onMouseUp={() => sampler?.triggerRelease(sound2Play, '+0.10')} // Question: what is `onMouseUp`?\n      // onKeyDown={(e) => sampler?.triggerAttack(`${keyHandler(e)}`)}\n      onKeyDown={e => sampler?.triggerAttack(`${keyDownHandler(e)}`)}\n      tabIndex={0}\n      onKeyUp={e => sampler?.triggerRelease(`${keyUpHandler(e)}`, '+0.10')}\n      className={classNames('ba pointer absolute dim blue', {\n        'bg-black blue h1': chordOrNoteButton, // minor keys are black\n        'yellow bg-red h1': !chordOrNoteButton // major keys are white\n      })}\n      style={{\n        // CSS\n        top: `${index > 11 || (4 < index && index < 8) ? '10rem' : 0}`,\n        left: `${index > 7 ? '10rem' : 0}`,\n        zIndex: chordOrNoteButton ? 1 : 0,\n        height: '50px',\n        width: '50px',\n        padding: 0.1,\n        marginLeft: chordOrNoteButton ? '0.25rem' : 0\n        // `${event.key}``${}`\n      }}\n    ></div>\n  )\n}\n\nfunction WaveformType ({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      className={classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1 green', {\n        'b--yellow green': active,\n        'gray b--light-gray': !active\n      })}\n    >\n      {title}\n    </div>\n  )\n}\n\nconst chordAndNotes2 = List([\n  { chordOrNote: 'Amaj', notes: ['D3', 'Gb3', 'A3'], idx: 1 },\n  { chordOrNote: 'Bmin', notes: ['B3', 'D3', 'Gb3'], idx: 2 },\n  { chordOrNote: 'Csmin', notes: ['C3', 'E3'], idx: 3 },\n  { chordOrNote: 'Dmaj', notes: ['A3', 'D3', 'Gb3'], idx: 4 },\n  { chordOrNote: 'Emaj', notes: ['E3', 'B3'], idx: 5 },\n  { chordOrNote: 'Fsmin', notes: ['Gb3', 'A3', 'C3'], idx: 6 },\n  { chordOrNote: 'A2', notes: ['A3'], idx: 7 },\n  { chordOrNote: 'B2', notes: ['B3'], idx: 8 },\n  { chordOrNote: 'Cs2', notes: ['Db3'], idx: 9 },\n  { chordOrNote: 'D2', notes: ['D3'], idx: 10 },\n  { chordOrNote: 'E2', notes: ['E3'], idx: 11 },\n  { chordOrNote: 'Fs2', notes: ['Gb3'], idx: 12 },\n  { chordOrNote: 'G2', notes: ['E3'], idx: 13 },\n  { chordOrNote: 'A3', notes: ['Gb3'], idx: 14 }\n])\n\nfunction Piano ({ synth, setSynth }: InstrumentProps): JSX.Element {\n\n  // { chordOrNote: 'Amaj', notes: 0 },\n  // { note: 'Db', idx: 0.5 },\n  // { note: 'D', idx: 1 },\n  // { note: 'Eb', idx: 1.5 },\n  // { note: 'E', idx: 2 },\n  // { note: 'F', idx: 3 },\n  // { note: 'Gb', idx: 3.5 },\n  // { note: 'G', idx: 4 },\n  // { note: 'Ab', idx: 4.5 },\n  // { note: 'A', idx: 5 },\n  // { note: 'Bb', idx: 5.5 },\n  // { note: 'B', idx: 6 }\n\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect()\n\n      return new Tone.Synth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions\n      }).toDestination()\n    })\n  }\n\n  const oscillators: List<OscillatorType> = List([\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle',\n    'fmsine',\n    'fmsawtooth',\n    'fmtriangle',\n    'amsine',\n    'amsawtooth',\n    'amtriangle'\n  ]) as List<OscillatorType>\n\n  return (\n    <div className='pv4'>\n      <div className='relative flex-wrap h4 w-100 ml4'>\n        {chordAndNotes2.map(chordAndNotes2 => {\n          const stringOfNotes = chordAndNotes2.notes\n          return (\n            <ChordOrNoteButton\n              chordOrNoteButton={true} //react key\n              notesToPlay={stringOfNotes}\n              index={chordAndNotes2.idx}\n              // chordOrNote={true}\n              // sampler = {sampler}\n              // chordOrNote = {}\n              // setChordsAndnote = {}\n            />\n          )\n        })}\n      </div>\n      <div className={'pl4 pt4 flex'}>\n        {oscillators.map(o => (\n          <WaveformType\n            key={o}\n            title={o}\n            onClick={() => setOscillator(o)}\n            //active={synth?.oscillator.type === o}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport const matthewMadore_Instrument = new Instrument(\n  'matthewMadore_Instrument',\n  Piano\n)\n"]},"metadata":{},"sourceType":"module"}