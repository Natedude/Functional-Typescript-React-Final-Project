{"ast":null,"code":"export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n  return async (audioParam, nativeOfflineAudioContext, nativeAudioParam, trace) => {\n    const audioParamConnections = getAudioParamConnections(audioParam);\n    await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n      const audioNodeRenderer = getAudioNodeRenderer(source);\n      const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, trace);\n\n      if (!isPartOfACycle(source)) {\n        renderedNativeAudioNode.connect(nativeAudioParam, output);\n      }\n    }));\n  };\n};","map":{"version":3,"sources":["../../../src/factories/render-inputs-of-audio-param.ts"],"names":[],"mappings":"AAGA,OAAO,MAAM,8BAA8B,GAAqC,CAC5E,oBAD4E,EAE5E,wBAF4E,EAG5E,cAH4E,KAI5E;AACA,SAAO,OACH,UADG,EAEH,yBAFG,EAGH,gBAHG,EAIH,KAJG,KAKY;AACf,UAAM,qBAAqB,GAAG,wBAAwB,CAAI,UAAJ,CAAtD;AAEA,UAAM,OAAO,CAAC,GAAR,CACF,KAAK,CAAC,IAAN,CAAW,qBAAqB,CAAC,YAAjC,EAA+C,GAA/C,CAAmD,OAAO,CAAC,MAAD,EAAS,MAAT,CAAP,KAA2B;AAC1E,YAAM,iBAAiB,GAAG,oBAAoB,CAAC,MAAD,CAA9C;AACA,YAAM,uBAAuB,GAAG,MAAM,iBAAiB,CAAC,MAAlB,CAAyB,MAAzB,EAAiC,yBAAjC,EAA4D,KAA5D,CAAtC;;AAEA,UAAI,CAAC,cAAc,CAAC,MAAD,CAAnB,EAA6B;AACzB,QAAA,uBAAuB,CAAC,OAAxB,CAAgC,gBAAhC,EAAkD,MAAlD;AACH;AACJ,KAPD,CADE,CAAN;AAUH,GAlBD;AAmBH,CAxBM","sourceRoot":"","sourcesContent":["export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n    return async (audioParam, nativeOfflineAudioContext, nativeAudioParam, trace) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, trace);\n            if (!isPartOfACycle(source)) {\n                renderedNativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-param.js.map"]},"metadata":{},"sourceType":"module"}