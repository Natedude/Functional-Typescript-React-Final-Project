{"ast":null,"code":"export const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = nativeContext => {\n  const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n  nativeAudioBufferSourceNode.start();\n\n  try {\n    nativeAudioBufferSourceNode.start();\n  } catch {\n    return true;\n  }\n\n  return false;\n};","map":{"version":3,"sources":["../../../src/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.ts"],"names":[],"mappings":"AAEA,OAAO,MAAM,2DAA2D,GAAI,aAAD,IAAkC;AACzG,QAAM,2BAA2B,GAAG,aAAa,CAAC,kBAAd,EAApC;AAEA,EAAA,2BAA2B,CAAC,KAA5B;;AAEA,MAAI;AACA,IAAA,2BAA2B,CAAC,KAA5B;AACH,GAFD,CAEE,MAAM;AACJ,WAAO,IAAP;AACH;;AAED,SAAO,KAAP;AACH,CAZM","sourceRoot":"","sourcesContent":["export const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.start();\n    }\n    catch {\n        return true;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map"]},"metadata":{},"sourceType":"module"}