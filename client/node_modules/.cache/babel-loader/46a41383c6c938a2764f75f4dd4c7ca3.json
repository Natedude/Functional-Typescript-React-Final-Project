{"ast":null,"code":"import { Timeline } from \"./Timeline\";\nimport { Tone } from \"../Tone\";\n/**\n * Represents a single value which is gettable and settable in a timed way\n */\n\nexport class TimelineValue extends Tone {\n  /**\n   * @param initialValue The value to return if there is no scheduled values\n   */\n  constructor(initialValue) {\n    super();\n    this.name = \"TimelineValue\";\n    /**\n     * The timeline which stores the values\n     */\n\n    this._timeline = new Timeline({\n      memory: 10\n    });\n    this._initialValue = initialValue;\n  }\n  /**\n   * Set the value at the given time\n   */\n\n\n  set(value, time) {\n    this._timeline.add({\n      value,\n      time\n    });\n\n    return this;\n  }\n  /**\n   * Get the value at the given time\n   */\n\n\n  get(time) {\n    const event = this._timeline.get(time);\n\n    if (event) {\n      return event.value;\n    } else {\n      return this._initialValue;\n    }\n  }\n\n}","map":{"version":3,"sources":["../../../../Tone/core/util/TimelineValue.ts"],"names":[],"mappings":"AAAA,SAAS,QAAT,QAAwC,YAAxC;AACA,SAAS,IAAT,QAAqB,SAArB;AAOA;;AAEG;;AACH,OAAM,MAAO,aAAP,SAAmC,IAAnC,CAAuC;AAc5C;;AAEG;AACH,EAAA,WAAA,CAAY,YAAZ,EAA8B;AAE7B;AAjBQ,SAAA,IAAA,GAAe,eAAf;AAET;;AAEG;;AACK,SAAA,SAAA,GAAgD,IAAI,QAAJ,CAAa;AAAE,MAAA,MAAM,EAAE;AAAV,KAAb,CAAhD;AAaP,SAAK,aAAL,GAAqB,YAArB;AACA;AAED;;AAEG;;;AACH,EAAA,GAAG,CAAC,KAAD,EAAc,IAAd,EAA2B;AAC7B,SAAK,SAAL,CAAe,GAAf,CAAmB;AAClB,MAAA,KADkB;AACX,MAAA;AADW,KAAnB;;AAGA,WAAO,IAAP;AACA;AAED;;AAEG;;;AACH,EAAA,GAAG,CAAC,IAAD,EAAc;AAChB,UAAM,KAAK,GAAG,KAAK,SAAL,CAAe,GAAf,CAAmB,IAAnB,CAAd;;AACA,QAAI,KAAJ,EAAW;AACV,aAAO,KAAK,CAAC,KAAb;AACA,KAFD,MAEO;AACN,aAAO,KAAK,aAAZ;AACA;AACD;;AA3C2C","sourceRoot":"","sourcesContent":["import { Timeline } from \"./Timeline\";\nimport { Tone } from \"../Tone\";\n/**\n * Represents a single value which is gettable and settable in a timed way\n */\nexport class TimelineValue extends Tone {\n    /**\n     * @param initialValue The value to return if there is no scheduled values\n     */\n    constructor(initialValue) {\n        super();\n        this.name = \"TimelineValue\";\n        /**\n         * The timeline which stores the values\n         */\n        this._timeline = new Timeline({ memory: 10 });\n        this._initialValue = initialValue;\n    }\n    /**\n     * Set the value at the given time\n     */\n    set(value, time) {\n        this._timeline.add({\n            value, time\n        });\n        return this;\n    }\n    /**\n     * Get the value at the given time\n     */\n    get(time) {\n        const event = this._timeline.get(time);\n        if (event) {\n            return event.value;\n        }\n        else {\n            return this._initialValue;\n        }\n    }\n}\n//# sourceMappingURL=TimelineValue.js.map"]},"metadata":{},"sourceType":"module"}