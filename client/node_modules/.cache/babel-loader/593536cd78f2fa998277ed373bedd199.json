{"ast":null,"code":"// 3rd party library imports\n// project imports\nimport { Visualizer } from '../Visualizers';\nexport const Natedude_Visual = new Visualizer('Natedude_Visual', (p5, analyzer) => {\n  const width = window.innerWidth;\n  const height = window.innerHeight / 2;\n  const fftSize = 4096;\n  analyzer.set({\n    type: 'fft',\n    size: 4096,\n    smoothing: 0.8\n  });\n  const dim = Math.min(width, height);\n  p5.background(0, 0, 0, 255);\n  p5.strokeWeight(dim * 0.01);\n  p5.stroke(255, 255, 255, 255);\n  const values = analyzer.getValue(); //len = width not 256\n\n  const len = values.length;\n  console.log(`values.length: ${len}`);\n  console.log(`values[0]: ${values[0]} - values[]]: ${values[len - 1]}`);\n\n  for (let i = 0; i < values.length; i++) {\n    const amplitude = values[i]; // -1 < amplitude < 1\n    // console.log(amplitude);\n    // maps i from 0-255 range to 0-width range -> x\n    // x pos of line\n\n    const x = p5.map(i, 0, values.length - 1, 0, width); // map range 0-(-900) to 0-height\n\n    const y = p5.map(amplitude, 0, -900, 0, height); // height of line\n    // const y = height / 2 + amplitude * height;\n\n    console.log(`start (x,y): (${x},${0}) - end (x,y): (${x},${y})`);\n    p5.line(x, 0, x, y);\n  }\n}); // export const Natedude_Visual = new Visualizer(\n//   'Natedude_Visual',\n//   (p5: P5, analyzer: Tone.Analyser) => {\n//     const width = window.innerWidth;\n//     const height = window.innerHeight / 2;\n//     const dim = Math.min(width, height);\n//     p5.background(0, 0, 0, 255);\n//     p5.strokeWeight(dim * 0.01);\n//     p5.stroke(255, 255, 255, 255);\n//     p5.noFill();\n//     const values = analyzer.getValue(); //len 256\n//     p5.beginShape();\n//     for (let i = 0; i < values.length; i++) {\n//       const amplitude = values[i] as number; // -1 < amplitude < 1\n//       if(i % 100 === 0){\n//         console.log(values.length);\n//       }\n//       const x = p5.map(i, 0, values.length - 1, 0, width);\n//       // maps i from 0-255 range to 0-width range -> x\n//       const y = height / 2 + amplitude * height;\n//       // Place vertex\n//       p5.vertex(x, y);\n//     }\n//     p5.endShape();\n//   },\n// );\n\n/*\nHow to add viz to sidebar in app: (replace Natedude with your github handle)\n- duplicate Waveform.tsx\n- rename file to Natedude_Visual\n- rename WaveformVisualizer to Natedude_Visual\nline 9ish: export const Natedude_Visual = new Visualizer(\n- rename 'Waveform' string to 'Natedude_Visual' on next line\n- go to State.tsx and create a comment with your school name to put your stuff under\n// Nathan Hildum\n    - add import for Natedude_Visual\n    import { Natedude_Visual } from './visualizers/Natedude_Visual';\n    - add Natedude_Visual to list of visualizers on line 21ish\n    const visualizers = List([WaveformVisualizer, Natedude_Visual]);\n*/","map":{"version":3,"sources":["/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/visualizers/Natedude_Visual.tsx"],"names":["Visualizer","Natedude_Visual","p5","analyzer","width","window","innerWidth","height","innerHeight","fftSize","set","type","size","smoothing","dim","Math","min","background","strokeWeight","stroke","values","getValue","len","length","console","log","i","amplitude","x","map","y","line"],"mappings":"AAAA;AAIA;AACA,SAASA,UAAT,QAA2B,gBAA3B;AAEA,OAAO,MAAMC,eAAe,GAAG,IAAID,UAAJ,CAC7B,iBAD6B,EAE7B,CAACE,EAAD,EAASC,QAAT,KAAqC;AACnC,QAAMC,KAAK,GAAGC,MAAM,CAACC,UAArB;AACA,QAAMC,MAAM,GAAGF,MAAM,CAACG,WAAP,GAAqB,CAApC;AACA,QAAMC,OAAO,GAAE,IAAf;AACAN,EAAAA,QAAQ,CAACO,GAAT,CAAa;AACXC,IAAAA,IAAI,EAAE,KADK;AAEXC,IAAAA,IAAI,EAAG,IAFI;AAGXC,IAAAA,SAAS,EAAE;AAHA,GAAb;AAMA,QAAMC,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASZ,KAAT,EAAgBG,MAAhB,CAAZ;AACAL,EAAAA,EAAE,CAACe,UAAH,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,GAAvB;AACAf,EAAAA,EAAE,CAACgB,YAAH,CAAgBJ,GAAG,GAAG,IAAtB;AACAZ,EAAAA,EAAE,CAACiB,MAAH,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB;AAEA,QAAMC,MAAM,GAAGjB,QAAQ,CAACkB,QAAT,EAAf,CAfmC,CAeC;;AACpC,QAAMC,GAAG,GAAGF,MAAM,CAACG,MAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiBH,GAAI,EAAlC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAa,cAAaL,MAAM,CAAC,CAAD,CAAI,iBAAgBA,MAAM,CAAEE,GAAG,GAAG,CAAR,CAAY,EAAtE;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,MAAM,CAACG,MAA3B,EAAmCG,CAAC,EAApC,EAAwC;AACtC,UAAMC,SAAS,GAAGP,MAAM,CAACM,CAAD,CAAxB,CADsC,CACC;AAEvC;AAEA;AACA;;AACA,UAAME,CAAC,GAAG1B,EAAE,CAAC2B,GAAH,CAAOH,CAAP,EAAU,CAAV,EAAaN,MAAM,CAACG,MAAP,GAAgB,CAA7B,EAAgC,CAAhC,EAAmCnB,KAAnC,CAAV,CAPsC,CAStC;;AACA,UAAM0B,CAAC,GAAG5B,EAAE,CAAC2B,GAAH,CAAOF,SAAP,EAAkB,CAAlB,EAAqB,CAAC,GAAtB,EAA2B,CAA3B,EAA8BpB,MAA9B,CAAV,CAVsC,CAWtC;AACA;;AAEAiB,IAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBG,CAAE,IAAG,CAAE,mBAAkBA,CAAE,IAAGE,CAAE,GAA7D;AACA5B,IAAAA,EAAE,CAAC6B,IAAH,CAAQH,CAAR,EAAU,CAAV,EAAYA,CAAZ,EAAcE,CAAd;AACD;AACF,CAtC4B,CAAxB,C,CA0CP;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// 3rd party library imports\nimport P5 from 'p5';\nimport * as Tone from 'tone';\n\n// project imports\nimport { Visualizer } from '../Visualizers';\n\nexport const Natedude_Visual = new Visualizer(\n  'Natedude_Visual',\n  (p5: P5, analyzer: Tone.Analyser) => {\n    const width = window.innerWidth;\n    const height = window.innerHeight / 2;\n    const fftSize= 4096;\n    analyzer.set({\n      type: 'fft',\n      size:  4096,\n      smoothing: 0.8\n    });\n\n    const dim = Math.min(width, height);\n    p5.background(0, 0, 0, 255);\n    p5.strokeWeight(dim * 0.01);\n    p5.stroke(255, 255, 255, 255);\n\n    const values = analyzer.getValue(); //len = width not 256\n    const len = values.length\n    console.log(`values.length: ${len}`)\n    console.log(`values[0]: ${values[0]} - values[]]: ${values[ len - 1 ]}`)\n    for (let i = 0; i < values.length; i++) {\n      const amplitude = values[i] as number; // -1 < amplitude < 1\n\n      // console.log(amplitude);\n\n      // maps i from 0-255 range to 0-width range -> x\n      // x pos of line\n      const x = p5.map(i, 0, values.length - 1, 0, width);\n\n      // map range 0-(-900) to 0-height\n      const y = p5.map(amplitude, 0, -900, 0, height);\n      // height of line\n      // const y = height / 2 + amplitude * height;\n\n      console.log(`start (x,y): (${x},${0}) - end (x,y): (${x},${y})`);\n      p5.line(x,0,x,y);\n    }\n  },\n);\n\n\n// export const Natedude_Visual = new Visualizer(\n//   'Natedude_Visual',\n//   (p5: P5, analyzer: Tone.Analyser) => {\n//     const width = window.innerWidth;\n//     const height = window.innerHeight / 2;\n//     const dim = Math.min(width, height);\n\n//     p5.background(0, 0, 0, 255);\n\n//     p5.strokeWeight(dim * 0.01);\n//     p5.stroke(255, 255, 255, 255);\n//     p5.noFill();\n\n//     const values = analyzer.getValue(); //len 256\n//     p5.beginShape();\n//     for (let i = 0; i < values.length; i++) {\n//       const amplitude = values[i] as number; // -1 < amplitude < 1\n//       if(i % 100 === 0){\n//         console.log(values.length);\n//       }\n//       const x = p5.map(i, 0, values.length - 1, 0, width);\n//       // maps i from 0-255 range to 0-width range -> x\n//       const y = height / 2 + amplitude * height;\n//       // Place vertex\n//       p5.vertex(x, y);\n//     }\n//     p5.endShape();\n//   },\n// );\n\n/*\nHow to add viz to sidebar in app: (replace Natedude with your github handle)\n- duplicate Waveform.tsx\n- rename file to Natedude_Visual\n- rename WaveformVisualizer to Natedude_Visual\nline 9ish: export const Natedude_Visual = new Visualizer(\n- rename 'Waveform' string to 'Natedude_Visual' on next line\n- go to State.tsx and create a comment with your school name to put your stuff under\n// Nathan Hildum\n    - add import for Natedude_Visual\n    import { Natedude_Visual } from './visualizers/Natedude_Visual';\n    - add Natedude_Visual to list of visualizers on line 21ish\n    const visualizers = List([WaveformVisualizer, Natedude_Visual]);\n*/"]},"metadata":{},"sourceType":"module"}