{"ast":null,"code":"var _jsxFileName = \"/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/jaq19_instrument.tsx\";\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\nimport React from 'react'; // project imports\n\nimport { Instrument } from '../Instruments';\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PianoKey({\n  note,\n  synth,\n  minor,\n  index\n}) {\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n  return (\n    /*#__PURE__*/\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    _jsxDEV(\"div\", {\n      onMouseDown: () => synth === null || synth === void 0 ? void 0 : synth.triggerAttackRelease(`${note}`, \"8n\") //onMouseDown={() => synth?.triggerAttackRelease(`${note}`)} // Question: what is `onMouseDown`?\n      ,\n      onMouseUp: () => synth === null || synth === void 0 ? void 0 : synth.triggerRelease('+0.05') // Question: what is `onMouseUp`?\n      ,\n      className: classNames('ba pointer absolute dim', {\n        'bg-black black h3': minor,\n        // minor keys are black\n        'orange bg-orange h4': !minor // major keys are white // line 43+ changed from black bg-white h4 to black bg-brown h4 \n\n      }),\n      style: {\n        // CSS\n        top: 0,\n        left: `${index * 2}rem`,\n        zIndex: minor ? 1 : 0,\n        width: minor ? '1.5rem' : '2rem',\n        marginLeft: minor ? '0.25rem' : 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  );\n} // eslint-disable-next-line\n\n_c = PianoKey;\n\nfunction PianoKeyWithoutJSX({\n  note,\n  synth,\n  minor,\n  index\n}) {\n  /**\n   * This React component for pedagogical purposes.\n   * See `PianoKey` for the React component with JSX (JavaScript XML).\n   */\n  return /*#__PURE__*/React.createElement('div', {\n    onMouseDown: () => synth === null || synth === void 0 ? void 0 : synth.triggerAttackRelease(`${note}`, \"8n\"),\n    //onMouseDown: () => synth?.triggerAttack(`${note}`),\n    onMouseUp: () => synth === null || synth === void 0 ? void 0 : synth.triggerRelease('+0.05'),\n    //onMouseUp: () => synth?.triggerRelease('+0.25'),\n    className: classNames('ba pointer absolute dim', {\n      'bg-black black h3': minor,\n      'orange bg-orange h4': !minor // line 75+ changed from black bg-white h4 to black bg-brown h4\n\n    }),\n    style: {\n      top: 0,\n      left: `${index * 2}rem`,\n      zIndex: minor ? 1 : 0,\n      width: minor ? '1.5rem' : '2rem',\n      marginLeft: minor ? '0.25rem' : 0\n    }\n  }, []);\n}\n\n_c2 = PianoKeyWithoutJSX;\n\nfunction PianoType({\n  title,\n  onClick,\n  active\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n      'b--black black': active,\n      'gray b--light-gray': !active\n    }),\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = PianoType;\n\nfunction Piano({\n  synth,\n  setSynth\n}) {\n  const keys = List([{\n    note: 'C',\n    idx: 0\n  }, {\n    note: 'D',\n    idx: 2\n  }, {\n    note: 'E',\n    idx: 4\n  }, {\n    note: 'F',\n    idx: 6\n  }, {\n    note: 'G',\n    idx: 8\n  }, {\n    note: 'A',\n    idx: 10\n  }, {\n    note: 'B',\n    idx: 12\n  }, {\n    note: 'C',\n    idx: 14\n  }, {\n    note: 'D',\n    idx: 14\n  }, {\n    note: 'E',\n    idx: 16\n  }]);\n\n  const setOscillator = newType => {\n    console.log(\"setOscillator, has been CALLED!!!\");\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      return new Tone.Synth({\n        oscillator: {\n          type: newType\n        }\n      }).toDestination();\n    });\n  };\n  /* added changed from 129 to 135 */\n\n\n  const setOscillator2 = () => {\n    console.log(\"setOscillator2, has been CALLED!!!\");\n    const synth = new Tone.PolySynth().toDestination();\n    synth.set({\n      detune: -1200\n    });\n    return synth;\n  }; // end of changes\n\n  /* .type ↝ String #\n  The type of the oscillator: either sine, square, triangle, or sawtooth. \n  Also capable of setting the first x number of partials of the oscillator. \n  For example: “sine4” would set be the first 4 partials of the sine wave \n  and “triangle8” would set the first 8 partials of the triangle wave.\n  Uses PeriodicWave internally even for native types so that it can set the phase. \n  PeriodicWave equations are from the Webkit Web Audio implementation.*/\n\n\n  const oscillators = List(['sine', 'sine30', 'square10', 'triangle10', 'fmtriangle10']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative dib h4 w-100 ml4\",\n      children: Range(3, 4).map(octave => keys.map(key => {\n        const isMinor = key.note.indexOf('b') !== -1;\n        const note = `${key.note}${octave}`;\n        return /*#__PURE__*/_jsxDEV(PianoKey, {\n          //react key\n          note: note,\n          synth: synth,\n          minor: isMinor,\n          octave: octave,\n          index: (octave - 2) * 7 + key.idx\n        }, note, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'pl4 pt4 flex',\n      children: oscillators.map(o => /*#__PURE__*/_jsxDEV(PianoType, {\n        title: o,\n        onClick: () => setOscillator(o),\n        active: (synth === null || synth === void 0 ? void 0 : synth.oscillator.type) === o\n      }, o, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = Piano;\nexport const jaq19_instrument = new Instrument('Xylophone', Piano);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"PianoKey\");\n$RefreshReg$(_c2, \"PianoKeyWithoutJSX\");\n$RefreshReg$(_c3, \"PianoType\");\n$RefreshReg$(_c4, \"Piano\");","map":{"version":3,"sources":["/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/jaq19_instrument.tsx"],"names":["Tone","classNames","List","Range","React","Instrument","PianoKey","note","synth","minor","index","triggerAttackRelease","triggerRelease","top","left","zIndex","width","marginLeft","PianoKeyWithoutJSX","createElement","onMouseDown","onMouseUp","className","style","PianoType","title","onClick","active","Piano","setSynth","keys","idx","setOscillator","newType","console","log","oldSynth","disconnect","Synth","oscillator","type","toDestination","setOscillator2","PolySynth","set","detune","oscillators","map","octave","key","isMinor","indexOf","o","jaq19_instrument"],"mappings":"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","sourcesContent":["// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\nimport React from 'react';\n\n// project imports\nimport { Instrument, InstrumentProps } from '../Instruments';\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\ninterface PianoKeyProps {\n  note: string; // C, Db, D, Eb, E, F, Gb, G, Ab, A, Bb, B\n  duration?: string;\n  synth?: Tone.Synth | Tone.MonoSynth; // Contains library code for making sound\n  minor?: boolean; // True if minor key, false if major key\n  octave: number;\n  index: number; // octave + index together give a location for the piano key\n}\n\nexport function PianoKey({\n  note,\n  synth,\n  minor,\n  index,\n}: PianoKeyProps): JSX.Element {\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n  return (\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    <div\n    onMouseDown={() => synth?.triggerAttackRelease(`${note}`, \"8n\")}//onMouseDown={() => synth?.triggerAttackRelease(`${note}`)} // Question: what is `onMouseDown`?\n      onMouseUp={() => synth?.triggerRelease('+0.05')} // Question: what is `onMouseUp`?\n      className={classNames('ba pointer absolute dim', {\n        'bg-black black h3': minor, // minor keys are black\n        'orange bg-orange h4': !minor, // major keys are white // line 43+ changed from black bg-white h4 to black bg-brown h4 \n      })}\n      style={{\n        // CSS\n        top: 0,\n        left: `${index * 2}rem`,\n        zIndex: minor ? 1 : 0,\n        width: minor ? '1.5rem' : '2rem',\n        marginLeft: minor ? '0.25rem' : 0,\n      }}\n    ></div>\n  );\n}\n\n// eslint-disable-next-line\nfunction PianoKeyWithoutJSX({\n  note,\n  synth,\n  minor,\n  index,\n}: PianoKeyProps): JSX.Element {\n  /**\n   * This React component for pedagogical purposes.\n   * See `PianoKey` for the React component with JSX (JavaScript XML).\n   */\n  return React.createElement(\n    'div',\n    {\n      onMouseDown: () => synth?.triggerAttackRelease(`${note}`, \"8n\"),//onMouseDown: () => synth?.triggerAttack(`${note}`),\n      onMouseUp: () => synth?.triggerRelease('+0.05'), //onMouseUp: () => synth?.triggerRelease('+0.25'),\n      className: classNames('ba pointer absolute dim', {\n        'bg-black black h3': minor,  \n        'orange bg-orange h4': !minor, // line 75+ changed from black bg-white h4 to black bg-brown h4\n      }),\n      style: {\n        top: 0,\n        left: `${index * 2}rem`,\n        zIndex: minor ? 1 : 0,\n        width: minor ? '1.5rem' : '2rem',\n        marginLeft: minor ? '0.25rem' : 0,\n      },\n    },\n    [],\n  );\n}\n\nfunction PianoType({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      className={classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n        'b--black black': active,\n        'gray b--light-gray': !active,\n      })}\n    >\n      {title}\n    </div>\n  );\n}\n\nfunction Piano({ synth, setSynth }: InstrumentProps): JSX.Element {\n  const keys = List([\n    { note: 'C', idx: 0 },\n    { note: 'D', idx: 2 },\n    { note: 'E', idx: 4 },\n    { note: 'F', idx: 6 },\n    { note: 'G', idx: 8 },\n    { note: 'A', idx: 10 },\n    { note: 'B', idx: 12 },\n    { note: 'C', idx: 14 },\n    { note: 'D', idx: 14 },\n    { note: 'E', idx: 16 },\n  ]);\n\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    console.log(\"setOscillator, has been CALLED!!!\");\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n\n      return new Tone.Synth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n      }).toDestination();\n    });\n  };\n  /* added changed from 129 to 135 */\n  const setOscillator2 = () => {\n    console.log(\"setOscillator2, has been CALLED!!!\");\n    const synth = new Tone.PolySynth().toDestination();\n    synth.set({ detune: -1200 });\n    return synth; \n  } // end of changes\n/* .type ↝ String #\nThe type of the oscillator: either sine, square, triangle, or sawtooth. \nAlso capable of setting the first x number of partials of the oscillator. \nFor example: “sine4” would set be the first 4 partials of the sine wave \nand “triangle8” would set the first 8 partials of the triangle wave.\nUses PeriodicWave internally even for native types so that it can set the phase. \nPeriodicWave equations are from the Webkit Web Audio implementation.*/\n  const oscillators: List<OscillatorType> = List([\n    'sine',\n    'sine30',\n    'square10',\n    'triangle10',\n    'fmtriangle10',\n  ]) as List<OscillatorType>;\n\n  return (\n    <div className=\"pv4\">\n      <div className=\"relative dib h4 w-100 ml4\">\n        {Range(3, 4).map(octave =>\n          keys.map(key => {\n            const isMinor = key.note.indexOf('b') !== -1;\n            const note = `${key.note}${octave}`;\n            return (\n              <PianoKey\n                key={note} //react key\n                note={note}\n                synth={synth}\n                minor={isMinor}\n                octave={octave}\n                index={(octave - 2) * 7 + key.idx}\n              />\n            );\n          }),\n        )}\n      </div>\n      <div className={'pl4 pt4 flex'}>\n        {oscillators.map(o => (\n          <PianoType\n            key={o}\n            title={o}\n            onClick={() => setOscillator(o)}\n            active={synth?.oscillator.type === o}\n          />\n        ))}\n      </div>\n      {/* added changed see lines 163-171 */}\n      {/* <div className={'pl4 pt4 flex'}> \n        { <PianoType\n            key={'sine2'} \n            title={'sine2'}\n            onClick={() => setOscillator2()}\n            active={true}\n          />\n        }\n      </div>  */} {/* end of added */}\n    </div>\n  );\n}\n\nexport const jaq19_instrument = new Instrument('Xylophone', Piano);"]},"metadata":{},"sourceType":"module"}