{"ast":null,"code":"import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativePannerNodeFactory = createNativePannerNodeFaker => {\n  return (nativeContext, options) => {\n    const nativePannerNode = nativeContext.createPanner(); // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n\n    if (nativePannerNode.orientationX === undefined) {\n      return createNativePannerNodeFaker(nativeContext, options);\n    }\n\n    assignNativeAudioNodeOptions(nativePannerNode, options);\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n    return nativePannerNode;\n  };\n};","map":{"version":3,"sources":["../../../src/factories/native-panner-node-factory.ts"],"names":[],"mappings":"AAAA,SAAS,oCAAT,QAAqD,uDAArD;AACA,SAAS,2BAAT,QAA4C,4CAA5C;AACA,SAAS,4BAAT,QAA6C,6CAA7C;AAGA,OAAO,MAAM,6BAA6B,GAAqC,2BAAD,IAAgC;AAC1G,SAAO,CAAC,aAAD,EAAgB,OAAhB,KAA2B;AAC9B,UAAM,gBAAgB,GAAG,aAAa,CAAC,YAAd,EAAzB,CAD8B,CAG9B;;AACA,QAAI,gBAAgB,CAAC,YAAjB,KAAkC,SAAtC,EAAiD;AAC7C,aAAO,2BAA2B,CAAC,aAAD,EAAgB,OAAhB,CAAlC;AACH;;AAED,IAAA,4BAA4B,CAAC,gBAAD,EAAmB,OAAnB,CAA5B;AAEA,IAAA,oCAAoC,CAAC,gBAAD,EAAmB,OAAnB,EAA4B,cAA5B,CAApC;AACA,IAAA,oCAAoC,CAAC,gBAAD,EAAmB,OAAnB,EAA4B,cAA5B,CAApC;AACA,IAAA,oCAAoC,CAAC,gBAAD,EAAmB,OAAnB,EAA4B,cAA5B,CAApC;AACA,IAAA,oCAAoC,CAAC,gBAAD,EAAmB,OAAnB,EAA4B,WAA5B,CAApC;AACA,IAAA,oCAAoC,CAAC,gBAAD,EAAmB,OAAnB,EAA4B,WAA5B,CAApC;AACA,IAAA,oCAAoC,CAAC,gBAAD,EAAmB,OAAnB,EAA4B,WAA5B,CAApC;AAEA,IAAA,2BAA2B,CAAC,gBAAD,EAAmB,OAAnB,EAA4B,gBAA5B,CAA3B;AACA,IAAA,2BAA2B,CAAC,gBAAD,EAAmB,OAAnB,EAA4B,gBAA5B,CAA3B;AACA,IAAA,2BAA2B,CAAC,gBAAD,EAAmB,OAAnB,EAA4B,eAA5B,CAA3B;AACA,IAAA,2BAA2B,CAAC,gBAAD,EAAmB,OAAnB,EAA4B,eAA5B,CAA3B;AACA,IAAA,2BAA2B,CAAC,gBAAD,EAAmB,OAAnB,EAA4B,aAA5B,CAA3B;AACA,IAAA,2BAA2B,CAAC,gBAAD,EAAmB,OAAnB,EAA4B,cAA5B,CAA3B;AACA,IAAA,2BAA2B,CAAC,gBAAD,EAAmB,OAAnB,EAA4B,aAA5B,CAA3B;AACA,IAAA,2BAA2B,CAAC,gBAAD,EAAmB,OAAnB,EAA4B,eAA5B,CAA3B;AAEA,WAAO,gBAAP;AACH,GA3BD;AA4BH,CA7BM","sourceRoot":"","sourcesContent":["import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativePannerNodeFactory = (createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = nativeContext.createPanner();\n        // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativePannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n        return nativePannerNode;\n    };\n};\n//# sourceMappingURL=native-panner-node-factory.js.map"]},"metadata":{},"sourceType":"module"}