{"ast":null,"code":"/**\n * Firefox up to version 62 did not kick off the processing of the StereoPannerNode if the value of pan was zero.\n */\nexport const createTestStereoPannerNodeDefaultValueSupport = nativeOfflineAudioContextConstructor => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return Promise.resolve(false);\n    }\n\n    const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n    /*\n     * Bug #105: Safari does not support the StereoPannerNode. Therefore the returned value should normally be false but the faker does\n     * support the tested behaviour.\n     */\n\n    if (nativeOfflineAudioContext.createStereoPanner === undefined) {\n      return Promise.resolve(true);\n    } // Bug #62: Safari does not support ConstantSourceNodes.\n\n\n    if (nativeOfflineAudioContext.createConstantSource === undefined) {\n      return Promise.resolve(true);\n    }\n\n    const constantSourceNode = nativeOfflineAudioContext.createConstantSource();\n    const stereoPanner = nativeOfflineAudioContext.createStereoPanner();\n    constantSourceNode.channelCount = 1;\n    constantSourceNode.offset.value = 1;\n    stereoPanner.channelCount = 1;\n    constantSourceNode.start();\n    constantSourceNode.connect(stereoPanner).connect(nativeOfflineAudioContext.destination);\n    return nativeOfflineAudioContext.startRendering().then(buffer => buffer.getChannelData(0)[0] !== 1);\n  };\n};","map":{"version":3,"sources":["../../../src/factories/test-stereo-panner-node-default-value-support.ts"],"names":[],"mappings":"AAEA;;AAEG;AACH,OAAO,MAAM,6CAA6C,GACtD,oCAD0G,IAE1G;AACA,SAAO,MAAK;AACR,QAAI,oCAAoC,KAAK,IAA7C,EAAmD;AAC/C,aAAO,OAAO,CAAC,OAAR,CAAgB,KAAhB,CAAP;AACH;;AAED,UAAM,yBAAyB,GAAG,IAAI,oCAAJ,CAAyC,CAAzC,EAA4C,CAA5C,EAA+C,KAA/C,CAAlC;AAEA;;;AAGG;;AACH,QAAI,yBAAyB,CAAC,kBAA1B,KAAiD,SAArD,EAAgE;AAC5D,aAAO,OAAO,CAAC,OAAR,CAAgB,IAAhB,CAAP;AACH,KAbO,CAeR;;;AACA,QAAI,yBAAyB,CAAC,oBAA1B,KAAmD,SAAvD,EAAkE;AAC9D,aAAO,OAAO,CAAC,OAAR,CAAgB,IAAhB,CAAP;AACH;;AAED,UAAM,kBAAkB,GAAG,yBAAyB,CAAC,oBAA1B,EAA3B;AACA,UAAM,YAAY,GAAG,yBAAyB,CAAC,kBAA1B,EAArB;AAEA,IAAA,kBAAkB,CAAC,YAAnB,GAAkC,CAAlC;AACA,IAAA,kBAAkB,CAAC,MAAnB,CAA0B,KAA1B,GAAkC,CAAlC;AAEA,IAAA,YAAY,CAAC,YAAb,GAA4B,CAA5B;AAEA,IAAA,kBAAkB,CAAC,KAAnB;AAEA,IAAA,kBAAkB,CAAC,OAAnB,CAA2B,YAA3B,EAAyC,OAAzC,CAAiD,yBAAyB,CAAC,WAA3E;AAEA,WAAO,yBAAyB,CAAC,cAA1B,GAA2C,IAA3C,CAAiD,MAAD,IAAY,MAAM,CAAC,cAAP,CAAsB,CAAtB,EAAyB,CAAzB,MAAgC,CAA5F,CAAP;AACH,GAjCD;AAkCH,CArCM","sourceRoot":"","sourcesContent":["/**\n * Firefox up to version 62 did not kick off the processing of the StereoPannerNode if the value of pan was zero.\n */\nexport const createTestStereoPannerNodeDefaultValueSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        /*\n         * Bug #105: Safari does not support the StereoPannerNode. Therefore the returned value should normally be false but the faker does\n         * support the tested behaviour.\n         */\n        if (nativeOfflineAudioContext.createStereoPanner === undefined) {\n            return Promise.resolve(true);\n        }\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeOfflineAudioContext.createConstantSource === undefined) {\n            return Promise.resolve(true);\n        }\n        const constantSourceNode = nativeOfflineAudioContext.createConstantSource();\n        const stereoPanner = nativeOfflineAudioContext.createStereoPanner();\n        constantSourceNode.channelCount = 1;\n        constantSourceNode.offset.value = 1;\n        stereoPanner.channelCount = 1;\n        constantSourceNode.start();\n        constantSourceNode.connect(stereoPanner).connect(nativeOfflineAudioContext.destination);\n        return nativeOfflineAudioContext.startRendering().then((buffer) => buffer.getChannelData(0)[0] !== 1);\n    };\n};\n//# sourceMappingURL=test-stereo-panner-node-default-value-support.js.map"]},"metadata":{},"sourceType":"module"}