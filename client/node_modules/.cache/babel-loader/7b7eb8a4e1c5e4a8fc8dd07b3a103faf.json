{"ast":null,"code":"// 3rd party library imports\n// import { FFT } from 'tone';\n// project imports\nimport { Visualizer } from '../Visualizers';\nexport const jaq19_Visual = new Visualizer('jaq19_Visual', (p5, analyzer) => {\n  const width = window.innerWidth;\n  const height = window.innerHeight / 2;\n  const dim = Math.min(width, height);\n  p5.background(0, 0, 138, 255); // p5.background(0, 0, 0, 255);\n\n  p5.strokeWeight(dim * 0.01);\n  p5.stroke(255, 255, 138, 255); // p5.stroke(255, 255, 255, 255);\n\n  p5.noFill();\n  const values = analyzer.getValue();\n  p5.beginShape();\n\n  for (let i = 0; i < values.length; i++) {\n    const amplitude = values[i];\n    const x = p5.map(i, 0, values.length - 1, 0, width);\n    const y = height + 2 * amplitude * height; //const y = height / 2 + amplitude * height;     \n    // Place vertex\n\n    p5.vertex(x, y); // console.log(`Amplitude: ${amplitude}, x:${x}, y:${y}`);\n  }\n\n  p5.endShape();\n});\n/* export const jaq19_Visual = new Visualizer(\n  'jaq19_Visual',\n  (p5: P5, analyzer: Tone.Analyser) => {\n    const width = window.innerWidth;\n    const height = window.innerHeight/2;//const height = window.innerHeight / 2;\n    //const dim = Math.min(width, height);\n    \n    //const fft = analyzer.set({type:'fft', size:128}); // NEED TO FIX, DOES NOT WORK!!!\n\n\n    p5.background(0); // p5.background(0, 0, 0, 255);\n    p5.stroke(255); // p5.stroke(255, 255, 255, 255);\n    p5.noFill();\n\n    const values = analyzer.getValue();\n    p5.beginShape();\n    \n    for (let i = 0; i < values.length; i++) {\n      const amplitude = values[i] as number;\n      //const x = p5.map(i, 0, values.length - 1, 0, width);\n      //const y = height / 2 + amplitude * height;   \n      // Place vertex\n      var r = p5.map(amplitude,(values.length - 1)*(.75), values.length - 1, 0, 20);\n      var x = p5.map(i, 4080, values.length - 1, 0, width/2);// var x = p5.map(i, 2040, values.length - 1, 0, width/2);\n      var y = height + amplitude * height/2;//var y = height / 2 + amplitude * height;\n        x = r * Math.cos(x+20)\n        y = r * Math.sin(y+20)\n      p5.vertex(x+200, y+200);\n      \n      // console.log(`Amplitude: ${amplitude}, x:${x}, y:${y}`);\n\n    }\n\n    p5.endShape();\n  },\n); */","map":{"version":3,"sources":["/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/visualizers/jaq19_Visual.tsx"],"names":["Visualizer","jaq19_Visual","p5","analyzer","width","window","innerWidth","height","innerHeight","dim","Math","min","background","strokeWeight","stroke","noFill","values","getValue","beginShape","i","length","amplitude","x","map","y","vertex","endShape"],"mappings":"AAAA;AAGA;AAEA;AACA,SAASA,UAAT,QAA2B,gBAA3B;AAEA,OAAO,MAAMC,YAAY,GAAG,IAAID,UAAJ,CAC1B,cAD0B,EAE1B,CAACE,EAAD,EAASC,QAAT,KAAqC;AACnC,QAAMC,KAAK,GAAGC,MAAM,CAACC,UAArB;AACA,QAAMC,MAAM,GAAGF,MAAM,CAACG,WAAP,GAAqB,CAApC;AACA,QAAMC,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASP,KAAT,EAAgBG,MAAhB,CAAZ;AAEAL,EAAAA,EAAE,CAACU,UAAH,CAAc,CAAd,EAAiB,CAAjB,EAAoB,GAApB,EAAyB,GAAzB,EALmC,CAKJ;;AAE/BV,EAAAA,EAAE,CAACW,YAAH,CAAgBJ,GAAG,GAAG,IAAtB;AACAP,EAAAA,EAAE,CAACY,MAAH,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,EARmC,CAQJ;;AAC/BZ,EAAAA,EAAE,CAACa,MAAH;AAEA,QAAMC,MAAM,GAAGb,QAAQ,CAACc,QAAT,EAAf;AACAf,EAAAA,EAAE,CAACgB,UAAH;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACI,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,UAAME,SAAS,GAAGL,MAAM,CAACG,CAAD,CAAxB;AACA,UAAMG,CAAC,GAAGpB,EAAE,CAACqB,GAAH,CAAOJ,CAAP,EAAU,CAAV,EAAaH,MAAM,CAACI,MAAP,GAAgB,CAA7B,EAAgC,CAAhC,EAAmChB,KAAnC,CAAV;AACA,UAAMoB,CAAC,GAAGjB,MAAM,GAAG,IAAEc,SAAF,GAAcd,MAAjC,CAHsC,CAGG;AACzC;;AACAL,IAAAA,EAAE,CAACuB,MAAH,CAAUH,CAAV,EAAaE,CAAb,EALsC,CAOtC;AAED;;AAEDtB,EAAAA,EAAE,CAACwB,QAAH;AACD,CA5ByB,CAArB;AAgCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// 3rd party library imports\nimport P5 from 'p5';\nimport * as Tone from 'tone';\n// import { FFT } from 'tone';\n\n// project imports\nimport { Visualizer } from '../Visualizers';\n\nexport const jaq19_Visual = new Visualizer(\n  'jaq19_Visual',\n  (p5: P5, analyzer: Tone.Analyser) => {\n    const width = window.innerWidth;\n    const height = window.innerHeight / 2;\n    const dim = Math.min(width, height);\n\n    p5.background(0, 0, 138, 255); // p5.background(0, 0, 0, 255);\n\n    p5.strokeWeight(dim * 0.01);\n    p5.stroke(255, 255, 138, 255); // p5.stroke(255, 255, 255, 255);\n    p5.noFill();\n\n    const values = analyzer.getValue();\n    p5.beginShape();\n\n    for (let i = 0; i < values.length; i++) {\n      const amplitude = values[i] as number;\n      const x = p5.map(i, 0, values.length - 1, 0, width);\n      const y = height + 2*amplitude * height; //const y = height / 2 + amplitude * height;     \n      // Place vertex\n      p5.vertex(x, y);\n      \n      // console.log(`Amplitude: ${amplitude}, x:${x}, y:${y}`);\n\n    }\n\n    p5.endShape();\n  },\n);\n\n\n/* export const jaq19_Visual = new Visualizer(\n  'jaq19_Visual',\n  (p5: P5, analyzer: Tone.Analyser) => {\n    const width = window.innerWidth;\n    const height = window.innerHeight/2;//const height = window.innerHeight / 2;\n    //const dim = Math.min(width, height);\n    \n    //const fft = analyzer.set({type:'fft', size:128}); // NEED TO FIX, DOES NOT WORK!!!\n\n\n    p5.background(0); // p5.background(0, 0, 0, 255);\n    p5.stroke(255); // p5.stroke(255, 255, 255, 255);\n    p5.noFill();\n\n    const values = analyzer.getValue();\n    p5.beginShape();\n    \n    for (let i = 0; i < values.length; i++) {\n      const amplitude = values[i] as number;\n      //const x = p5.map(i, 0, values.length - 1, 0, width);\n      //const y = height / 2 + amplitude * height;   \n      // Place vertex\n      var r = p5.map(amplitude,(values.length - 1)*(.75), values.length - 1, 0, 20);\n      var x = p5.map(i, 4080, values.length - 1, 0, width/2);// var x = p5.map(i, 2040, values.length - 1, 0, width/2);\n      var y = height + amplitude * height/2;//var y = height / 2 + amplitude * height;\n        x = r * Math.cos(x+20)\n        y = r * Math.sin(y+20)\n      p5.vertex(x+200, y+200);\n      \n      // console.log(`Amplitude: ${amplitude}, x:${x}, y:${y}`);\n\n    }\n\n    p5.endShape();\n  },\n); */\n\n"]},"metadata":{},"sourceType":"module"}