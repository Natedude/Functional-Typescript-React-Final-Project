{"ast":null,"code":"var _jsxFileName = \"/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/Natedude_Instrument.tsx\";\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport { List, Range } from 'immutable'; // import React from 'react';\n\nimport React from 'react'; // project imports\n\nimport { Instrument } from '../Instruments';\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Piano({\n  synth,\n  setSynth\n}) {\n  const keys = List([{\n    note: 'C',\n    idx: 0\n  }, {\n    note: 'Db',\n    idx: 0.5\n  }, {\n    note: 'D',\n    idx: 1\n  }, {\n    note: 'Eb',\n    idx: 1.5\n  }, {\n    note: 'E',\n    idx: 2\n  }, {\n    note: 'F',\n    idx: 3\n  }, {\n    note: 'Gb',\n    idx: 3.5\n  }, {\n    note: 'G',\n    idx: 4\n  }, {\n    note: 'Ab',\n    idx: 4.5\n  }, {\n    note: 'A',\n    idx: 5\n  }, {\n    note: 'Bb',\n    idx: 5.5\n  }, {\n    note: 'B',\n    idx: 6\n  }]);\n\n  const setOscillator = newType => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      return new Tone.Synth({\n        oscillator: {\n          type: newType\n        }\n      }).toDestination();\n    });\n  };\n\n  const oscillators = List(['sine', 'sawtooth', 'square', 'triangle', 'fmsine', 'fmsawtooth', 'fmtriangle', 'amsine', 'amsawtooth', 'amtriangle']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative dib h4 w-100 ml4\",\n      children: Range(2, 7).map(octave => keys.map(key => {\n        const isMinor = key.note.indexOf('b') !== -1;\n        const note = `${key.note}${octave}`;\n        return /*#__PURE__*/_jsxDEV(PianoKey, {\n          //react key\n          note: note,\n          synth: synth,\n          minor: isMinor,\n          octave: octave,\n          index: (octave - 2) * 7 + key.idx\n        }, note, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'pl4 pt4 flex',\n      children: oscillators.map(o => /*#__PURE__*/_jsxDEV(PianoType, {\n        title: o,\n        onClick: () => setOscillator(o),\n        active: (synth === null || synth === void 0 ? void 0 : synth.oscillator.type) === o\n      }, o, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Piano;\nexport const Natedude_Instrument = new Instrument('Natedude_Instrument', Piano);\n\nvar _c;\n\n$RefreshReg$(_c, \"Piano\");","map":{"version":3,"sources":["/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/Natedude_Instrument.tsx"],"names":["Tone","List","Range","React","Instrument","Piano","synth","setSynth","keys","note","idx","setOscillator","newType","oldSynth","disconnect","Synth","oscillator","type","toDestination","oscillators","map","octave","key","isMinor","indexOf","o","Natedude_Instrument"],"mappings":"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","sourcesContent":["// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\n// import React from 'react';\nimport React, { useState } from 'react';\n\n// project imports\nimport { Instrument, InstrumentProps } from '../Instruments';\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\n\ninterface DrumKitSpec {\n  kick: string; // url\n  snare: string;\n  highHat: string;\n}\n\nfunction Piano({ synth, setSynth }: InstrumentProps): JSX.Element {\n  const keys = List([\n    { note: 'C', idx: 0 },\n    { note: 'Db', idx: 0.5 },\n    { note: 'D', idx: 1 },\n    { note: 'Eb', idx: 1.5 },\n    { note: 'E', idx: 2 },\n    { note: 'F', idx: 3 },\n    { note: 'Gb', idx: 3.5 },\n    { note: 'G', idx: 4 },\n    { note: 'Ab', idx: 4.5 },\n    { note: 'A', idx: 5 },\n    { note: 'Bb', idx: 5.5 },\n    { note: 'B', idx: 6 },\n  ]);\n\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n\n      return new Tone.Synth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n      }).toDestination();\n    });\n  };\n\n\n  const oscillators: List<OscillatorType> = List([\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle',\n    'fmsine',\n    'fmsawtooth',\n    'fmtriangle',\n    'amsine',\n    'amsawtooth',\n    'amtriangle',\n  ]) as List<OscillatorType>;\n\n  return (\n    <div className=\"pv4\">\n      <div className=\"relative dib h4 w-100 ml4\">\n        {Range(2, 7).map(octave =>\n          keys.map(key => {\n            const isMinor = key.note.indexOf('b') !== -1;\n            const note = `${key.note}${octave}`;\n            return (\n              <PianoKey\n                key={note} //react key\n                note={note}\n                synth={synth}\n                minor={isMinor}\n                octave={octave}\n                index={(octave - 2) * 7 + key.idx}\n              />\n            );\n          }),\n        )}\n      </div>\n      <div className={'pl4 pt4 flex'}>\n        {oscillators.map(o => (\n          <PianoType\n            key={o}\n            title={o}\n            onClick={() => setOscillator(o)}\n            active={synth?.oscillator.type === o}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport const Natedude_Instrument = new Instrument('Natedude_Instrument', Piano);\n"]},"metadata":{},"sourceType":"module"}