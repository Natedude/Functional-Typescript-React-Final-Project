{"ast":null,"code":"var _jsxFileName = \"/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/Natedude_Instrument.tsx\",\n    _s = $RefreshSig$();\n\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable'; // import React from 'react';\n\nimport React, { useState } from 'react'; // project imports\n\nimport { Instrument } from '../Instruments';\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PianoKey({\n  note,\n  synth,\n  minor,\n  index\n}) {\n  _s();\n\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n  // eslint-disable-next-line\n  const [sampler, setSampler] = useState(new Tone.Sampler({\n    urls: {\n      A1: \"Kick.wav\"\n    },\n    baseUrl: \"http://localhost:3000/\"\n  }).toDestination());\n  return (\n    /*#__PURE__*/\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    _jsxDEV(\"div\", {\n      onMouseDown: () => sampler.triggerAttack('A1') // Question: what is `onMouseDown`?\n      ,\n      onMouseUp: () => sampler.triggerRelease('+0.25') // Question: what is `onMouseUp`?\n      ,\n      className: classNames('ba pointer absolute dim', {\n        'bg-blue green h3': minor,\n        // minor keys are black\n        'red bg-yellow h4': !minor // major keys are white\n\n      }),\n      style: {\n        // CSS\n        top: 0,\n        left: `${index * 2}rem`,\n        zIndex: minor ? 1 : 0,\n        width: minor ? '1.5rem' : '2rem',\n        marginLeft: minor ? '0.25rem' : 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)\n  );\n} // eslint-disable-next-line\n\n_s(PianoKey, \"AC6uST4G/C9psWVG+OYJ884xWFg=\");\n\n_c = PianoKey;\n\nfunction PianoKeyWithoutJSX({\n  note,\n  synth,\n  minor,\n  index\n}) {\n  /**\n   * This React component for pedagogical purposes.\n   * See `PianoKey` for the React component with JSX (JavaScript XML).\n   */\n  return /*#__PURE__*/React.createElement('div', {\n    onMouseDown: () => synth === null || synth === void 0 ? void 0 : synth.triggerAttack(`${note}`),\n    onMouseUp: () => synth === null || synth === void 0 ? void 0 : synth.triggerRelease('+0.25'),\n    className: classNames('ba pointer absolute dim', {\n      'bg-black black h3': minor,\n      'black bg-white h4': !minor\n    }),\n    style: {\n      top: 0,\n      left: `${index * 2}rem`,\n      zIndex: minor ? 1 : 0,\n      width: minor ? '1.5rem' : '2rem',\n      marginLeft: minor ? '0.25rem' : 0\n    }\n  }, []);\n}\n\n_c2 = PianoKeyWithoutJSX;\n\nfunction PianoType({\n  title,\n  onClick,\n  active\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n      'b--black black': active,\n      'gray b--light-gray': !active\n    }),\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = PianoType;\n\nfunction Piano({\n  synth,\n  setSynth\n}) {\n  const keys = List([{\n    note: 'C',\n    idx: 0\n  }, {\n    note: 'Db',\n    idx: 0.5\n  }, {\n    note: 'D',\n    idx: 1\n  }, {\n    note: 'Eb',\n    idx: 1.5\n  }, {\n    note: 'E',\n    idx: 2\n  }, {\n    note: 'F',\n    idx: 3\n  }, {\n    note: 'Gb',\n    idx: 3.5\n  }, {\n    note: 'G',\n    idx: 4\n  }, {\n    note: 'Ab',\n    idx: 4.5\n  }, {\n    note: 'A',\n    idx: 5\n  }, {\n    note: 'Bb',\n    idx: 5.5\n  }, {\n    note: 'B',\n    idx: 6\n  }]);\n\n  const setOscillator = newType => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      return new Tone.Synth({\n        oscillator: {\n          type: newType\n        }\n      }).toDestination();\n    });\n  };\n\n  const oscillators = List(['sine', 'sawtooth', 'square', 'triangle', 'fmsine', 'fmsawtooth', 'fmtriangle', 'amsine', 'amsawtooth', 'amtriangle']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative dib h4 w-100 ml4\",\n      children: Range(2, 7).map(octave => keys.map(key => {\n        const isMinor = key.note.indexOf('b') !== -1;\n        const note = `${key.note}${octave}`;\n        return /*#__PURE__*/_jsxDEV(PianoKey, {\n          //react key\n          note: note,\n          synth: synth,\n          minor: isMinor,\n          octave: octave,\n          index: (octave - 2) * 7 + key.idx\n        }, note, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'pl4 pt4 flex',\n      children: oscillators.map(o => /*#__PURE__*/_jsxDEV(PianoType, {\n        title: o,\n        onClick: () => setOscillator(o),\n        active: (synth === null || synth === void 0 ? void 0 : synth.oscillator.type) === o\n      }, o, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = Piano;\nexport const Natedude_Instrument = new Instrument('Natedude_Instrument', Piano);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"PianoKey\");\n$RefreshReg$(_c2, \"PianoKeyWithoutJSX\");\n$RefreshReg$(_c3, \"PianoType\");\n$RefreshReg$(_c4, \"Piano\");","map":{"version":3,"sources":["/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/Natedude_Instrument.tsx"],"names":["Tone","classNames","List","Range","React","useState","Instrument","PianoKey","note","synth","minor","index","sampler","setSampler","Sampler","urls","A1","baseUrl","toDestination","triggerAttack","triggerRelease","top","left","zIndex","width","marginLeft","PianoKeyWithoutJSX","createElement","onMouseDown","onMouseUp","className","style","PianoType","title","onClick","active","Piano","setSynth","keys","idx","setOscillator","newType","oldSynth","disconnect","Synth","oscillator","type","oscillators","map","octave","key","isMinor","indexOf","o","Natedude_Instrument"],"mappings":";;;AAAA;AACA,OAAO,KAAKA,IAAZ,MAAsB,MAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,WAA5B,C,CACA;;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,SAASC,UAAT,QAA4C,gBAA5C;AAEA;AACA;AACA;;;AAaA,OAAO,SAASC,QAAT,CAAkB;AACvBC,EAAAA,IADuB;AAEvBC,EAAAA,KAFuB;AAGvBC,EAAAA,KAHuB;AAIvBC,EAAAA;AAJuB,CAAlB,EAKwB;AAAA;;AAC7B;AACF;AACA;AACA;AACE;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CACpC,IAAIL,IAAI,CAACc,OAAT,CAAiB;AACfC,IAAAA,IAAI,EAAE;AACJC,MAAAA,EAAE,EAAE;AADA,KADS;AAIfC,IAAAA,OAAO,EAAE;AAJM,GAAjB,EAKGC,aALH,EADoC,CAAtC;AAQA;AAAA;AACE;AACA;AACA;AACA;AACA;AACE,MAAA,WAAW,EAAE,MAAMN,OAAO,CAACO,aAAR,CAAsB,IAAtB,CADrB,CACkD;AADlD;AAEE,MAAA,SAAS,EAAE,MAAMP,OAAO,CAACQ,cAAR,CAAuB,OAAvB,CAFnB,CAEoD;AAFpD;AAGE,MAAA,SAAS,EAAEnB,UAAU,CAAC,yBAAD,EAA4B;AAC/C,4BAAoBS,KAD2B;AACpB;AAC3B,4BAAoB,CAACA,KAF0B,CAEnB;;AAFmB,OAA5B,CAHvB;AAOE,MAAA,KAAK,EAAE;AACL;AACAW,QAAAA,GAAG,EAAE,CAFA;AAGLC,QAAAA,IAAI,EAAG,GAAEX,KAAK,GAAG,CAAE,KAHd;AAILY,QAAAA,MAAM,EAAEb,KAAK,GAAG,CAAH,GAAO,CAJf;AAKLc,QAAAA,KAAK,EAAEd,KAAK,GAAG,QAAH,GAAc,MALrB;AAMLe,QAAAA,UAAU,EAAEf,KAAK,GAAG,SAAH,GAAe;AAN3B;AAPT;AAAA;AAAA;AAAA;AAAA;AALF;AAsBD,C,CAED;;GA3CgBH,Q;;KAAAA,Q;;AA4ChB,SAASmB,kBAAT,CAA4B;AAC1BlB,EAAAA,IAD0B;AAE1BC,EAAAA,KAF0B;AAG1BC,EAAAA,KAH0B;AAI1BC,EAAAA;AAJ0B,CAA5B,EAK+B;AAC7B;AACF;AACA;AACA;AACE,sBAAOP,KAAK,CAACuB,aAAN,CACL,KADK,EAEL;AACEC,IAAAA,WAAW,EAAE,MAAMnB,KAAN,aAAMA,KAAN,uBAAMA,KAAK,CAAEU,aAAP,CAAsB,GAAEX,IAAK,EAA7B,CADrB;AAEEqB,IAAAA,SAAS,EAAE,MAAMpB,KAAN,aAAMA,KAAN,uBAAMA,KAAK,CAAEW,cAAP,CAAsB,OAAtB,CAFnB;AAGEU,IAAAA,SAAS,EAAE7B,UAAU,CAAC,yBAAD,EAA4B;AAC/C,2BAAqBS,KAD0B;AAE/C,2BAAqB,CAACA;AAFyB,KAA5B,CAHvB;AAOEqB,IAAAA,KAAK,EAAE;AACLV,MAAAA,GAAG,EAAE,CADA;AAELC,MAAAA,IAAI,EAAG,GAAEX,KAAK,GAAG,CAAE,KAFd;AAGLY,MAAAA,MAAM,EAAEb,KAAK,GAAG,CAAH,GAAO,CAHf;AAILc,MAAAA,KAAK,EAAEd,KAAK,GAAG,QAAH,GAAc,MAJrB;AAKLe,MAAAA,UAAU,EAAEf,KAAK,GAAG,SAAH,GAAe;AAL3B;AAPT,GAFK,EAiBL,EAjBK,CAAP;AAmBD;;MA7BQgB,kB;;AA+BT,SAASM,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAAnB,EAAiE;AAC/D,sBACE;AACE,IAAA,OAAO,EAAED,OADX;AAEE,IAAA,SAAS,EAAEjC,UAAU,CAAC,wCAAD,EAA2C;AAC9D,wBAAkBkC,MAD4C;AAE9D,4BAAsB,CAACA;AAFuC,KAA3C,CAFvB;AAAA,cAOGF;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;MAZQD,S;;AAkBT,SAASI,KAAT,CAAe;AAAE3B,EAAAA,KAAF;AAAS4B,EAAAA;AAAT,CAAf,EAAkE;AAChE,QAAMC,IAAI,GAAGpC,IAAI,CAAC,CAChB;AAAEM,IAAAA,IAAI,EAAE,GAAR;AAAa+B,IAAAA,GAAG,EAAE;AAAlB,GADgB,EAEhB;AAAE/B,IAAAA,IAAI,EAAE,IAAR;AAAc+B,IAAAA,GAAG,EAAE;AAAnB,GAFgB,EAGhB;AAAE/B,IAAAA,IAAI,EAAE,GAAR;AAAa+B,IAAAA,GAAG,EAAE;AAAlB,GAHgB,EAIhB;AAAE/B,IAAAA,IAAI,EAAE,IAAR;AAAc+B,IAAAA,GAAG,EAAE;AAAnB,GAJgB,EAKhB;AAAE/B,IAAAA,IAAI,EAAE,GAAR;AAAa+B,IAAAA,GAAG,EAAE;AAAlB,GALgB,EAMhB;AAAE/B,IAAAA,IAAI,EAAE,GAAR;AAAa+B,IAAAA,GAAG,EAAE;AAAlB,GANgB,EAOhB;AAAE/B,IAAAA,IAAI,EAAE,IAAR;AAAc+B,IAAAA,GAAG,EAAE;AAAnB,GAPgB,EAQhB;AAAE/B,IAAAA,IAAI,EAAE,GAAR;AAAa+B,IAAAA,GAAG,EAAE;AAAlB,GARgB,EAShB;AAAE/B,IAAAA,IAAI,EAAE,IAAR;AAAc+B,IAAAA,GAAG,EAAE;AAAnB,GATgB,EAUhB;AAAE/B,IAAAA,IAAI,EAAE,GAAR;AAAa+B,IAAAA,GAAG,EAAE;AAAlB,GAVgB,EAWhB;AAAE/B,IAAAA,IAAI,EAAE,IAAR;AAAc+B,IAAAA,GAAG,EAAE;AAAnB,GAXgB,EAYhB;AAAE/B,IAAAA,IAAI,EAAE,GAAR;AAAa+B,IAAAA,GAAG,EAAE;AAAlB,GAZgB,CAAD,CAAjB;;AAeA,QAAMC,aAAa,GAAIC,OAAD,IAAsC;AAC1DJ,IAAAA,QAAQ,CAACK,QAAQ,IAAI;AACnBA,MAAAA,QAAQ,CAACC,UAAT;AAEA,aAAO,IAAI3C,IAAI,CAAC4C,KAAT,CAAe;AACpBC,QAAAA,UAAU,EAAE;AAAEC,UAAAA,IAAI,EAAEL;AAAR;AADQ,OAAf,EAEJvB,aAFI,EAAP;AAGD,KANO,CAAR;AAOD,GARD;;AAWA,QAAM6B,WAAiC,GAAG7C,IAAI,CAAC,CAC7C,MAD6C,EAE7C,UAF6C,EAG7C,QAH6C,EAI7C,UAJ6C,EAK7C,QAL6C,EAM7C,YAN6C,EAO7C,YAP6C,EAQ7C,QAR6C,EAS7C,YAT6C,EAU7C,YAV6C,CAAD,CAA9C;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,gBACGC,KAAK,CAAC,CAAD,EAAI,CAAJ,CAAL,CAAY6C,GAAZ,CAAgBC,MAAM,IACrBX,IAAI,CAACU,GAAL,CAASE,GAAG,IAAI;AACd,cAAMC,OAAO,GAAGD,GAAG,CAAC1C,IAAJ,CAAS4C,OAAT,CAAiB,GAAjB,MAA0B,CAAC,CAA3C;AACA,cAAM5C,IAAI,GAAI,GAAE0C,GAAG,CAAC1C,IAAK,GAAEyC,MAAO,EAAlC;AACA,4BACE,QAAC,QAAD;AACa;AACX,UAAA,IAAI,EAAEzC,IAFR;AAGE,UAAA,KAAK,EAAEC,KAHT;AAIE,UAAA,KAAK,EAAE0C,OAJT;AAKE,UAAA,MAAM,EAAEF,MALV;AAME,UAAA,KAAK,EAAE,CAACA,MAAM,GAAG,CAAV,IAAe,CAAf,GAAmBC,GAAG,CAACX;AANhC,WACO/B,IADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAbD,CADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE;AAAK,MAAA,SAAS,EAAE,cAAhB;AAAA,gBACGuC,WAAW,CAACC,GAAZ,CAAgBK,CAAC,iBAChB,QAAC,SAAD;AAEE,QAAA,KAAK,EAAEA,CAFT;AAGE,QAAA,OAAO,EAAE,MAAMb,aAAa,CAACa,CAAD,CAH9B;AAIE,QAAA,MAAM,EAAE,CAAA5C,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEoC,UAAP,CAAkBC,IAAlB,MAA2BO;AAJrC,SACOA,CADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;MAxEQjB,K;AA0ET,OAAO,MAAMkB,mBAAmB,GAAG,IAAIhD,UAAJ,CAAe,qBAAf,EAAsC8B,KAAtC,CAA5B","sourcesContent":["// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\n// import React from 'react';\nimport React, { useState } from 'react';\n\n// project imports\nimport { Instrument, InstrumentProps } from '../Instruments';\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\n\n\ninterface PianoKeyProps {\n  note: string; // C, Db, D, Eb, E, F, Gb, G, Ab, A, Bb, B\n  duration?: string;\n  synth?: Tone.Synth; // Contains library code for making sound\n  minor?: boolean; // True if minor key, false if major key\n  octave: number;\n  index: number; // octave + index together give a location for the piano key\n}\n\nexport function PianoKey({\n  note,\n  synth,\n  minor,\n  index,\n}: PianoKeyProps): JSX.Element {\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n  // eslint-disable-next-line\n  const [sampler, setSampler] = useState(\n    new Tone.Sampler({\n      urls: {\n        A1: \"Kick.wav\",\n      },\n      baseUrl: \"http://localhost:3000/\",\n    }).toDestination()\n  );\n  return (\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    <div\n      onMouseDown={() => sampler.triggerAttack('A1')} // Question: what is `onMouseDown`?\n      onMouseUp={() => sampler.triggerRelease('+0.25')} // Question: what is `onMouseUp`?\n      className={classNames('ba pointer absolute dim', {\n        'bg-blue green h3': minor, // minor keys are black\n        'red bg-yellow h4': !minor, // major keys are white\n      })}\n      style={{\n        // CSS\n        top: 0,\n        left: `${index * 2}rem`,\n        zIndex: minor ? 1 : 0,\n        width: minor ? '1.5rem' : '2rem',\n        marginLeft: minor ? '0.25rem' : 0,\n      }}\n    ></div>\n  );\n}\n\n// eslint-disable-next-line\nfunction PianoKeyWithoutJSX({\n  note,\n  synth,\n  minor,\n  index,\n}: PianoKeyProps): JSX.Element {\n  /**\n   * This React component for pedagogical purposes.\n   * See `PianoKey` for the React component with JSX (JavaScript XML).\n   */\n  return React.createElement(\n    'div',\n    {\n      onMouseDown: () => synth?.triggerAttack(`${note}`),\n      onMouseUp: () => synth?.triggerRelease('+0.25'),\n      className: classNames('ba pointer absolute dim', {\n        'bg-black black h3': minor,\n        'black bg-white h4': !minor,\n      }),\n      style: {\n        top: 0,\n        left: `${index * 2}rem`,\n        zIndex: minor ? 1 : 0,\n        width: minor ? '1.5rem' : '2rem',\n        marginLeft: minor ? '0.25rem' : 0,\n      },\n    },\n    [],\n  );\n}\n\nfunction PianoType({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      className={classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n        'b--black black': active,\n        'gray b--light-gray': !active,\n      })}\n    >\n      {title}\n    </div>\n  );\n}\n\ninterface DrumKitSpec {\n  kick: {}\n}\n\nfunction Piano({ synth, setSynth }: InstrumentProps): JSX.Element {\n  const keys = List([\n    { note: 'C', idx: 0 },\n    { note: 'Db', idx: 0.5 },\n    { note: 'D', idx: 1 },\n    { note: 'Eb', idx: 1.5 },\n    { note: 'E', idx: 2 },\n    { note: 'F', idx: 3 },\n    { note: 'Gb', idx: 3.5 },\n    { note: 'G', idx: 4 },\n    { note: 'Ab', idx: 4.5 },\n    { note: 'A', idx: 5 },\n    { note: 'Bb', idx: 5.5 },\n    { note: 'B', idx: 6 },\n  ]);\n\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n\n      return new Tone.Synth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n      }).toDestination();\n    });\n  };\n\n\n  const oscillators: List<OscillatorType> = List([\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle',\n    'fmsine',\n    'fmsawtooth',\n    'fmtriangle',\n    'amsine',\n    'amsawtooth',\n    'amtriangle',\n  ]) as List<OscillatorType>;\n\n  return (\n    <div className=\"pv4\">\n      <div className=\"relative dib h4 w-100 ml4\">\n        {Range(2, 7).map(octave =>\n          keys.map(key => {\n            const isMinor = key.note.indexOf('b') !== -1;\n            const note = `${key.note}${octave}`;\n            return (\n              <PianoKey\n                key={note} //react key\n                note={note}\n                synth={synth}\n                minor={isMinor}\n                octave={octave}\n                index={(octave - 2) * 7 + key.idx}\n              />\n            );\n          }),\n        )}\n      </div>\n      <div className={'pl4 pt4 flex'}>\n        {oscillators.map(o => (\n          <PianoType\n            key={o}\n            title={o}\n            onClick={() => setOscillator(o)}\n            active={synth?.oscillator.type === o}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport const Natedude_Instrument = new Instrument('Natedude_Instrument', Piano);\n"]},"metadata":{},"sourceType":"module"}