{"ast":null,"code":"import { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Effect } from \"./Effect\";\n/**\n * FeedbackEffect provides a loop between an audio source and its own output.\n * This is a base-class for feedback effects.\n */\n\nexport class FeedbackEffect extends Effect {\n  constructor(options) {\n    super(options);\n    this.name = \"FeedbackEffect\";\n    this._feedbackGain = new Gain({\n      context: this.context,\n      gain: options.feedback,\n      units: \"normalRange\"\n    });\n    this.feedback = this._feedbackGain.gain;\n    readOnly(this, \"feedback\"); // the feedback loop\n\n    this.effectReturn.chain(this._feedbackGain, this.effectSend);\n  }\n\n  static getDefaults() {\n    return Object.assign(Effect.getDefaults(), {\n      feedback: 0.125\n    });\n  }\n\n  dispose() {\n    super.dispose();\n\n    this._feedbackGain.dispose();\n\n    this.feedback.dispose();\n    return this;\n  }\n\n}","map":{"version":3,"sources":["../../../Tone/effect/FeedbackEffect.ts"],"names":[],"mappings":"AAAA,SAAS,IAAT,QAAqB,sBAArB;AAGA,SAAS,QAAT,QAAyB,wBAAzB;AACA,SAAS,MAAT,QAAsC,UAAtC;AAgBA;;;AAGG;;AACH,OAAM,MAAgB,cAAhB,SAA8E,MAA9E,CAA6F;AAclG,EAAA,WAAA,CAAY,OAAZ,EAA0C;AAEzC,UAAM,OAAN;AAdQ,SAAA,IAAA,GAAe,gBAAf;AAgBR,SAAK,aAAL,GAAqB,IAAI,IAAJ,CAAS;AAC7B,MAAA,OAAO,EAAE,KAAK,OADe;AAE7B,MAAA,IAAI,EAAE,OAAO,CAAC,QAFe;AAG7B,MAAA,KAAK,EAAE;AAHsB,KAAT,CAArB;AAMA,SAAK,QAAL,GAAgB,KAAK,aAAL,CAAmB,IAAnC;AACA,IAAA,QAAQ,CAAC,IAAD,EAAO,UAAP,CAAR,CAXyC,CAazC;;AACA,SAAK,YAAL,CAAkB,KAAlB,CAAwB,KAAK,aAA7B,EAA4C,KAAK,UAAjD;AACA;;AAEiB,SAAX,WAAW,GAAA;AACjB,WAAO,MAAM,CAAC,MAAP,CAAc,MAAM,CAAC,WAAP,EAAd,EAAoC;AAC1C,MAAA,QAAQ,EAAE;AADgC,KAApC,CAAP;AAGA;;AAED,EAAA,OAAO,GAAA;AACN,UAAM,OAAN;;AACA,SAAK,aAAL,CAAmB,OAAnB;;AACA,SAAK,QAAL,CAAc,OAAd;AACA,WAAO,IAAP;AACA;;AA1CiG","sourceRoot":"","sourcesContent":["import { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Effect } from \"./Effect\";\n/**\n * FeedbackEffect provides a loop between an audio source and its own output.\n * This is a base-class for feedback effects.\n */\nexport class FeedbackEffect extends Effect {\n    constructor(options) {\n        super(options);\n        this.name = \"FeedbackEffect\";\n        this._feedbackGain = new Gain({\n            context: this.context,\n            gain: options.feedback,\n            units: \"normalRange\",\n        });\n        this.feedback = this._feedbackGain.gain;\n        readOnly(this, \"feedback\");\n        // the feedback loop\n        this.effectReturn.chain(this._feedbackGain, this.effectSend);\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            feedback: 0.125,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._feedbackGain.dispose();\n        this.feedback.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FeedbackEffect.js.map"]},"metadata":{},"sourceType":"module"}