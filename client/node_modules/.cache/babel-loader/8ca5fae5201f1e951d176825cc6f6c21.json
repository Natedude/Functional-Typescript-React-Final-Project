{"ast":null,"code":"import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNode = (nativeContext, options) => {\n  const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n  assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n  assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n  return nativeBiquadFilterNode;\n};","map":{"version":3,"sources":["../../../src/factories/native-biquad-filter-node.ts"],"names":[],"mappings":"AAAA,SAAS,oCAAT,QAAqD,uDAArD;AACA,SAAS,2BAAT,QAA4C,4CAA5C;AACA,SAAS,4BAAT,QAA6C,6CAA7C;AAGA,OAAO,MAAM,4BAA4B,GAAmC,CAAC,aAAD,EAAgB,OAAhB,KAA2B;AACnG,QAAM,sBAAsB,GAAG,aAAa,CAAC,kBAAd,EAA/B;AAEA,EAAA,4BAA4B,CAAC,sBAAD,EAAyB,OAAzB,CAA5B;AAEA,EAAA,oCAAoC,CAAC,sBAAD,EAAyB,OAAzB,EAAkC,GAAlC,CAApC;AACA,EAAA,oCAAoC,CAAC,sBAAD,EAAyB,OAAzB,EAAkC,QAAlC,CAApC;AACA,EAAA,oCAAoC,CAAC,sBAAD,EAAyB,OAAzB,EAAkC,WAAlC,CAApC;AACA,EAAA,oCAAoC,CAAC,sBAAD,EAAyB,OAAzB,EAAkC,MAAlC,CAApC;AAEA,EAAA,2BAA2B,CAAC,sBAAD,EAAyB,OAAzB,EAAkC,MAAlC,CAA3B;AAEA,SAAO,sBAAP;AACH,CAbM","sourceRoot":"","sourcesContent":["import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNode = (nativeContext, options) => {\n    const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n    return nativeBiquadFilterNode;\n};\n//# sourceMappingURL=native-biquad-filter-node.js.map"]},"metadata":{},"sourceType":"module"}