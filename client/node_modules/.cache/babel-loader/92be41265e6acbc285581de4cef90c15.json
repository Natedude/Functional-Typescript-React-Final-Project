{"ast":null,"code":"import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n  return isOffline => {\n    return (audioNode, count) => {\n      const cycleCounter = cycleCounters.get(audioNode);\n\n      if (cycleCounter === undefined) {\n        if (!isOffline && isActiveAudioNode(audioNode)) {\n          const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n          const {\n            outputs\n          } = getAudioNodeConnections(audioNode);\n\n          for (const output of outputs) {\n            if (isAudioNodeOutputConnection(output)) {\n              const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n              disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n            } else {\n              const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n              nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n            }\n          }\n        }\n\n        cycleCounters.set(audioNode, count);\n      } else {\n        cycleCounters.set(audioNode, cycleCounter + count);\n      }\n    };\n  };\n};","map":{"version":3,"sources":["../../../src/factories/increment-cycle-counter-factory.ts"],"names":[],"mappings":"AAAA,SAAS,2BAAT,QAA4C,wCAA5C;AAGA,OAAO,MAAM,kCAAkC,GAAyC,CACpF,aADoF,EAEpF,4CAFoF,EAGpF,uBAHoF,EAIpF,kBAJoF,EAKpF,mBALoF,EAMpF,iBANoF,KAOpF;AACA,SAAQ,SAAD,IAAc;AACjB,WAAO,CAAC,SAAD,EAAY,KAAZ,KAAqB;AACxB,YAAM,YAAY,GAAG,aAAa,CAAC,GAAd,CAAkB,SAAlB,CAArB;;AAEA,UAAI,YAAY,KAAK,SAArB,EAAgC;AAC5B,YAAI,CAAC,SAAD,IAAc,iBAAiB,CAAC,SAAD,CAAnC,EAAgD;AAC5C,gBAAM,qBAAqB,GAAG,kBAAkB,CAAC,SAAD,CAAhD;AACA,gBAAM;AAAE,YAAA;AAAF,cAAc,uBAAuB,CAAC,SAAD,CAA3C;;AAEA,eAAK,MAAM,MAAX,IAAqB,OAArB,EAA8B;AAC1B,gBAAI,2BAA2B,CAAC,MAAD,CAA/B,EAAyC;AACrC,oBAAM,0BAA0B,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAD,CAAP,CAArD;AAEA,cAAA,4CAA4C,CACxC,qBADwC,EAExC,0BAFwC,EAGxC,MAAM,CAAC,CAAD,CAHkC,EAIxC,MAAM,CAAC,CAAD,CAJkC,CAA5C;AAMH,aATD,MASO;AACH,oBAAM,2BAA2B,GAAG,mBAAmB,CAAC,MAAM,CAAC,CAAD,CAAP,CAAvD;AAEA,cAAA,qBAAqB,CAAC,UAAtB,CAAiC,2BAAjC,EAA8D,MAAM,CAAC,CAAD,CAApE;AACH;AACJ;AACJ;;AAED,QAAA,aAAa,CAAC,GAAd,CAAkB,SAAlB,EAA6B,KAA7B;AACH,OAxBD,MAwBO;AACH,QAAA,aAAa,CAAC,GAAd,CAAkB,SAAlB,EAA6B,YAAY,GAAG,KAA5C;AACH;AACJ,KA9BD;AA+BH,GAhCD;AAiCH,CAzCM","sourceRoot":"","sourcesContent":["import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                            disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                        }\n                        else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n                cycleCounters.set(audioNode, count);\n            }\n            else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n//# sourceMappingURL=increment-cycle-counter-factory.js.map"]},"metadata":{},"sourceType":"module"}