{"ast":null,"code":"const DEFAULT_OPTIONS = {\n  channelCount: 1,\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers',\n  numberOfInputs: 6\n};\nexport const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class ChannelMergerNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n      const channelMergerNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null;\n      super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n    }\n\n  };\n};","map":{"version":3,"sources":["../../../src/factories/channel-merger-node-constructor.ts"],"names":[],"mappings":"AAGA,MAAM,eAAe,GAAG;AACpB,EAAA,YAAY,EAAE,CADM;AAEpB,EAAA,gBAAgB,EAAE,UAFE;AAGpB,EAAA,qBAAqB,EAAE,UAHH;AAIpB,EAAA,cAAc,EAAE;AAJI,CAAxB;AAOA,OAAO,MAAM,kCAAkC,GAAyC,CACpF,oBADoF,EAEpF,+BAFoF,EAGpF,6BAHoF,EAIpF,gBAJoF,EAKpF,2BALoF,KAMpF;AACA,SAAO,MAAM,iBAAN,SAAoD,oBAApD,CAA2E;AAC9E,IAAA,WAAA,CAAY,OAAZ,EAAwB,OAAxB,EAAgE;AAC5D,YAAM,aAAa,GAAG,gBAAgB,CAAC,OAAD,CAAtC;AACA,YAAM,aAAa,GAAG,EAAE,GAAG,eAAL;AAAsB,WAAG;AAAzB,OAAtB;AACA,YAAM,uBAAuB,GAAG,6BAA6B,CAAC,aAAD,EAAgB,aAAhB,CAA7D;AACA,YAAM,yBAAyB,GAC1B,2BAA2B,CAAC,aAAD,CAA3B,GAA6C,+BAA+B,EAA5E,GAAiF,IADtF;AAIA,YAAM,OAAN,EAAe,KAAf,EAAsB,uBAAtB,EAA+C,yBAA/C;AACH;;AAV6E,GAAlF;AAYH,CAnBM","sourceRoot":"","sourcesContent":["const DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n};\nexport const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ChannelMergerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null));\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-merger-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}