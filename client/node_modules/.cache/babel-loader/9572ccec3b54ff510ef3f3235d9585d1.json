{"ast":null,"code":"var _jsxFileName = \"/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/Visualizers.tsx\",\n    _s = $RefreshSig$();\n\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport Sketch from 'react-p5';\nimport React, { useEffect, useMemo, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Visualizer {\n  constructor(name, draw) {\n    this.name = void 0;\n    this.draw = void 0;\n    this.name = name;\n    this.draw = draw;\n  }\n\n}\nexport function VisualizerContainer({\n  visualizer\n}) {\n  _s();\n\n  const {\n    name,\n    draw\n  } = visualizer;\n  const analyzer = useMemo(() => new Tone.Analyser('FFT', 256), []);\n  const onResize = useCallback(p5 => {\n    const width = window.innerWidth;\n    const height = window.innerHeight / 2;\n    p5.resizeCanvas(width, height, false);\n  }, []);\n  useEffect(() => {\n    Tone.getDestination().volume.value = -5;\n    Tone.getDestination().connect(analyzer);\n    return () => {\n      Tone.getDestination().disconnect(analyzer);\n    };\n  }, [analyzer]);\n\n  const setup = (p5, canvasParentRef) => {\n    const width = window.innerWidth;\n    const height = window.innerHeight / 2;\n    p5.createCanvas(width, height).parent(canvasParentRef);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'bg-black absolute bottom-0 right-0 left-0 h-50',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'z-1 absolute left-0 top-0 pa4 white f5',\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sketch, {\n      setup: setup,\n      draw: p5 => draw(p5, analyzer),\n      windowResized: onResize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VisualizerContainer, \"Cz6HHASfOAyJP9yJaOu4OvJ5tDo=\");\n\n_c = VisualizerContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"VisualizerContainer\");","map":{"version":3,"sources":["/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/Visualizers.tsx"],"names":["Tone","Sketch","React","useEffect","useMemo","useCallback","Visualizer","constructor","name","draw","VisualizerContainer","visualizer","analyzer","Analyser","onResize","p5","width","window","innerWidth","height","innerHeight","resizeCanvas","getDestination","volume","value","connect","disconnect","setup","canvasParentRef","createCanvas","parent"],"mappings":";;;AAAA;AACA,OAAO,KAAKA,IAAZ,MAAsB,MAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,WAApC,QAAuD,OAAvD;;AAQA,OAAO,MAAMC,UAAN,CAAiB;AAItBC,EAAAA,WAAW,CAACC,IAAD,EAAeC,IAAf,EAAuC;AAAA,SAHlCD,IAGkC;AAAA,SAFlCC,IAEkC;AAChD,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACD;;AAPqB;AAUxB,OAAO,SAASC,mBAAT,CAA6B;AAAEC,EAAAA;AAAF,CAA7B,EAAuE;AAAA;;AAC5E,QAAM;AAAEH,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBE,UAAvB;AAEA,QAAMC,QAAuB,GAAGR,OAAO,CACrC,MAAM,IAAIJ,IAAI,CAACa,QAAT,CAAkB,KAAlB,EAAyB,GAAzB,CAD+B,EAErC,EAFqC,CAAvC;AAKA,QAAMC,QAAQ,GAAGT,WAAW,CAAEU,EAAD,IAAY;AACvC,UAAMC,KAAK,GAAGC,MAAM,CAACC,UAArB;AACA,UAAMC,MAAM,GAAGF,MAAM,CAACG,WAAP,GAAqB,CAApC;AAEAL,IAAAA,EAAE,CAACM,YAAH,CAAgBL,KAAhB,EAAuBG,MAAvB,EAA+B,KAA/B;AACD,GAL2B,EAKzB,EALyB,CAA5B;AAOAhB,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,IAAI,CAACsB,cAAL,GAAsBC,MAAtB,CAA6BC,KAA7B,GAAqC,CAAC,CAAtC;AACAxB,IAAAA,IAAI,CAACsB,cAAL,GAAsBG,OAAtB,CAA8Bb,QAA9B;AACA,WAAO,MAAM;AACXZ,MAAAA,IAAI,CAACsB,cAAL,GAAsBI,UAAtB,CAAiCd,QAAjC;AACD,KAFD;AAGD,GANQ,EAMN,CAACA,QAAD,CANM,CAAT;;AAQA,QAAMe,KAAK,GAAG,CAACZ,EAAD,EAASa,eAAT,KAAsC;AAClD,UAAMZ,KAAK,GAAGC,MAAM,CAACC,UAArB;AACA,UAAMC,MAAM,GAAGF,MAAM,CAACG,WAAP,GAAqB,CAApC;AACAL,IAAAA,EAAE,CAACc,YAAH,CAAgBb,KAAhB,EAAuBG,MAAvB,EAA+BW,MAA/B,CAAsCF,eAAtC;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAE,gDAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAE,wCAAhB;AAAA,gBAA2DpB;AAA3D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACE,MAAA,KAAK,EAAEmB,KADT;AAEE,MAAA,IAAI,EAAEZ,EAAE,IAAIN,IAAI,CAACM,EAAD,EAAKH,QAAL,CAFlB;AAGE,MAAA,aAAa,EAAEE;AAHjB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAvCeJ,mB;;KAAAA,mB","sourcesContent":["// 3rd party library imports\nimport * as Tone from 'tone';\nimport Sketch from 'react-p5';\nimport P5 from 'p5';\nimport React, { useEffect, useMemo, useCallback } from 'react';\n\ntype VisualizerDrawer = (p5: P5, analyzer: Tone.Analyser) => void;\n\ninterface VisualizerContainerProps {\n  visualizer: Visualizer;\n}\n\nexport class Visualizer {\n  public readonly name: string;\n  public readonly draw: VisualizerDrawer;\n\n  constructor(name: string, draw: VisualizerDrawer) {\n    this.name = name;\n    this.draw = draw;\n  }\n}\n\nexport function VisualizerContainer({ visualizer }: VisualizerContainerProps) {\n  const { name, draw } = visualizer;\n\n  const analyzer: Tone.Analyser = useMemo(\n    () => new Tone.Analyser('FFT', 256),\n    [],\n  );\n\n  const onResize = useCallback((p5: P5) => {\n    const width = window.innerWidth;\n    const height = window.innerHeight / 2;\n\n    p5.resizeCanvas(width, height, false);\n  }, []);\n\n  useEffect(() => {\n    Tone.getDestination().volume.value = -5;\n    Tone.getDestination().connect(analyzer);\n    return () => {\n      Tone.getDestination().disconnect(analyzer);\n    };\n  }, [analyzer]);\n\n  const setup = (p5: P5, canvasParentRef: Element) => {\n    const width = window.innerWidth;\n    const height = window.innerHeight / 2;\n    p5.createCanvas(width, height).parent(canvasParentRef);\n  };\n\n  return (\n    <div className={'bg-black absolute bottom-0 right-0 left-0 h-50'}>\n      <div className={'z-1 absolute left-0 top-0 pa4 white f5'}>{name}</div>\n      <Sketch\n        setup={setup}\n        draw={p5 => draw(p5, analyzer)}\n        windowResized={onResize}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}