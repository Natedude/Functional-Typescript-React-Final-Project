{"ast":null,"code":"import { ToneAudioNode } from \"./ToneAudioNode\";\nimport { Param } from \"./Param\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\n/**\n * Tone.Listener is a thin wrapper around the AudioListener. Listener combined\n * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you\n * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from\n * a first-person perspective. There is only one listener per audio context.\n */\n\nexport class Listener extends ToneAudioNode {\n  constructor() {\n    super(...arguments);\n    this.name = \"Listener\";\n    this.positionX = new Param({\n      context: this.context,\n      param: this.context.rawContext.listener.positionX\n    });\n    this.positionY = new Param({\n      context: this.context,\n      param: this.context.rawContext.listener.positionY\n    });\n    this.positionZ = new Param({\n      context: this.context,\n      param: this.context.rawContext.listener.positionZ\n    });\n    this.forwardX = new Param({\n      context: this.context,\n      param: this.context.rawContext.listener.forwardX\n    });\n    this.forwardY = new Param({\n      context: this.context,\n      param: this.context.rawContext.listener.forwardY\n    });\n    this.forwardZ = new Param({\n      context: this.context,\n      param: this.context.rawContext.listener.forwardZ\n    });\n    this.upX = new Param({\n      context: this.context,\n      param: this.context.rawContext.listener.upX\n    });\n    this.upY = new Param({\n      context: this.context,\n      param: this.context.rawContext.listener.upY\n    });\n    this.upZ = new Param({\n      context: this.context,\n      param: this.context.rawContext.listener.upZ\n    });\n  }\n\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      positionX: 0,\n      positionY: 0,\n      positionZ: 0,\n      forwardX: 0,\n      forwardY: 0,\n      forwardZ: -1,\n      upX: 0,\n      upY: 1,\n      upZ: 0\n    });\n  }\n\n  dispose() {\n    super.dispose();\n    this.positionX.dispose();\n    this.positionY.dispose();\n    this.positionZ.dispose();\n    this.forwardX.dispose();\n    this.forwardY.dispose();\n    this.forwardZ.dispose();\n    this.upX.dispose();\n    this.upY.dispose();\n    this.upZ.dispose();\n    return this;\n  }\n\n} //-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(context => {\n  context.listener = new Listener({\n    context\n  });\n});\nonContextClose(context => {\n  context.listener.dispose();\n});","map":{"version":3,"sources":["../../../../Tone/core/context/Listener.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { ToneAudioNode } from \"./ToneAudioNode\";\nimport { Param } from \"./Param\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\n/**\n * Tone.Listener is a thin wrapper around the AudioListener. Listener combined\n * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you\n * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from\n * a first-person perspective. There is only one listener per audio context.\n */\nexport class Listener extends ToneAudioNode {\n    constructor() {\n        super(...arguments);\n        this.name = \"Listener\";\n        this.positionX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionX,\n        });\n        this.positionY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionY,\n        });\n        this.positionZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionZ,\n        });\n        this.forwardX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardX,\n        });\n        this.forwardY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardY,\n        });\n        this.forwardZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardZ,\n        });\n        this.upX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upX,\n        });\n        this.upY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upY,\n        });\n        this.upZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upZ,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            positionX: 0,\n            positionY: 0,\n            positionZ: 0,\n            forwardX: 0,\n            forwardY: 0,\n            forwardZ: -1,\n            upX: 0,\n            upY: 1,\n            upZ: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.positionX.dispose();\n        this.positionY.dispose();\n        this.positionZ.dispose();\n        this.forwardX.dispose();\n        this.forwardY.dispose();\n        this.forwardZ.dispose();\n        this.upX.dispose();\n        this.upY.dispose();\n        this.upZ.dispose();\n        return this;\n    }\n}\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.listener = new Listener({ context });\n});\nonContextClose(context => {\n    context.listener.dispose();\n});\n//# sourceMappingURL=Listener.js.map"]},"metadata":{},"sourceType":"module"}