{"ast":null,"code":"import { isArray } from \"./TypeCheck\";\n/**\n * Make the property not writable using `defineProperty`. Internal use only.\n */\n\nexport function readOnly(target, property) {\n  if (isArray(property)) {\n    property.forEach(str => readOnly(target, str));\n  } else {\n    Object.defineProperty(target, property, {\n      enumerable: true,\n      writable: false\n    });\n  }\n}\n/**\n * Make an attribute writeable. Internal use only.\n */\n\nexport function writable(target, property) {\n  if (isArray(property)) {\n    property.forEach(str => writable(target, str));\n  } else {\n    Object.defineProperty(target, property, {\n      writable: true\n    });\n  }\n}\nexport const noOp = () => {// no operation here!\n};","map":{"version":3,"sources":["../../../../Tone/core/util/Interface.ts"],"names":[],"mappings":"AAAA,SAAS,OAAT,QAAwB,aAAxB;AAKA;;AAEG;;AACH,OAAM,SAAU,QAAV,CAAmB,MAAnB,EAAmC,QAAnC,EAA8D;AACnE,MAAI,OAAO,CAAC,QAAD,CAAX,EAAuB;AACtB,IAAA,QAAQ,CAAC,OAAT,CAAiB,GAAG,IAAI,QAAQ,CAAC,MAAD,EAAS,GAAT,CAAhC;AACA,GAFD,MAEO;AACN,IAAA,MAAM,CAAC,cAAP,CAAsB,MAAtB,EAA8B,QAA9B,EAAwC;AACvC,MAAA,UAAU,EAAE,IAD2B;AAEvC,MAAA,QAAQ,EAAE;AAF6B,KAAxC;AAIA;AACD;AAED;;AAEG;;AACH,OAAM,SAAU,QAAV,CAAmB,MAAnB,EAAmC,QAAnC,EAA8D;AACnE,MAAI,OAAO,CAAC,QAAD,CAAX,EAAuB;AACtB,IAAA,QAAQ,CAAC,OAAT,CAAiB,GAAG,IAAI,QAAQ,CAAC,MAAD,EAAS,GAAT,CAAhC;AACA,GAFD,MAEO;AACN,IAAA,MAAM,CAAC,cAAP,CAAsB,MAAtB,EAA8B,QAA9B,EAAwC;AACvC,MAAA,QAAQ,EAAE;AAD6B,KAAxC;AAGA;AACD;AAED,OAAO,MAAM,IAAI,GAA4B,MAAK,CACjD;AACA,CAFM","sourceRoot":"","sourcesContent":["import { isArray } from \"./TypeCheck\";\n/**\n * Make the property not writable using `defineProperty`. Internal use only.\n */\nexport function readOnly(target, property) {\n    if (isArray(property)) {\n        property.forEach(str => readOnly(target, str));\n    }\n    else {\n        Object.defineProperty(target, property, {\n            enumerable: true,\n            writable: false,\n        });\n    }\n}\n/**\n * Make an attribute writeable. Internal use only.\n */\nexport function writable(target, property) {\n    if (isArray(property)) {\n        property.forEach(str => writable(target, str));\n    }\n    else {\n        Object.defineProperty(target, property, {\n            writable: true,\n        });\n    }\n}\nexport const noOp = () => {\n    // no operation here!\n};\n//# sourceMappingURL=Interface.js.map"]},"metadata":{},"sourceType":"module"}