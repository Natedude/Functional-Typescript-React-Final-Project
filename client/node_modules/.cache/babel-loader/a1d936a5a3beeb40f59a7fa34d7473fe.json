{"ast":null,"code":"import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nexport const createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError) => {\n  return (nativeContext, options) => {\n    const nativeAnalyserNode = nativeContext.createAnalyser(); // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n\n    assignNativeAudioNodeOptions(nativeAnalyserNode, options); // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n\n    if (!(options.maxDecibels > options.minDecibels)) {\n      throw createIndexSizeError();\n    }\n\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant'); // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n\n    if (!cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode))) {\n      wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n    }\n\n    return nativeAnalyserNode;\n  };\n};","map":{"version":3,"sources":["../../../src/factories/native-analyser-node-factory.ts"],"names":[],"mappings":"AAAA,SAAS,2BAAT,QAA4C,4CAA5C;AACA,SAAS,4BAAT,QAA6C,6CAA7C;AACA,SAAS,mDAAT,QAAoE,yEAApE;AACA,SAAS,4CAAT,QAA6D,iEAA7D;AAGA,OAAO,MAAM,+BAA+B,GAAsC,CAAC,eAAD,EAAkB,oBAAlB,KAA0C;AACxH,SAAO,CAAC,aAAD,EAAgB,OAAhB,KAA2B;AAC9B,UAAM,kBAAkB,GAAG,aAAa,CAAC,cAAd,EAA3B,CAD8B,CAG9B;;AACA,IAAA,4BAA4B,CAAC,kBAAD,EAAqB,OAArB,CAA5B,CAJ8B,CAM9B;;AACA,QAAI,EAAE,OAAO,CAAC,WAAR,GAAsB,OAAO,CAAC,WAAhC,CAAJ,EAAkD;AAC9C,YAAM,oBAAoB,EAA1B;AACH;;AAED,IAAA,2BAA2B,CAAC,kBAAD,EAAqB,OAArB,EAA8B,SAA9B,CAA3B;AACA,IAAA,2BAA2B,CAAC,kBAAD,EAAqB,OAArB,EAA8B,aAA9B,CAA3B;AACA,IAAA,2BAA2B,CAAC,kBAAD,EAAqB,OAArB,EAA8B,aAA9B,CAA3B;AACA,IAAA,2BAA2B,CAAC,kBAAD,EAAqB,OAArB,EAA8B,uBAA9B,CAA3B,CAd8B,CAgB9B;;AACA,QACI,CAAC,eAAe,CAAC,mDAAD,EAAsD,MAClE,mDAAmD,CAAC,kBAAD,CADvC,CADpB,EAIE;AACE,MAAA,4CAA4C,CAAC,kBAAD,CAA5C;AACH;;AAED,WAAO,kBAAP;AACH,GA1BD;AA2BH,CA5BM","sourceRoot":"","sourcesContent":["import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nexport const createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError) => {\n    return (nativeContext, options) => {\n        const nativeAnalyserNode = nativeContext.createAnalyser();\n        // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n        assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        if (!(options.maxDecibels > options.minDecibels)) {\n            throw createIndexSizeError();\n        }\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant');\n        // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n        if (!cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode))) {\n            wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n        }\n        return nativeAnalyserNode;\n    };\n};\n//# sourceMappingURL=native-analyser-node-factory.js.map"]},"metadata":{},"sourceType":"module"}