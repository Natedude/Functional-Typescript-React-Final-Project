{"ast":null,"code":"var _jsxFileName = \"/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/matthewMadore.tsx\",\n    _s = $RefreshSig$();\n\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List } from 'immutable'; //import React from 'react'\n\nimport React, { useState } from 'react'; // project imports\n\nimport { Instrument } from '../Instruments';\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction generateKeyToPlay(keyToBuild) {\n  //for generating chord or note name to be diplayed on button\n  const chromaticScale = ['A', // 0,\n  'Bb', // 1\n  'B', // 2\n  'C', // 3\n  'Db', // 4\n  'D', // 5\n  'Eb', // 6\n  'E', // 7\n  'F', // 8\n  'Gb', // 9\n  'G', // 10\n  'Ab', // 11,\n  'A', // 12,\n  'Bb', // 13\n  'B', // 14\n  'C', // 15\n  'Db', // 16\n  'D', // 5\n  'Eb', // 6\n  'E', // 7\n  'F', // 8\n  'Gb', // 9\n  'G', // 10\n  'Ab' // 11\n  ];\n  const chromaticScaleWithOctave = ['A1', // 0,\n  'Bb1', // 1\n  'B1', // 2\n  'C1', // 3\n  'Db1', // 4\n  'D1', // 5\n  'Eb1', // 6\n  'E1', // 7\n  'F1', // 8\n  'Gb1', // 9\n  'G1', // 10\n  'Ab1', // 11\n  'A2', // 12\n  'Bb2', // 13\n  'B2', // 14\n  'C2', // 15\n  'Db2', // 16\n  'D2', // 17\n  'Eb2', // 18\n  'E2', // 19\n  'F2', // 20\n  'Gb2', // 21\n  'G2', // 22\n  'Ab2', // 23\n  'A3', // 12\n  'Bb3', // 13\n  'B3', // 14\n  'C3', // 15\n  'Db3', // 16\n  'D3', // 17\n  'Eb3', // 18\n  'E3', // 19\n  'F3', // 20\n  'Gb3', // 21\n  'G3', // 22\n  'Ab3' // 23\n  ]; //building first key\n  // acrynome for shars and flats: fat cats give dog an everlasting battle or Beadgfc\n  // In key of Amajor sharps are are F C G or in flats it is Gb Db Ab\n  // scale for 'A' with sharps: A B C# D E F# G# A\n  // scale for 'A':              A B Db D E Gb Ab A\n  // A major chord is A Db E or 0 4 7\n  // b minor is B D Gb or 2 5 9\n  //  0 , 2 , 4 , 5, 7, 9, 11, 12\n\n  const usersSelectedKey = chromaticScale.indexOf(keyToBuild);\n\n  function getNote(number) {\n    return chromaticScale[chromaticScale.indexOf(keyToBuild) + number];\n  }\n\n  function getNoteOctave(number) {\n    return chromaticScaleWithOctave[usersSelectedKey + number];\n  } // scale for 'A':              A B Db D E Gb Ab A\n\n\n  const keyToPlay = List([{\n    notesNameDisplay: `${getNote(0)}maj`,\n    notesToPlay: [`${getNoteOctave(0)}`, `${getNoteOctave(4)}`, `${getNoteOctave(7)}`],\n    idx: 1,\n    keyboardKey: '1='\n  }, {\n    notesNameDisplay: `${getNote(2)}min`,\n    notesToPlay: [`${getNoteOctave(2)}`, `${getNoteOctave(5)}`, `${getNoteOctave(9)}`],\n    idx: 2,\n    keyboardKey: '2='\n  }, {\n    notesNameDisplay: `${getNote(4)}min`,\n    notesToPlay: [`${getNoteOctave(4)}`, `${getNoteOctave(7)}`, `${getNoteOctave(11)}`],\n    idx: 3,\n    keyboardKey: '3='\n  }, {\n    notesNameDisplay: `${getNote(5)}maj`,\n    notesToPlay: [`${getNoteOctave(5)}`, `${getNoteOctave(9)}`, `${getNoteOctave(12)}`],\n    idx: 4,\n    keyboardKey: '4='\n  }, {\n    notesNameDisplay: `${getNote(7)}maj`,\n    notesToPlay: [`${getNoteOctave(7)}`, `${getNoteOctave(11)}`, `${getNoteOctave(14)}`],\n    idx: 5,\n    keyboardKey: 'Q='\n  }, {\n    notesNameDisplay: `${getNote(9)}min`,\n    notesToPlay: [`${getNoteOctave(9)}`, `${getNoteOctave(12)}`, `${getNoteOctave(16)}`],\n    idx: 6,\n    keyboardKey: 'W='\n  }, {\n    notesNameDisplay: `${getNote(11)}dim`,\n    notesToPlay: [`${getNoteOctave(11)}`, `${getNoteOctave(14)}`, `${getNoteOctave(17)}`],\n    idx: 7,\n    keyboardKey: 'E='\n  }, {\n    notesNameDisplay: `${getNote(0)}`,\n    notesToPlay: [`${getNoteOctave(0)}`],\n    idx: 8,\n    keyboardKey: 'I='\n  }, {\n    notesNameDisplay: `${getNote(2)}`,\n    notesToPlay: [`${getNoteOctave(2)}`],\n    idx: 9,\n    keyboardKey: 'O='\n  }, {\n    notesNameDisplay: `${getNote(4)}`,\n    notesToPlay: [`${getNoteOctave(4)}`],\n    idx: 10,\n    keyboardKey: 'P='\n  }, {\n    notesNameDisplay: `${getNote(5)}`,\n    notesToPlay: [`${getNoteOctave(5)}`],\n    idx: 11,\n    keyboardKey: '[='\n  }, {\n    notesNameDisplay: `${getNote(7)}`,\n    notesToPlay: [`${getNoteOctave(7)}`],\n    idx: 12,\n    keyboardKey: 'K='\n  }, {\n    notesNameDisplay: `${getNote(9)}`,\n    notesToPlay: [`${getNoteOctave(9)}`],\n    idx: 13,\n    keyboardKey: 'L='\n  }, {\n    notesNameDisplay: `${getNote(11)}`,\n    notesToPlay: [`${getNoteOctave(11)}`],\n    idx: 14,\n    keyboardKey: ';='\n  }, {\n    notesNameDisplay: `${getNote(12)}`,\n    notesToPlay: [`${getNoteOctave(12)}`],\n    idx: 15,\n    keyboardKey: \"'=\"\n  }]);\n  return keyToPlay;\n}\n\nexport function ChordOrNoteButton({\n  notesNameDisplay,\n  notesToPlay,\n  idx,\n  keyboardKey\n}) {\n  _s();\n\n  const [sampler, setSampler] = useState(new Tone.Sampler({\n    urls: {\n      A1: 'A1.wav',\n      A2: 'A2.wav',\n      A3: 'A3.wav',\n      B1: 'B1.wav',\n      B2: 'B2.wav',\n      B3: 'B3.wav',\n      Bb1: 'Bb1.wav',\n      Bb2: 'Bb2.wav',\n      Bb3: 'Bb3.wav',\n      C1: 'C1.wav',\n      C2: 'C2.wav',\n      C3: 'C3.wav',\n      C4: 'C4.wav',\n      Db1: 'Db1.wav',\n      Db2: 'Db2.wav',\n      Db3: 'Db3.wav',\n      Db4: 'Db4.wav',\n      D1: 'D1.wav',\n      D2: 'D2.wav',\n      D3: 'D3.wav',\n      Eb1: 'Eb1.wav',\n      Eb2: 'Eb2.wav',\n      Eb3: 'Eb3.wav',\n      E1: 'E1.wav',\n      E2: 'E2.wav',\n      E3: 'E3.wav',\n      F1: 'F1.wav',\n      F2: 'F2.wav',\n      F3: 'F3.wav',\n      Gb1: 'Gb1.wav',\n      Gb2: 'Gb2.wav',\n      Gb3: 'Gb3.wav',\n      C5: 'wrongKey.wav'\n    },\n    baseUrl: 'http://localhost:3000/matthewMadore/samples/'\n  }).toDestination());\n  let playChordOrNote; // TODO: recieve front into to select what key the user wants to play\n  // waiting input\n\n  let newKeyToPlay = generateKeyToPlay('Gb');\n\n  if (newKeyToPlay != undefined) {\n    var _newKeyToPlay$get, _newKeyToPlay$get2, _newKeyToPlay$get3, _newKeyToPlay$get4, _newKeyToPlay$get5, _newKeyToPlay$get6, _newKeyToPlay$get7, _newKeyToPlay$get8, _newKeyToPlay$get9, _newKeyToPlay$get10, _newKeyToPlay$get11, _newKeyToPlay$get12, _newKeyToPlay$get13, _newKeyToPlay$get14, _newKeyToPlay$get15;\n\n    playChordOrNote = {\n      majorI: (_newKeyToPlay$get = newKeyToPlay.get(0)) === null || _newKeyToPlay$get === void 0 ? void 0 : _newKeyToPlay$get.notesToPlay,\n      // [A, Db, E]\n      minorii: (_newKeyToPlay$get2 = newKeyToPlay.get(1)) === null || _newKeyToPlay$get2 === void 0 ? void 0 : _newKeyToPlay$get2.notesToPlay,\n      minoriii: (_newKeyToPlay$get3 = newKeyToPlay.get(2)) === null || _newKeyToPlay$get3 === void 0 ? void 0 : _newKeyToPlay$get3.notesToPlay,\n      majorIV: (_newKeyToPlay$get4 = newKeyToPlay.get(3)) === null || _newKeyToPlay$get4 === void 0 ? void 0 : _newKeyToPlay$get4.notesToPlay,\n      majorV: (_newKeyToPlay$get5 = newKeyToPlay.get(4)) === null || _newKeyToPlay$get5 === void 0 ? void 0 : _newKeyToPlay$get5.notesToPlay,\n      minorvi: (_newKeyToPlay$get6 = newKeyToPlay.get(5)) === null || _newKeyToPlay$get6 === void 0 ? void 0 : _newKeyToPlay$get6.notesToPlay,\n      diminishedvii: (_newKeyToPlay$get7 = newKeyToPlay.get(6)) === null || _newKeyToPlay$get7 === void 0 ? void 0 : _newKeyToPlay$get7.notesToPlay,\n      tonic: (_newKeyToPlay$get8 = newKeyToPlay.get(7)) === null || _newKeyToPlay$get8 === void 0 ? void 0 : _newKeyToPlay$get8.notesToPlay,\n      supertonic: (_newKeyToPlay$get9 = newKeyToPlay.get(8)) === null || _newKeyToPlay$get9 === void 0 ? void 0 : _newKeyToPlay$get9.notesToPlay,\n      mediant: (_newKeyToPlay$get10 = newKeyToPlay.get(9)) === null || _newKeyToPlay$get10 === void 0 ? void 0 : _newKeyToPlay$get10.notesToPlay,\n      subdominant: (_newKeyToPlay$get11 = newKeyToPlay.get(10)) === null || _newKeyToPlay$get11 === void 0 ? void 0 : _newKeyToPlay$get11.notesToPlay,\n      dominant: (_newKeyToPlay$get12 = newKeyToPlay.get(11)) === null || _newKeyToPlay$get12 === void 0 ? void 0 : _newKeyToPlay$get12.notesToPlay,\n      submediant: (_newKeyToPlay$get13 = newKeyToPlay.get(12)) === null || _newKeyToPlay$get13 === void 0 ? void 0 : _newKeyToPlay$get13.notesToPlay,\n      leadingTone: (_newKeyToPlay$get14 = newKeyToPlay.get(13)) === null || _newKeyToPlay$get14 === void 0 ? void 0 : _newKeyToPlay$get14.notesToPlay,\n      octave: (_newKeyToPlay$get15 = newKeyToPlay.get(14)) === null || _newKeyToPlay$get15 === void 0 ? void 0 : _newKeyToPlay$get15.notesToPlay\n    };\n  } else {\n    playChordOrNote = {\n      majorI: ['Ab3', 'B4', 'Eb4'],\n      // [A, Db, E]\n      minorii: ['Bb4', 'Db4', 'F4'],\n      minoriii: ['B4', 'Eb4', 'Gb4'],\n      majorIV: ['Db4', 'F4', 'Ab4'],\n      majorV: ['Ab3', 'B4', 'Eb4'],\n      minorvi: ['Ab3', 'B4', 'Eb4'],\n      diminishedvii: ['Ab3', 'B4', 'Eb4'],\n      tonic: ['Ab3', 'B4', 'Eb4'],\n      supertonic: ['Ab3', 'B4', 'Eb4'],\n      mediant: ['Ab3', 'B4', 'Eb4'],\n      subdominant: ['Ab3', 'B4', 'Eb4'],\n      dominant: ['Ab3', 'B4', 'Eb4'],\n      submediant: ['Ab3', 'B4', 'Eb4'],\n      leadingTone: ['Ab3', 'B4', 'Eb4'],\n      octave: ['Ab3', 'B4', 'Eb4']\n    };\n  }\n\n  let soundToPlay;\n  soundToPlay = ['C5'];\n\n  const keyDownHandler = event => {\n    console.log(event);\n\n    switch (event.code) {\n      case 'Digit1':\n        {\n          soundToPlay = playChordOrNote.majorI;\n          break;\n        }\n\n      case 'Digit2':\n        {\n          soundToPlay = playChordOrNote.minorii;\n          break;\n        }\n\n      case 'Digit3':\n        {\n          soundToPlay = playChordOrNote.minoriii;\n          break;\n        }\n\n      case 'Digit4':\n        {\n          soundToPlay = playChordOrNote.majorIV;\n          break;\n        }\n\n      case 'KeyQ':\n        {\n          soundToPlay = playChordOrNote.majorV;\n          break;\n        }\n\n      case 'KeyW':\n        {\n          soundToPlay = playChordOrNote.minorvi;\n          break;\n        }\n\n      case 'KeyE':\n        {\n          soundToPlay = playChordOrNote.diminishedvii;\n          break;\n        }\n\n      case 'KeyI':\n        {\n          soundToPlay = playChordOrNote.tonic;\n          break;\n        }\n\n      case 'KeyO':\n        {\n          soundToPlay = playChordOrNote.supertonic;\n          break;\n        }\n\n      case 'KeyP':\n        {\n          soundToPlay = playChordOrNote.mediant;\n          break;\n        }\n\n      case 'BracketLeft':\n        {\n          soundToPlay = playChordOrNote.subdominant;\n          break;\n        }\n\n      case 'KeyK':\n        {\n          soundToPlay = playChordOrNote.dominant;\n          break;\n        }\n\n      case 'KeyL':\n        {\n          soundToPlay = playChordOrNote.submediant;\n          break;\n        }\n\n      case 'Semicolon':\n        {\n          soundToPlay = playChordOrNote.leadingTone;\n          break;\n        }\n\n      case 'Quote':\n        {\n          soundToPlay = playChordOrNote.octave;\n          break;\n        }\n\n      default:\n        {\n          soundToPlay = ['C5'];\n          break;\n        }\n    }\n\n    return soundToPlay;\n  };\n\n  const keyUpHandler = event => {\n    let soundToPlay;\n    console.log(event);\n\n    switch (event.code) {\n      case 'Digit1':\n        {\n          soundToPlay = playChordOrNote.majorI;\n          break;\n        }\n\n      case 'Digit2':\n        {\n          soundToPlay = playChordOrNote.minorii;\n          break;\n        }\n\n      case 'Digit3':\n        {\n          soundToPlay = playChordOrNote.minoriii;\n          break;\n        }\n\n      case 'Digit4':\n        {\n          soundToPlay = playChordOrNote.majorIV;\n          break;\n        }\n\n      case 'KeyQ':\n        {\n          soundToPlay = playChordOrNote.majorV;\n          break;\n        }\n\n      case 'KeyW':\n        {\n          soundToPlay = playChordOrNote.minorvi;\n          break;\n        }\n\n      case 'KeyE':\n        {\n          soundToPlay = playChordOrNote.diminishedvii;\n          break;\n        }\n\n      case 'KeyI':\n        {\n          soundToPlay = playChordOrNote.tonic;\n          break;\n        }\n\n      case 'KeyO':\n        {\n          soundToPlay = playChordOrNote.supertonic;\n          break;\n        }\n\n      case 'KeyP':\n        {\n          soundToPlay = playChordOrNote.mediant;\n          break;\n        }\n\n      case 'BracketLeft':\n        {\n          soundToPlay = playChordOrNote.subdominant;\n          break;\n        }\n\n      case 'KeyK':\n        {\n          soundToPlay = playChordOrNote.dominant;\n          break;\n        }\n\n      case 'KeyL':\n        {\n          soundToPlay = playChordOrNote.submediant;\n          break;\n        }\n\n      case 'Semicolon':\n        {\n          soundToPlay = playChordOrNote.leadingTone;\n          break;\n        }\n\n      case 'Quote':\n        {\n          soundToPlay = playChordOrNote.octave;\n          break;\n        }\n\n      default:\n        {\n          soundToPlay = ['C5'];\n          break;\n        }\n    }\n\n    return soundToPlay;\n  };\n\n  const displayString = `${keyboardKey}${notesNameDisplay}`;\n\n  const topPlacement = () => {\n    if (idx <= 4 || idx >= 8 && idx <= 11) {\n      // left 1st row\n      return 0;\n    } else {\n      // left 2nd row\n      return 4;\n    }\n  };\n\n  const leftPlacement = () => {\n    if (idx <= 4) {\n      // top left\n      return idx * 6 - 6;\n    } else if (idx >= 8 && idx <= 11) {\n      //top right\n      return idx * 6 - 6 * 3;\n    } else if (idx >= 5 && idx <= 8) {\n      // bottom left\n      return idx * 6 - 6.8 * 4;\n    } else {\n      // bottom right\n      return idx * 6 - 10 * 4;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: () => sampler === null || sampler === void 0 ? void 0 : sampler.triggerAttack(['C5']) // Question: what is `onMouseDown`?\n    ,\n    onMouseUp: () => sampler === null || sampler === void 0 ? void 0 : sampler.triggerRelease(['C5'], '+0.10') // Question: what is `onMouseUp`?\n    ,\n    onKeyDown: e => sampler === null || sampler === void 0 ? void 0 : sampler.triggerAttack(`${keyDownHandler(e)}`),\n    tabIndex: 0,\n    onKeyUp: e => sampler === null || sampler === void 0 ? void 0 : sampler.triggerRelease(`${keyUpHandler(e)}`, '+0.10'),\n    className: classNames('ba pointer absolute dim blue yellow bg-red h1'),\n    style: {\n      // CSS\n      display: 'flex',\n      top: `${topPlacement()}rem`,\n      left: `${leftPlacement()}rem`,\n      zIndex: 0,\n      height: '3rem',\n      width: '5rem',\n      padding: 0.1,\n      marginLeft: '0.25rem',\n      textAlign: 'center',\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignSelf: 'center'\n    },\n    children: displayString\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 517,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChordOrNoteButton, \"GyiXexDYDOjWJecUUiXQVEPdBUU=\");\n\n_c = ChordOrNoteButton;\n\nfunction WaveformType({\n  title,\n  onClick,\n  active\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1 green', {\n      'b--yellow green': active,\n      'gray b--light-gray': !active\n    }),\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 548,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = WaveformType;\n\nfunction Chords_and_Notes_Generator({\n  synth,\n  setSynth\n}) {\n  const setOscillator = newType => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      return new Tone.Synth({\n        oscillator: {\n          type: newType\n        }\n      }).toDestination();\n    });\n  };\n\n  const oscillators = List(['sine', 'sawtooth', 'square', 'triangle', 'fmsine', 'fmsawtooth', 'fmtriangle', 'amsine', 'amsawtooth', 'amtriangle']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4 bg-near-black\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pb2 pl4\",\n      style: {\n        top: '0rem',\n        left: '5rem'\n      },\n      children: \"Instructions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative dib w-100 ml4\",\n      style: {\n        height: '43vh'\n      },\n      children: generateKeyToPlay('A').map(c => {\n        const stringOfNotes = c.notesToPlay;\n        return /*#__PURE__*/_jsxDEV(ChordOrNoteButton, {\n          notesNameDisplay: c.notesNameDisplay //react key\n          ,\n          notesToPlay: stringOfNotes,\n          idx: c.idx,\n          keyboardKey: c.keyboardKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'pl4 pt4 flex',\n      children: oscillators.map(o => /*#__PURE__*/_jsxDEV(WaveformType, {\n        title: o,\n        onClick: () => setOscillator(o) //active={synth?.oscillator.type === o}\n\n      }, o, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 588,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Chords_and_Notes_Generator;\nexport const matthewMadore_Instrument = new Instrument('ChordNoteGenerator', Chords_and_Notes_Generator); // minorSupertonic,\n// minorMediant,\n// majorSubdominant,\n// majorDominant,\n// minorSubmediant,\n// diminishedleading,\n// tonic:string,\n// supertonic,\n// mediant,\n// subdominant,\n// dominant,\n// submediant,\n// leadingTone,\n// tonic,\n// interface ThingProps{\n//   chordOrNote: string;\n//   notes: string[];\n//   idx: number;\n// }\n// function makeThing(a:number,b:number,c:number,index:number): ThingProps{\n//   return ({\n//     chordOrNote: `${getNote(a)}maj`,\n//     notes: [`${getNoteOctave(a)}`, `${getNoteOctave(b)}`, `${getNoteOctave(c)}`],\n//     idx: index\n//   });\n// };\n// newKeyToPlay.map(playChordsOrNote =>\n//   console.log(playChordsOrNote.chordOrNote + ' ' + playChordsOrNote?.notes))\n//console.log( playChrodOrNote.majorI)\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ChordOrNoteButton\");\n$RefreshReg$(_c2, \"WaveformType\");\n$RefreshReg$(_c3, \"Chords_and_Notes_Generator\");","map":{"version":3,"sources":["/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/matthewMadore.tsx"],"names":["Tone","classNames","List","React","useState","Instrument","generateKeyToPlay","keyToBuild","chromaticScale","chromaticScaleWithOctave","usersSelectedKey","indexOf","getNote","number","getNoteOctave","keyToPlay","notesNameDisplay","notesToPlay","idx","keyboardKey","ChordOrNoteButton","sampler","setSampler","Sampler","urls","A1","A2","A3","B1","B2","B3","Bb1","Bb2","Bb3","C1","C2","C3","C4","Db1","Db2","Db3","Db4","D1","D2","D3","Eb1","Eb2","Eb3","E1","E2","E3","F1","F2","F3","Gb1","Gb2","Gb3","C5","baseUrl","toDestination","playChordOrNote","newKeyToPlay","undefined","majorI","get","minorii","minoriii","majorIV","majorV","minorvi","diminishedvii","tonic","supertonic","mediant","subdominant","dominant","submediant","leadingTone","octave","soundToPlay","keyDownHandler","event","console","log","code","keyUpHandler","displayString","topPlacement","leftPlacement","triggerAttack","triggerRelease","e","display","top","left","zIndex","height","width","padding","marginLeft","textAlign","justifyContent","alignItems","alignSelf","WaveformType","title","onClick","active","Chords_and_Notes_Generator","synth","setSynth","setOscillator","newType","oldSynth","disconnect","Synth","oscillator","type","oscillators","map","c","stringOfNotes","o","matthewMadore_Instrument"],"mappings":"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","sourcesContent":["// 3rd party library imports\nimport * as Tone from 'tone'\nimport classNames from 'classnames'\nimport { List, Range } from 'immutable'\n//import React from 'react'\nimport React, { useState } from 'react'\n\n// project imports\nimport { Instrument, InstrumentProps } from '../Instruments'\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\ninterface ButtonProps {\n  notesNameDisplay: string\n  notesToPlay: string[] // chords\n  idx: number\n  keyboardKey: string\n}\n\nfunction generateKeyToPlay (\n  keyToBuild: string // 'A'\n): List<ButtonProps> {\n  //for generating chord or note name to be diplayed on button\n  const chromaticScale = [\n    'A', // 0,\n    'Bb', // 1\n    'B', // 2\n    'C', // 3\n    'Db', // 4\n    'D', // 5\n    'Eb', // 6\n    'E', // 7\n    'F', // 8\n    'Gb', // 9\n    'G', // 10\n    'Ab', // 11,\n    'A', // 12,\n    'Bb', // 13\n    'B', // 14\n    'C', // 15\n    'Db', // 16\n    'D', // 5\n    'Eb', // 6\n    'E', // 7\n    'F', // 8\n    'Gb', // 9\n    'G', // 10\n    'Ab' // 11\n  ]\n  const chromaticScaleWithOctave = [\n    'A1', // 0,\n    'Bb1', // 1\n    'B1', // 2\n    'C1', // 3\n    'Db1', // 4\n    'D1', // 5\n    'Eb1', // 6\n    'E1', // 7\n    'F1', // 8\n    'Gb1', // 9\n    'G1', // 10\n    'Ab1', // 11\n    'A2', // 12\n    'Bb2', // 13\n    'B2', // 14\n    'C2', // 15\n    'Db2', // 16\n    'D2', // 17\n    'Eb2', // 18\n    'E2', // 19\n    'F2', // 20\n    'Gb2', // 21\n    'G2', // 22\n    'Ab2', // 23\n    'A3', // 12\n    'Bb3', // 13\n    'B3', // 14\n    'C3', // 15\n    'Db3', // 16\n    'D3', // 17\n    'Eb3', // 18\n    'E3', // 19\n    'F3', // 20\n    'Gb3', // 21\n    'G3', // 22\n    'Ab3' // 23\n  ]\n\n  //building first key\n  // acrynome for shars and flats: fat cats give dog an everlasting battle or Beadgfc\n  // In key of Amajor sharps are are F C G or in flats it is Gb Db Ab\n  // scale for 'A' with sharps: A B C# D E F# G# A\n  // scale for 'A':              A B Db D E Gb Ab A\n  // A major chord is A Db E or 0 4 7\n  // b minor is B D Gb or 2 5 9\n  //  0 , 2 , 4 , 5, 7, 9, 11, 12\n\n  const usersSelectedKey = chromaticScale.indexOf(keyToBuild)\n\n  function getNote (number: number) {\n    return chromaticScale[chromaticScale.indexOf(keyToBuild) + number]\n  }\n\n  function getNoteOctave (number: number) {\n    return chromaticScaleWithOctave[usersSelectedKey + number]\n  }\n  // scale for 'A':              A B Db D E Gb Ab A\n  const keyToPlay = List([\n    {\n      notesNameDisplay: `${getNote(0)}maj`,\n      notesToPlay: [\n        `${getNoteOctave(0)}`,\n        `${getNoteOctave(4)}`,\n        `${getNoteOctave(7)}`\n      ],\n      idx: 1,\n      keyboardKey: '1='\n    },\n    {\n      notesNameDisplay: `${getNote(2)}min`,\n      notesToPlay: [\n        `${getNoteOctave(2)}`,\n        `${getNoteOctave(5)}`,\n        `${getNoteOctave(9)}`\n      ],\n      idx: 2,\n      keyboardKey: '2='\n    },\n    {\n      notesNameDisplay: `${getNote(4)}min`,\n      notesToPlay: [\n        `${getNoteOctave(4)}`,\n        `${getNoteOctave(7)}`,\n        `${getNoteOctave(11)}`\n      ],\n      idx: 3,\n      keyboardKey: '3='\n    },\n    {\n      notesNameDisplay: `${getNote(5)}maj`,\n      notesToPlay: [\n        `${getNoteOctave(5)}`,\n        `${getNoteOctave(9)}`,\n        `${getNoteOctave(12)}`\n      ],\n      idx: 4,\n      keyboardKey: '4='\n    },\n    {\n      notesNameDisplay: `${getNote(7)}maj`,\n      notesToPlay: [\n        `${getNoteOctave(7)}`,\n        `${getNoteOctave(11)}`,\n        `${getNoteOctave(14)}`\n      ],\n      idx: 5,\n      keyboardKey: 'Q='\n    },\n    {\n      notesNameDisplay: `${getNote(9)}min`,\n      notesToPlay: [\n        `${getNoteOctave(9)}`,\n        `${getNoteOctave(12)}`,\n        `${getNoteOctave(16)}`\n      ],\n      idx: 6,\n      keyboardKey: 'W='\n    },\n    {\n      notesNameDisplay: `${getNote(11)}dim`,\n      notesToPlay: [\n        `${getNoteOctave(11)}`,\n        `${getNoteOctave(14)}`,\n        `${getNoteOctave(17)}`\n      ],\n      idx: 7,\n      keyboardKey: 'E='\n    },\n    {\n      notesNameDisplay: `${getNote(0)}`,\n      notesToPlay: [`${getNoteOctave(0)}`],\n      idx: 8,\n      keyboardKey: 'I='\n    },\n    {\n      notesNameDisplay: `${getNote(2)}`,\n      notesToPlay: [`${getNoteOctave(2)}`],\n      idx: 9,\n      keyboardKey: 'O='\n    },\n    {\n      notesNameDisplay: `${getNote(4)}`,\n      notesToPlay: [`${getNoteOctave(4)}`],\n      idx: 10,\n      keyboardKey: 'P='\n    },\n    {\n      notesNameDisplay: `${getNote(5)}`,\n      notesToPlay: [`${getNoteOctave(5)}`],\n      idx: 11,\n      keyboardKey: '[='\n    },\n    {\n      notesNameDisplay: `${getNote(7)}`,\n      notesToPlay: [`${getNoteOctave(7)}`],\n      idx: 12,\n      keyboardKey: 'K='\n    },\n    {\n      notesNameDisplay: `${getNote(9)}`,\n      notesToPlay: [`${getNoteOctave(9)}`],\n      idx: 13,\n      keyboardKey: 'L='\n    },\n    {\n      notesNameDisplay: `${getNote(11)}`,\n      notesToPlay: [`${getNoteOctave(11)}`],\n      idx: 14,\n      keyboardKey: ';='\n    },\n    {\n      notesNameDisplay: `${getNote(12)}`,\n      notesToPlay: [`${getNoteOctave(12)}`],\n      idx: 15,\n      keyboardKey: \"'=\"\n    }\n  ])\n  return keyToPlay as List<ButtonProps>\n}\n\nexport function ChordOrNoteButton ({\n  notesNameDisplay,\n  notesToPlay,\n  idx,\n  keyboardKey\n}: ButtonProps): JSX.Element {\n  const [sampler, setSampler] = useState(\n    new Tone.Sampler({\n      urls: {\n        A1: 'A1.wav',\n        A2: 'A2.wav',\n        A3: 'A3.wav',\n        B1: 'B1.wav',\n        B2: 'B2.wav',\n        B3: 'B3.wav',\n        Bb1: 'Bb1.wav',\n        Bb2: 'Bb2.wav',\n        Bb3: 'Bb3.wav',\n        C1: 'C1.wav',\n        C2: 'C2.wav',\n        C3: 'C3.wav',\n        C4: 'C4.wav',\n        Db1: 'Db1.wav',\n        Db2: 'Db2.wav',\n        Db3: 'Db3.wav',\n        Db4: 'Db4.wav',\n        D1: 'D1.wav',\n        D2: 'D2.wav',\n        D3: 'D3.wav',\n        Eb1: 'Eb1.wav',\n        Eb2: 'Eb2.wav',\n        Eb3: 'Eb3.wav',\n        E1: 'E1.wav',\n        E2: 'E2.wav',\n        E3: 'E3.wav',\n        F1: 'F1.wav',\n        F2: 'F2.wav',\n        F3: 'F3.wav',\n        Gb1: 'Gb1.wav',\n        Gb2: 'Gb2.wav',\n        Gb3: 'Gb3.wav',\n        C5: 'wrongKey.wav'\n\n      },\n\n      baseUrl: 'http://localhost:3000/matthewMadore/samples/'\n    }).toDestination()\n  )\n\n  let playChordOrNote: {\n    majorI?: string[]\n    minorii?: string[]\n    minoriii?: string[]\n    majorIV?: string[]\n    majorV?: string[]\n    minorvi?: string[]\n    diminishedvii?: string[]\n    tonic?: string[]\n    supertonic?: string[]\n    mediant?: string[]\n    subdominant?: string[]\n    dominant?: string[]\n    submediant?: string[]\n    leadingTone?: string[]\n    octave?: string[]\n  }\n  // TODO: recieve front into to select what key the user wants to play\n  // waiting input\n  let newKeyToPlay = generateKeyToPlay('Gb')\n  if (newKeyToPlay != undefined) {\n    playChordOrNote = {\n      majorI: newKeyToPlay.get(0)?.notesToPlay, // [A, Db, E]\n      minorii: newKeyToPlay.get(1)?.notesToPlay,\n      minoriii: newKeyToPlay.get(2)?.notesToPlay,\n      majorIV: newKeyToPlay.get(3)?.notesToPlay,\n      majorV: newKeyToPlay.get(4)?.notesToPlay,\n      minorvi: newKeyToPlay.get(5)?.notesToPlay,\n      diminishedvii: newKeyToPlay.get(6)?.notesToPlay,\n      tonic: newKeyToPlay.get(7)?.notesToPlay,\n      supertonic: newKeyToPlay.get(8)?.notesToPlay,\n      mediant: newKeyToPlay.get(9)?.notesToPlay,\n      subdominant: newKeyToPlay.get(10)?.notesToPlay,\n      dominant: newKeyToPlay.get(11)?.notesToPlay,\n      submediant: newKeyToPlay.get(12)?.notesToPlay,\n      leadingTone: newKeyToPlay.get(13)?.notesToPlay,\n      octave: newKeyToPlay.get(14)?.notesToPlay\n    }\n  } else {\n    playChordOrNote = {\n      majorI: ['Ab3', 'B4', 'Eb4'], // [A, Db, E]\n      minorii: ['Bb4', 'Db4', 'F4'],\n      minoriii: ['B4', 'Eb4', 'Gb4'],\n      majorIV: ['Db4', 'F4', 'Ab4'],\n      majorV: ['Ab3', 'B4', 'Eb4'],\n      minorvi: ['Ab3', 'B4', 'Eb4'],\n      diminishedvii: ['Ab3', 'B4', 'Eb4'],\n      tonic: ['Ab3', 'B4', 'Eb4'],\n      supertonic: ['Ab3', 'B4', 'Eb4'],\n      mediant: ['Ab3', 'B4', 'Eb4'],\n      subdominant: ['Ab3', 'B4', 'Eb4'],\n      dominant: ['Ab3', 'B4', 'Eb4'],\n      submediant: ['Ab3', 'B4', 'Eb4'],\n      leadingTone: ['Ab3', 'B4', 'Eb4'],\n      octave: ['Ab3', 'B4', 'Eb4']\n    }\n  }\n\n  let soundToPlay: string[]\n  soundToPlay = ['C5']\n  const keyDownHandler = (\n    event: React.KeyboardEvent<HTMLDivElement>\n  ): string[] => {\n    console.log(event)\n    switch (event.code) {\n      case 'Digit1': {\n        soundToPlay = playChordOrNote.majorI!\n        break\n      }\n      case 'Digit2': {\n        soundToPlay = playChordOrNote.minorii!\n        break\n      }\n      case 'Digit3': {\n        soundToPlay = playChordOrNote.minoriii!\n        break\n      }\n      case 'Digit4': {\n        soundToPlay = playChordOrNote.majorIV!\n        break\n      }\n      case 'KeyQ': {\n        soundToPlay = playChordOrNote.majorV!\n        break\n      }\n      case 'KeyW': {\n        soundToPlay = playChordOrNote.minorvi!\n        break\n      }\n      case 'KeyE': {\n        soundToPlay = playChordOrNote.diminishedvii!\n        break\n      }\n      case 'KeyI': {\n        soundToPlay = playChordOrNote.tonic!\n        break\n      }\n      case 'KeyO': {\n        soundToPlay = playChordOrNote.supertonic!\n        break\n      }\n      case 'KeyP': {\n        soundToPlay = playChordOrNote.mediant!\n        break\n      }\n      case 'BracketLeft': {\n        soundToPlay = playChordOrNote.subdominant!\n        break\n      }\n      case 'KeyK': {\n        soundToPlay = playChordOrNote.dominant!\n        break\n      }\n      case 'KeyL': {\n        soundToPlay = playChordOrNote.submediant!\n        break\n      }\n      case 'Semicolon': {\n        soundToPlay = playChordOrNote.leadingTone!\n        break\n      }\n      case 'Quote': {\n        soundToPlay = playChordOrNote.octave!\n        break\n      }\n      default: {\n        soundToPlay = ['C5']\n        break\n      }\n    }\n    return soundToPlay\n  }\n\n  const keyUpHandler = (\n    event: React.KeyboardEvent<HTMLDivElement>\n  ): string[] | undefined => {\n    let soundToPlay: string[] | undefined\n    console.log(event)\n    switch (event.code) {\n      case 'Digit1': {\n        soundToPlay = playChordOrNote.majorI\n        break\n      }\n      case 'Digit2': {\n        soundToPlay = playChordOrNote.minorii\n        break\n      }\n      case 'Digit3': {\n        soundToPlay = playChordOrNote.minoriii\n        break\n      }\n      case 'Digit4': {\n        soundToPlay = playChordOrNote.majorIV\n        break\n      }\n      case 'KeyQ': {\n        soundToPlay = playChordOrNote.majorV\n        break\n      }\n      case 'KeyW': {\n        soundToPlay = playChordOrNote.minorvi\n        break\n      }\n      case 'KeyE': {\n        soundToPlay = playChordOrNote.diminishedvii\n        break\n      }\n      case 'KeyI': {\n        soundToPlay = playChordOrNote.tonic\n        break\n      }\n      case 'KeyO': {\n        soundToPlay = playChordOrNote.supertonic\n        break\n      }\n      case 'KeyP': {\n        soundToPlay = playChordOrNote.mediant\n        break\n      }\n      case 'BracketLeft': {\n        soundToPlay = playChordOrNote.subdominant\n        break\n      }\n      case 'KeyK': {\n        soundToPlay = playChordOrNote.dominant\n        break\n      }\n      case 'KeyL': {\n        soundToPlay = playChordOrNote.submediant\n        break\n      }\n      case 'Semicolon': {\n        soundToPlay = playChordOrNote.leadingTone\n        break\n      }\n      case 'Quote': {\n        soundToPlay = playChordOrNote.octave\n        break\n      }\n      default: {\n        soundToPlay = ['C5']\n        break\n      }\n    }\n    return soundToPlay\n  }\n\n  const displayString = `${keyboardKey}${notesNameDisplay}`\n\n  const topPlacement = (): number => {\n    if (idx <= 4 || (idx >= 8 && idx <= 11)) {\n      // left 1st row\n      return 0\n    } else {\n      // left 2nd row\n      return 4\n    }\n  }\n\n  const leftPlacement = (): number => {\n    if (idx <= 4) {\n      // top left\n      return idx * 6 - 6\n    } else if (idx >= 8 && idx <= 11) {\n      //top right\n      return idx * 6 - 6 * 3\n    } else if (idx >= 5 && idx <= 8) {\n      // bottom left\n      return idx * 6 - 6.8 * 4\n    } else {\n      // bottom right\n      return idx * 6 - 10 * 4\n    }\n  }\n  return (\n    <div\n      onMouseDown={() => sampler?.triggerAttack(['C5'])} // Question: what is `onMouseDown`?\n      onMouseUp={() => sampler?.triggerRelease(['C5'], '+0.10')} // Question: what is `onMouseUp`?\n      onKeyDown={e => sampler?.triggerAttack(`${keyDownHandler(e)}`)}\n      tabIndex={0}\n      onKeyUp={e => sampler?.triggerRelease(`${keyUpHandler(e)}`, '+0.10')}\n      className={classNames('ba pointer absolute dim blue yellow bg-red h1')}\n      style={{\n        // CSS\n        display: 'flex',\n        top: `${topPlacement()}rem`,\n        left: `${leftPlacement()}rem`,\n        zIndex: 0,\n        height: '3rem',\n        width: '5rem',\n        padding: 0.1,\n        marginLeft: '0.25rem',\n        textAlign: 'center',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignSelf: 'center'\n\n      }}\n    >\n      {displayString}\n    </div>\n  )\n}\n\nfunction WaveformType ({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      className={classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1 green', {\n        'b--yellow green': active,\n        'gray b--light-gray': !active\n      })}\n    >\n      {title}\n    </div>\n  )\n}\n\nfunction Chords_and_Notes_Generator ({\n  synth,\n  setSynth\n}: InstrumentProps): JSX.Element {\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect()\n\n      return new Tone.Synth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions\n      }).toDestination()\n    })\n  }\n\n  const oscillators: List<OscillatorType> = List([\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle',\n    'fmsine',\n    'fmsawtooth',\n    'fmtriangle',\n    'amsine',\n    'amsawtooth',\n    'amtriangle'\n  ]) as List<OscillatorType>\n\n  return (\n    <div className='pv4 bg-near-black'>\n      <div\n        className='pb2 pl4'\n        style={{\n          top: '0rem',\n          left: '5rem'\n        }}\n      >\n        Instructions\n      </div>\n      <div className='relative dib w-100 ml4' style={{ height: '43vh' }}>\n        {generateKeyToPlay('A').map(c => {\n          const stringOfNotes = c.notesToPlay\n          return (\n            <ChordOrNoteButton\n              notesNameDisplay={c.notesNameDisplay} //react key\n              notesToPlay={stringOfNotes}\n              idx={c.idx}\n              keyboardKey={c.keyboardKey}\n            />\n          )\n        })}\n      </div>\n      <div className={'pl4 pt4 flex'}>\n        {oscillators.map(o => (\n          <WaveformType\n            key={o}\n            title={o}\n            onClick={() => setOscillator(o)}\n            //active={synth?.oscillator.type === o}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport const matthewMadore_Instrument = new Instrument(\n  'ChordNoteGenerator',\n  Chords_and_Notes_Generator\n)\n\n// minorSupertonic,\n// minorMediant,\n// majorSubdominant,\n// majorDominant,\n// minorSubmediant,\n// diminishedleading,\n// tonic:string,\n// supertonic,\n// mediant,\n// subdominant,\n// dominant,\n// submediant,\n// leadingTone,\n// tonic,\n\n// interface ThingProps{\n//   chordOrNote: string;\n//   notes: string[];\n//   idx: number;\n// }\n// function makeThing(a:number,b:number,c:number,index:number): ThingProps{\n//   return ({\n//     chordOrNote: `${getNote(a)}maj`,\n//     notes: [`${getNoteOctave(a)}`, `${getNoteOctave(b)}`, `${getNoteOctave(c)}`],\n//     idx: index\n//   });\n// };\n\n// newKeyToPlay.map(playChordsOrNote =>\n//   console.log(playChordsOrNote.chordOrNote + ' ' + playChordsOrNote?.notes))\n//console.log( playChrodOrNote.majorI)\n"]},"metadata":{},"sourceType":"module"}