{"ast":null,"code":"export const createAudioDestinationNodeRenderer = renderInputsOfAudioNode => {\n  let nativeAudioDestinationNodePromise = null;\n\n  const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext, trace) => {\n    const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n    await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode, trace);\n    return nativeAudioDestinationNode;\n  };\n\n  return {\n    render(proxy, nativeOfflineAudioContext, trace) {\n      if (nativeAudioDestinationNodePromise === null) {\n        nativeAudioDestinationNodePromise = createAudioDestinationNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n      return nativeAudioDestinationNodePromise;\n    }\n\n  };\n};","map":{"version":3,"sources":["../../../src/factories/audio-destination-node-renderer-factory.ts"],"names":[],"mappings":"AAQA,OAAO,MAAM,kCAAkC,GAG3C,uBAHoF,IAIpF;AACA,MAAI,iCAAiC,GAAgD,IAArF;;AAEA,QAAM,0BAA0B,GAAG,OAC/B,KAD+B,EAE/B,yBAF+B,EAG/B,KAH+B,KAI/B;AACA,UAAM,0BAA0B,GAAG,yBAAyB,CAAC,WAA7D;AAEA,UAAM,uBAAuB,CAAC,KAAD,EAAQ,yBAAR,EAAmC,0BAAnC,EAA+D,KAA/D,CAA7B;AAEA,WAAO,0BAAP;AACH,GAVD;;AAYA,SAAO;AACH,IAAA,MAAM,CACF,KADE,EAEF,yBAFE,EAGF,KAHE,EAG6B;AAE/B,UAAI,iCAAiC,KAAK,IAA1C,EAAgD;AAC5C,QAAA,iCAAiC,GAAG,0BAA0B,CAAC,KAAD,EAAQ,yBAAR,EAAmC,KAAnC,CAA9D;AACH;;AAED,aAAO,iCAAP;AACH;;AAXE,GAAP;AAaH,CAhCM","sourceRoot":"","sourcesContent":["export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    let nativeAudioDestinationNodePromise = null;\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext, trace) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode, trace);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext, trace) {\n            if (nativeAudioDestinationNodePromise === null) {\n                nativeAudioDestinationNodePromise = createAudioDestinationNode(proxy, nativeOfflineAudioContext, trace);\n            }\n            return nativeAudioDestinationNodePromise;\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-renderer-factory.js.map"]},"metadata":{},"sourceType":"module"}