{"ast":null,"code":"var _jsxFileName = \"/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/matthewMadore.tsx\",\n    _s = $RefreshSig$();\n\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List } from 'immutable'; //import React from 'react'\n\nimport React, { useState } from 'react'; // project imports\n\nimport { Instrument } from '../Instruments';\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MakeSampler() {\n  _s();\n\n  const [sampler, setSampler] = useState(new Tone.Sampler({\n    urls: {\n      A1: 'A1.wav',\n      A2: 'A2.wav',\n      A3: 'A3.wav',\n      B1: 'B1.wav',\n      B2: 'B2.wav',\n      B3: 'B3.wav',\n      Bb1: 'Bb1.wav',\n      Bb2: 'Bb2.wav',\n      Bb3: 'Bb3.wav',\n      C1: 'C1.wav',\n      C2: 'C2.wav',\n      C3: 'C3.wav',\n      C4: 'C4.wav',\n      Db1: 'Db1.wav',\n      Db2: 'Db2.wav',\n      Db3: 'Db3.wav',\n      Db4: 'Db4.wav',\n      D1: 'D1.wav',\n      D2: 'D2.wav',\n      D3: 'D3.wav',\n      Eb1: 'Eb1.wav',\n      Eb2: 'Eb2.wav',\n      Eb3: 'Eb3.wav',\n      E1: 'E1.wav',\n      E2: 'E2.wav',\n      E3: 'E3.wav',\n      F1: 'F1.wav',\n      F2: 'F2.wav',\n      F3: 'F3.wav',\n      Gb1: 'Gb1.wav',\n      Gb2: 'Gb2.wav',\n      Gb3: 'Gb3.wav',\n      C5: 'wrongKey.wav'\n    },\n    baseUrl: 'http://localhost:3000/matthewMadore/samples/'\n  }).toDestination());\n  return [sampler, setSampler];\n}\n\n_s(MakeSampler, \"GefCPafmpQ8NK9hDzQDXsv8ayQs=\");\n\n_c = MakeSampler;\n\nfunction generateKeyToPlay(keyToBuild) {\n  const chromaticScale = ['A', // 0,\n  'Bb', // 1\n  'B', // 2\n  'C', // 3\n  'Db', // 4\n  'D', // 5\n  'Eb', // 6\n  'E', // 7\n  'F', // 8\n  'Gb', // 9\n  'G', // 10\n  'Ab', // 11,\n  'A', // 12,\n  'Bb', // 13\n  'B', // 14\n  'C', // 15\n  'Db', // 16\n  'D', // 5\n  'Eb', // 6\n  'E', // 7\n  'F', // 8\n  'Gb', // 9\n  'G', // 10\n  'Ab' // 11\n  ];\n  const chromaticScaleWithOctave = ['A1', // 0,\n  'Bb1', // 1\n  'B1', // 2\n  'C1', // 3\n  'Db1', // 4\n  'D1', // 5\n  'Eb1', // 6\n  'E1', // 7\n  'F1', // 8\n  'Gb1', // 9\n  'G1', // 10\n  'Ab1', // 11\n  'A2', // 12\n  'Bb2', // 13\n  'B2', // 14\n  'C2', // 15\n  'Db2', // 16\n  'D2', // 17\n  'Eb2', // 18\n  'E2', // 19\n  'F2', // 20\n  'Gb2', // 21\n  'G2', // 22\n  'Ab2', // 23\n  'A3', // 12\n  'Bb3', // 13\n  'B3', // 14\n  'C3', // 15\n  'Db3', // 16\n  'D3', // 17\n  'Eb3', // 18\n  'E3', // 19\n  'F3', // 20\n  'Gb3', // 21\n  'G3', // 22\n  'Ab3' // 23\n  ]; //building first key\n  // acrynome for shars and flats: fat cats give dog an everlasting battle or Beadgfc\n  // In key of Amajor sharps are are F C G or in flats it is Gb Db Ab\n  // scale for 'A' with sharps: A B C# D E F# G# A\n  // scale for 'A':              A B Db D E Gb Ab A\n  // A major chord is A Db E or 0 4 7\n  // b minor is B D Gb or 2 5 9\n  //  0 , 2 , 4 , 5, 7, 9, 11, 12\n\n  const usersSelectedKey = chromaticScale.indexOf(keyToBuild);\n\n  function getNote(number) {\n    return chromaticScale[chromaticScale.indexOf(keyToBuild) + number];\n  }\n\n  function getNoteOctave(number) {\n    return chromaticScaleWithOctave[usersSelectedKey + number];\n  } // scale for 'A':              A B Db D E Gb Ab A\n\n\n  const keyToPlay = List([{\n    notesNameDisplay: `${getNote(0)}maj`,\n    notesToPlay: [`${getNoteOctave(0)}`, `${getNoteOctave(4)}`, `${getNoteOctave(7)}`],\n    idx: 1,\n    keyboardKey: '1='\n  }, {\n    notesNameDisplay: `${getNote(2)}min`,\n    notesToPlay: [`${getNoteOctave(2)}`, `${getNoteOctave(5)}`, `${getNoteOctave(9)}`],\n    idx: 2,\n    keyboardKey: '2='\n  }, {\n    notesNameDisplay: `${getNote(4)}min`,\n    notesToPlay: [`${getNoteOctave(4)}`, `${getNoteOctave(7)}`, `${getNoteOctave(11)}`],\n    idx: 3,\n    keyboardKey: '3='\n  }, {\n    notesNameDisplay: `${getNote(5)}maj`,\n    notesToPlay: [`${getNoteOctave(5)}`, `${getNoteOctave(9)}`, `${getNoteOctave(12)}`],\n    idx: 4,\n    keyboardKey: '4='\n  }, {\n    notesNameDisplay: `${getNote(7)}maj`,\n    notesToPlay: [`${getNoteOctave(7)}`, `${getNoteOctave(11)}`, `${getNoteOctave(14)}`],\n    idx: 5,\n    keyboardKey: 'Q='\n  }, {\n    notesNameDisplay: `${getNote(9)}min`,\n    notesToPlay: [`${getNoteOctave(9)}`, `${getNoteOctave(12)}`, `${getNoteOctave(16)}`],\n    idx: 6,\n    keyboardKey: 'W='\n  }, {\n    notesNameDisplay: `${getNote(11)}dim`,\n    notesToPlay: [`${getNoteOctave(11)}`, `${getNoteOctave(14)}`, `${getNoteOctave(17)}`],\n    idx: 7,\n    keyboardKey: 'E='\n  }, {\n    notesNameDisplay: `${getNote(0)}`,\n    notesToPlay: [`${getNoteOctave(0)}`],\n    idx: 8,\n    keyboardKey: 'I='\n  }, {\n    notesNameDisplay: `${getNote(2)}`,\n    notesToPlay: [`${getNoteOctave(2)}`],\n    idx: 9,\n    keyboardKey: 'O='\n  }, {\n    notesNameDisplay: `${getNote(4)}`,\n    notesToPlay: [`${getNoteOctave(4)}`],\n    idx: 10,\n    keyboardKey: 'P='\n  }, {\n    notesNameDisplay: `${getNote(5)}`,\n    notesToPlay: [`${getNoteOctave(5)}`],\n    idx: 11,\n    keyboardKey: '[='\n  }, {\n    notesNameDisplay: `${getNote(7)}`,\n    notesToPlay: [`${getNoteOctave(7)}`],\n    idx: 12,\n    keyboardKey: 'K='\n  }, {\n    notesNameDisplay: `${getNote(9)}`,\n    notesToPlay: [`${getNoteOctave(9)}`],\n    idx: 13,\n    keyboardKey: 'L='\n  }, {\n    notesNameDisplay: `${getNote(11)}`,\n    notesToPlay: [`${getNoteOctave(11)}`],\n    idx: 14,\n    keyboardKey: ';='\n  }, {\n    notesNameDisplay: `${getNote(12)}`,\n    notesToPlay: [`${getNoteOctave(12)}`],\n    idx: 15,\n    keyboardKey: \"'=\"\n  }]);\n  return keyToPlay;\n}\n\nlet newKeyToPlay = generateKeyToPlay('Gb');\nlet playChordOrNote = {\n  majorI: ['Ab3', 'B4', 'Eb4'],\n  // [A, Db, E]\n  minorii: ['Bb4', 'Db4', 'F4'],\n  minoriii: ['B4', 'Eb4', 'Gb4'],\n  majorIV: ['Db4', 'F4', 'Ab4'],\n  majorV: ['Ab3', 'B4', 'Eb4'],\n  minorvi: ['Ab3', 'B4', 'Eb4'],\n  diminishedvii: ['Ab3', 'B4', 'Eb4'],\n  tonic: ['Ab3', 'B4', 'Eb4'],\n  supertonic: ['Ab3', 'B4', 'Eb4'],\n  mediant: ['Ab3', 'B4', 'Eb4'],\n  subdominant: ['Ab3', 'B4', 'Eb4'],\n  dominant: ['Ab3', 'B4', 'Eb4'],\n  submediant: ['Ab3', 'B4', 'Eb4'],\n  leadingTone: ['Ab3', 'B4', 'Eb4'],\n  octave: ['Ab3', 'B4', 'Eb4']\n};\n\nfunction assignKeyBoardKeysToNotes(keyToPlay) {\n  var _newKeyToPlay$get, _newKeyToPlay$get2, _newKeyToPlay$get3, _newKeyToPlay$get4, _newKeyToPlay$get5, _newKeyToPlay$get6, _newKeyToPlay$get7, _newKeyToPlay$get8, _newKeyToPlay$get9, _newKeyToPlay$get10, _newKeyToPlay$get11, _newKeyToPlay$get12, _newKeyToPlay$get13, _newKeyToPlay$get14, _newKeyToPlay$get15;\n\n  playChordOrNote = {\n    majorI: (_newKeyToPlay$get = newKeyToPlay.get(0)) === null || _newKeyToPlay$get === void 0 ? void 0 : _newKeyToPlay$get.notesToPlay,\n    // [A, Db, E]\n    minorii: (_newKeyToPlay$get2 = newKeyToPlay.get(1)) === null || _newKeyToPlay$get2 === void 0 ? void 0 : _newKeyToPlay$get2.notesToPlay,\n    minoriii: (_newKeyToPlay$get3 = newKeyToPlay.get(2)) === null || _newKeyToPlay$get3 === void 0 ? void 0 : _newKeyToPlay$get3.notesToPlay,\n    majorIV: (_newKeyToPlay$get4 = newKeyToPlay.get(3)) === null || _newKeyToPlay$get4 === void 0 ? void 0 : _newKeyToPlay$get4.notesToPlay,\n    majorV: (_newKeyToPlay$get5 = newKeyToPlay.get(4)) === null || _newKeyToPlay$get5 === void 0 ? void 0 : _newKeyToPlay$get5.notesToPlay,\n    minorvi: (_newKeyToPlay$get6 = newKeyToPlay.get(5)) === null || _newKeyToPlay$get6 === void 0 ? void 0 : _newKeyToPlay$get6.notesToPlay,\n    diminishedvii: (_newKeyToPlay$get7 = newKeyToPlay.get(6)) === null || _newKeyToPlay$get7 === void 0 ? void 0 : _newKeyToPlay$get7.notesToPlay,\n    tonic: (_newKeyToPlay$get8 = newKeyToPlay.get(7)) === null || _newKeyToPlay$get8 === void 0 ? void 0 : _newKeyToPlay$get8.notesToPlay,\n    supertonic: (_newKeyToPlay$get9 = newKeyToPlay.get(8)) === null || _newKeyToPlay$get9 === void 0 ? void 0 : _newKeyToPlay$get9.notesToPlay,\n    mediant: (_newKeyToPlay$get10 = newKeyToPlay.get(9)) === null || _newKeyToPlay$get10 === void 0 ? void 0 : _newKeyToPlay$get10.notesToPlay,\n    subdominant: (_newKeyToPlay$get11 = newKeyToPlay.get(10)) === null || _newKeyToPlay$get11 === void 0 ? void 0 : _newKeyToPlay$get11.notesToPlay,\n    dominant: (_newKeyToPlay$get12 = newKeyToPlay.get(11)) === null || _newKeyToPlay$get12 === void 0 ? void 0 : _newKeyToPlay$get12.notesToPlay,\n    submediant: (_newKeyToPlay$get13 = newKeyToPlay.get(12)) === null || _newKeyToPlay$get13 === void 0 ? void 0 : _newKeyToPlay$get13.notesToPlay,\n    leadingTone: (_newKeyToPlay$get14 = newKeyToPlay.get(13)) === null || _newKeyToPlay$get14 === void 0 ? void 0 : _newKeyToPlay$get14.notesToPlay,\n    octave: (_newKeyToPlay$get15 = newKeyToPlay.get(14)) === null || _newKeyToPlay$get15 === void 0 ? void 0 : _newKeyToPlay$get15.notesToPlay\n  };\n  return playChordOrNote;\n}\n\nassignKeyBoardKeysToNotes(newKeyToPlay); // let playChordOrNote: {\n//   majorI?: string[]\n//   minorii?: string[]\n//   minoriii?: string[]\n//   majorIV?: string[]\n//   majorV?: string[]\n//   minorvi?: string[]\n//   diminishedvii?: string[]\n//   tonic?: string[]\n//   supertonic?: string[]\n//   mediant?: string[]\n//   subdominant?: string[]\n//   dominant?: string[]\n//   submediant?: string[]\n//   leadingTone?: string[]\n//   octave?: string[]\n// }\n\nlet soundToPlay = ['C5'];\n\nconst keyDownHandler = event => {\n  // console.log(event)\n  switch (event.code) {\n    case 'Digit1':\n      {\n        soundToPlay = playChordOrNote.majorI;\n        break;\n      }\n\n    case 'Digit2':\n      {\n        soundToPlay = playChordOrNote.minorii;\n        break;\n      }\n\n    case 'Digit3':\n      {\n        soundToPlay = playChordOrNote.minoriii;\n        break;\n      }\n\n    case 'Digit4':\n      {\n        soundToPlay = playChordOrNote.majorIV;\n        break;\n      }\n\n    case 'KeyQ':\n      {\n        soundToPlay = playChordOrNote.majorV;\n        break;\n      }\n\n    case 'KeyW':\n      {\n        soundToPlay = playChordOrNote.minorvi;\n        break;\n      }\n\n    case 'KeyE':\n      {\n        soundToPlay = playChordOrNote.diminishedvii;\n        break;\n      }\n\n    case 'KeyI':\n      {\n        soundToPlay = playChordOrNote.tonic;\n        break;\n      }\n\n    case 'KeyO':\n      {\n        soundToPlay = playChordOrNote.supertonic;\n        break;\n      }\n\n    case 'KeyP':\n      {\n        soundToPlay = playChordOrNote.mediant;\n        break;\n      }\n\n    case 'BracketLeft':\n      {\n        soundToPlay = playChordOrNote.subdominant;\n        break;\n      }\n\n    case 'KeyK':\n      {\n        soundToPlay = playChordOrNote.dominant;\n        break;\n      }\n\n    case 'KeyL':\n      {\n        soundToPlay = playChordOrNote.submediant;\n        break;\n      }\n\n    case 'Semicolon':\n      {\n        soundToPlay = playChordOrNote.leadingTone;\n        break;\n      }\n\n    case 'Quote':\n      {\n        soundToPlay = playChordOrNote.octave;\n        break;\n      }\n\n    default:\n      {\n        soundToPlay = ['C5'];\n        break;\n      }\n  }\n\n  return soundToPlay;\n};\n\nconst keyUpHandler = event => {\n  let soundToPlay; // console.log(event)\n\n  switch (event.code) {\n    case 'Digit1':\n      {\n        soundToPlay = playChordOrNote.majorI;\n        break;\n      }\n\n    case 'Digit2':\n      {\n        soundToPlay = playChordOrNote.minorii;\n        break;\n      }\n\n    case 'Digit3':\n      {\n        soundToPlay = playChordOrNote.minoriii;\n        break;\n      }\n\n    case 'Digit4':\n      {\n        soundToPlay = playChordOrNote.majorIV;\n        break;\n      }\n\n    case 'KeyQ':\n      {\n        soundToPlay = playChordOrNote.majorV;\n        break;\n      }\n\n    case 'KeyW':\n      {\n        soundToPlay = playChordOrNote.minorvi;\n        break;\n      }\n\n    case 'KeyE':\n      {\n        soundToPlay = playChordOrNote.diminishedvii;\n        break;\n      }\n\n    case 'KeyI':\n      {\n        soundToPlay = playChordOrNote.tonic;\n        break;\n      }\n\n    case 'KeyO':\n      {\n        soundToPlay = playChordOrNote.supertonic;\n        break;\n      }\n\n    case 'KeyP':\n      {\n        soundToPlay = playChordOrNote.mediant;\n        break;\n      }\n\n    case 'BracketLeft':\n      {\n        soundToPlay = playChordOrNote.subdominant;\n        break;\n      }\n\n    case 'KeyK':\n      {\n        soundToPlay = playChordOrNote.dominant;\n        break;\n      }\n\n    case 'KeyL':\n      {\n        soundToPlay = playChordOrNote.submediant;\n        break;\n      }\n\n    case 'Semicolon':\n      {\n        soundToPlay = playChordOrNote.leadingTone;\n        break;\n      }\n\n    case 'Quote':\n      {\n        soundToPlay = playChordOrNote.octave;\n        break;\n      }\n\n    default:\n      {\n        soundToPlay = ['C5'];\n        break;\n      }\n  }\n\n  return soundToPlay;\n}; //let passToButtons = setKeyBoardKeys(newKeyToPlay)\n\n\nexport function ChordOrNoteButton({\n  notesNameDisplay,\n  idx,\n  keyboardKey\n}) {\n  // TODO: recieve front into to select what key the user wants to play\n  // waiting input\n  let soundToPlay;\n  soundToPlay = ['C5'];\n  const [sampler, setSampler] = MakeSampler();\n  const displayString = `${keyboardKey}${notesNameDisplay}`;\n\n  const topPlacement = () => {\n    if (idx <= 4 || idx >= 8 && idx <= 11) {\n      // left 1st row\n      return 0;\n    } else {\n      // left 2nd row\n      return 4;\n    }\n  };\n\n  const leftPlacement = () => {\n    if (idx <= 4) {\n      // top left\n      return idx * 6 - 6;\n    } else if (idx >= 8 && idx <= 11) {\n      //top right\n      return idx * 6 - 6 * 3;\n    } else if (idx >= 5 && idx <= 8) {\n      // bottom left\n      return idx * 6 - 6.8 * 4;\n    } else {\n      // bottom right\n      return idx * 6 - 10 * 4;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: () => sampler === null || sampler === void 0 ? void 0 : sampler.triggerAttack(['C5']) // Question: what is `onMouseDown`?\n    ,\n    onMouseUp: () => sampler === null || sampler === void 0 ? void 0 : sampler.triggerRelease(['C5'], '+0.10') // Question: what is `onMouseUp`?\n    ,\n    onKeyDown: e => sampler === null || sampler === void 0 ? void 0 : sampler.triggerAttack(`${keyDownHandler(e)}`),\n    tabIndex: 0,\n    onKeyUp: e => sampler === null || sampler === void 0 ? void 0 : sampler.triggerRelease(`${keyUpHandler(e)}`, '+0.10'),\n    className: classNames('ba pointer absolute dim blue yellow bg-red h1'),\n    style: {\n      // CSS\n      display: 'flex',\n      top: `${topPlacement()}rem`,\n      left: `${leftPlacement()}rem`,\n      zIndex: 0,\n      height: '3rem',\n      width: '5rem',\n      padding: 0.1,\n      marginLeft: '0.25rem',\n      textAlign: 'center',\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignSelf: 'center'\n    },\n    children: displayString\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 570,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ChordOrNoteButton;\n\nfunction Chords_and_Notes_Generator({\n  synth,\n  setSynth\n}) {\n  const setOscillator = newType => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      return new Tone.Synth({\n        oscillator: {\n          type: newType\n        }\n      }).toDestination();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4 bg-near-black\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pb2 pl4 white\",\n      style: {\n        top: '0rem',\n        left: '5rem'\n      },\n      children: \"Instructions: Click a red button to activate the keyboard, then 2. Use keyboard keys (1-4, Q-E, i-[, k-')to play chords and single notes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative dib w-100 ml4\",\n      style: {\n        height: '43vh'\n      },\n      children: generateKeyToPlay('B').map(c => {\n        const stringOfNotes = c.notesToPlay;\n        return /*#__PURE__*/_jsxDEV(ChordOrNoteButton, {\n          notesNameDisplay: c.notesNameDisplay //react key\n          ,\n          notesToPlay: stringOfNotes,\n          idx: c.idx,\n          keyboardKey: c.keyboardKey,\n          passToButtons: c.passToButtons\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 614,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Chords_and_Notes_Generator;\nexport const matthewMadore_Instrument = new Instrument('ChordNoteGenerator', Chords_and_Notes_Generator);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MakeSampler\");\n$RefreshReg$(_c2, \"ChordOrNoteButton\");\n$RefreshReg$(_c3, \"Chords_and_Notes_Generator\");","map":{"version":3,"sources":["/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/matthewMadore.tsx"],"names":["Tone","classNames","List","React","useState","Instrument","MakeSampler","sampler","setSampler","Sampler","urls","A1","A2","A3","B1","B2","B3","Bb1","Bb2","Bb3","C1","C2","C3","C4","Db1","Db2","Db3","Db4","D1","D2","D3","Eb1","Eb2","Eb3","E1","E2","E3","F1","F2","F3","Gb1","Gb2","Gb3","C5","baseUrl","toDestination","generateKeyToPlay","keyToBuild","chromaticScale","chromaticScaleWithOctave","usersSelectedKey","indexOf","getNote","number","getNoteOctave","keyToPlay","notesNameDisplay","notesToPlay","idx","keyboardKey","newKeyToPlay","playChordOrNote","majorI","minorii","minoriii","majorIV","majorV","minorvi","diminishedvii","tonic","supertonic","mediant","subdominant","dominant","submediant","leadingTone","octave","assignKeyBoardKeysToNotes","get","soundToPlay","keyDownHandler","event","code","keyUpHandler","ChordOrNoteButton","displayString","topPlacement","leftPlacement","triggerAttack","triggerRelease","e","display","top","left","zIndex","height","width","padding","marginLeft","textAlign","justifyContent","alignItems","alignSelf","Chords_and_Notes_Generator","synth","setSynth","setOscillator","newType","oldSynth","disconnect","Synth","oscillator","type","map","c","stringOfNotes","passToButtons","matthewMadore_Instrument"],"mappings":"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","sourcesContent":["// 3rd party library imports\nimport * as Tone from 'tone'\nimport classNames from 'classnames'\nimport { List, Range } from 'immutable'\n//import React from 'react'\nimport React, { useState } from 'react'\n\n// project imports\nimport { Instrument, InstrumentProps } from '../Instruments'\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\ninterface ButtonProps {\n  notesNameDisplay: string\n  notesToPlay: string[] // chords\n  idx: number\n  keyboardKey: string\n  passToButtons: {\n    majorI?: string[]\n    minorii?: string[]\n    minoriii?: string[]\n    majorIV?: string[]\n    majorV?: string[]\n    minorvi?: string[]\n    diminishedvii?: string[]\n    tonic?: string[]\n    supertonic?: string[]\n    mediant?: string[]\n    subdominant?: string[]\n    dominant?: string[]\n    submediant?: string[]\n    leadingTone?: string[]\n    octave?: string[]\n  }\n}\n\nfunction MakeSampler () {\n  const [sampler, setSampler] = useState(\n    new Tone.Sampler({\n      urls: {\n        A1: 'A1.wav',\n        A2: 'A2.wav',\n        A3: 'A3.wav',\n        B1: 'B1.wav',\n        B2: 'B2.wav',\n        B3: 'B3.wav',\n        Bb1: 'Bb1.wav',\n        Bb2: 'Bb2.wav',\n        Bb3: 'Bb3.wav',\n        C1: 'C1.wav',\n        C2: 'C2.wav',\n        C3: 'C3.wav',\n        C4: 'C4.wav',\n        Db1: 'Db1.wav',\n        Db2: 'Db2.wav',\n        Db3: 'Db3.wav',\n        Db4: 'Db4.wav',\n        D1: 'D1.wav',\n        D2: 'D2.wav',\n        D3: 'D3.wav',\n        Eb1: 'Eb1.wav',\n        Eb2: 'Eb2.wav',\n        Eb3: 'Eb3.wav',\n        E1: 'E1.wav',\n        E2: 'E2.wav',\n        E3: 'E3.wav',\n        F1: 'F1.wav',\n        F2: 'F2.wav',\n        F3: 'F3.wav',\n        Gb1: 'Gb1.wav',\n        Gb2: 'Gb2.wav',\n        Gb3: 'Gb3.wav',\n        C5: 'wrongKey.wav'\n      },\n      baseUrl: 'http://localhost:3000/matthewMadore/samples/'\n    }).toDestination()\n  )\n  return [sampler, setSampler] as [\n    Tone.Sampler,\n    React.Dispatch<React.SetStateAction<Tone.Sampler>>\n  ]\n}\n\nfunction generateKeyToPlay (\n  keyToBuild: string // 'A'\n): List<ButtonProps> {\n  const chromaticScale = [\n    'A', // 0,\n    'Bb', // 1\n    'B', // 2\n    'C', // 3\n    'Db', // 4\n    'D', // 5\n    'Eb', // 6\n    'E', // 7\n    'F', // 8\n    'Gb', // 9\n    'G', // 10\n    'Ab', // 11,\n    'A', // 12,\n    'Bb', // 13\n    'B', // 14\n    'C', // 15\n    'Db', // 16\n    'D', // 5\n    'Eb', // 6\n    'E', // 7\n    'F', // 8\n    'Gb', // 9\n    'G', // 10\n    'Ab' // 11\n  ]\n  const chromaticScaleWithOctave = [\n    'A1', // 0,\n    'Bb1', // 1\n    'B1', // 2\n    'C1', // 3\n    'Db1', // 4\n    'D1', // 5\n    'Eb1', // 6\n    'E1', // 7\n    'F1', // 8\n    'Gb1', // 9\n    'G1', // 10\n    'Ab1', // 11\n    'A2', // 12\n    'Bb2', // 13\n    'B2', // 14\n    'C2', // 15\n    'Db2', // 16\n    'D2', // 17\n    'Eb2', // 18\n    'E2', // 19\n    'F2', // 20\n    'Gb2', // 21\n    'G2', // 22\n    'Ab2', // 23\n    'A3', // 12\n    'Bb3', // 13\n    'B3', // 14\n    'C3', // 15\n    'Db3', // 16\n    'D3', // 17\n    'Eb3', // 18\n    'E3', // 19\n    'F3', // 20\n    'Gb3', // 21\n    'G3', // 22\n    'Ab3' // 23\n  ]\n\n  //building first key\n  // acrynome for shars and flats: fat cats give dog an everlasting battle or Beadgfc\n  // In key of Amajor sharps are are F C G or in flats it is Gb Db Ab\n  // scale for 'A' with sharps: A B C# D E F# G# A\n  // scale for 'A':              A B Db D E Gb Ab A\n  // A major chord is A Db E or 0 4 7\n  // b minor is B D Gb or 2 5 9\n  //  0 , 2 , 4 , 5, 7, 9, 11, 12\n\n  const usersSelectedKey = chromaticScale.indexOf(keyToBuild)\n\n  function getNote (number: number) {\n    return chromaticScale[chromaticScale.indexOf(keyToBuild) + number]\n  }\n\n  function getNoteOctave (number: number) {\n    return chromaticScaleWithOctave[usersSelectedKey + number]\n  }\n  // scale for 'A':              A B Db D E Gb Ab A\n  const keyToPlay = List([\n    {\n      notesNameDisplay: `${getNote(0)}maj`,\n      notesToPlay: [\n        `${getNoteOctave(0)}`,\n        `${getNoteOctave(4)}`,\n        `${getNoteOctave(7)}`\n      ],\n      idx: 1,\n      keyboardKey: '1='\n    },\n    {\n      notesNameDisplay: `${getNote(2)}min`,\n      notesToPlay: [\n        `${getNoteOctave(2)}`,\n        `${getNoteOctave(5)}`,\n        `${getNoteOctave(9)}`\n      ],\n      idx: 2,\n      keyboardKey: '2='\n    },\n    {\n      notesNameDisplay: `${getNote(4)}min`,\n      notesToPlay: [\n        `${getNoteOctave(4)}`,\n        `${getNoteOctave(7)}`,\n        `${getNoteOctave(11)}`\n      ],\n      idx: 3,\n      keyboardKey: '3='\n    },\n    {\n      notesNameDisplay: `${getNote(5)}maj`,\n      notesToPlay: [\n        `${getNoteOctave(5)}`,\n        `${getNoteOctave(9)}`,\n        `${getNoteOctave(12)}`\n      ],\n      idx: 4,\n      keyboardKey: '4='\n    },\n    {\n      notesNameDisplay: `${getNote(7)}maj`,\n      notesToPlay: [\n        `${getNoteOctave(7)}`,\n        `${getNoteOctave(11)}`,\n        `${getNoteOctave(14)}`\n      ],\n      idx: 5,\n      keyboardKey: 'Q='\n    },\n    {\n      notesNameDisplay: `${getNote(9)}min`,\n      notesToPlay: [\n        `${getNoteOctave(9)}`,\n        `${getNoteOctave(12)}`,\n        `${getNoteOctave(16)}`\n      ],\n      idx: 6,\n      keyboardKey: 'W='\n    },\n    {\n      notesNameDisplay: `${getNote(11)}dim`,\n      notesToPlay: [\n        `${getNoteOctave(11)}`,\n        `${getNoteOctave(14)}`,\n        `${getNoteOctave(17)}`\n      ],\n      idx: 7,\n      keyboardKey: 'E='\n    },\n    {\n      notesNameDisplay: `${getNote(0)}`,\n      notesToPlay: [`${getNoteOctave(0)}`],\n      idx: 8,\n      keyboardKey: 'I='\n    },\n    {\n      notesNameDisplay: `${getNote(2)}`,\n      notesToPlay: [`${getNoteOctave(2)}`],\n      idx: 9,\n      keyboardKey: 'O='\n    },\n    {\n      notesNameDisplay: `${getNote(4)}`,\n      notesToPlay: [`${getNoteOctave(4)}`],\n      idx: 10,\n      keyboardKey: 'P='\n    },\n    {\n      notesNameDisplay: `${getNote(5)}`,\n      notesToPlay: [`${getNoteOctave(5)}`],\n      idx: 11,\n      keyboardKey: '[='\n    },\n    {\n      notesNameDisplay: `${getNote(7)}`,\n      notesToPlay: [`${getNoteOctave(7)}`],\n      idx: 12,\n      keyboardKey: 'K='\n    },\n    {\n      notesNameDisplay: `${getNote(9)}`,\n      notesToPlay: [`${getNoteOctave(9)}`],\n      idx: 13,\n      keyboardKey: 'L='\n    },\n    {\n      notesNameDisplay: `${getNote(11)}`,\n      notesToPlay: [`${getNoteOctave(11)}`],\n      idx: 14,\n      keyboardKey: ';='\n    },\n    {\n      notesNameDisplay: `${getNote(12)}`,\n      notesToPlay: [`${getNoteOctave(12)}`],\n      idx: 15,\n      keyboardKey: \"'=\"\n    }\n  ])\n  return keyToPlay as List<ButtonProps>\n}\nlet newKeyToPlay = generateKeyToPlay('Gb')\n\ntype mess = {\n  majorI?: string[]\n  minorii?: string[]\n  minoriii?: string[]\n  majorIV?: string[]\n  majorV?: string[]\n  minorvi?: string[]\n  diminishedvii?: string[]\n  tonic?: string[]\n  supertonic?: string[]\n  mediant?: string[]\n  subdominant?: string[]\n  dominant?: string[]\n  submediant?: string[]\n  leadingTone?: string[]\n  octave?: string[]\n}\nlet playChordOrNote: mess = {\n  majorI: ['Ab3', 'B4', 'Eb4'], // [A, Db, E]\n  minorii: ['Bb4', 'Db4', 'F4'],\n  minoriii: ['B4', 'Eb4', 'Gb4'],\n  majorIV: ['Db4', 'F4', 'Ab4'],\n  majorV: ['Ab3', 'B4', 'Eb4'],\n  minorvi: ['Ab3', 'B4', 'Eb4'],\n  diminishedvii: ['Ab3', 'B4', 'Eb4'],\n  tonic: ['Ab3', 'B4', 'Eb4'],\n  supertonic: ['Ab3', 'B4', 'Eb4'],\n  mediant: ['Ab3', 'B4', 'Eb4'],\n  subdominant: ['Ab3', 'B4', 'Eb4'],\n  dominant: ['Ab3', 'B4', 'Eb4'],\n  submediant: ['Ab3', 'B4', 'Eb4'],\n  leadingTone: ['Ab3', 'B4', 'Eb4'],\n  octave: ['Ab3', 'B4', 'Eb4']\n}\n\nfunction assignKeyBoardKeysToNotes (\n  keyToPlay: List<{\n    notesNameDisplay: string\n    notesToPlay: string[]\n    idx: number\n    keyboardKey: string\n  }>\n): mess {\n  playChordOrNote = {\n    majorI: newKeyToPlay.get(0)?.notesToPlay, // [A, Db, E]\n    minorii: newKeyToPlay.get(1)?.notesToPlay,\n    minoriii: newKeyToPlay.get(2)?.notesToPlay,\n    majorIV: newKeyToPlay.get(3)?.notesToPlay,\n    majorV: newKeyToPlay.get(4)?.notesToPlay,\n    minorvi: newKeyToPlay.get(5)?.notesToPlay,\n    diminishedvii: newKeyToPlay.get(6)?.notesToPlay,\n    tonic: newKeyToPlay.get(7)?.notesToPlay,\n    supertonic: newKeyToPlay.get(8)?.notesToPlay,\n    mediant: newKeyToPlay.get(9)?.notesToPlay,\n    subdominant: newKeyToPlay.get(10)?.notesToPlay,\n    dominant: newKeyToPlay.get(11)?.notesToPlay,\n    submediant: newKeyToPlay.get(12)?.notesToPlay,\n    leadingTone: newKeyToPlay.get(13)?.notesToPlay,\n    octave: newKeyToPlay.get(14)?.notesToPlay\n  }\n\n  return playChordOrNote\n}\nassignKeyBoardKeysToNotes(newKeyToPlay)\n// let playChordOrNote: {\n//   majorI?: string[]\n//   minorii?: string[]\n//   minoriii?: string[]\n//   majorIV?: string[]\n//   majorV?: string[]\n//   minorvi?: string[]\n//   diminishedvii?: string[]\n//   tonic?: string[]\n//   supertonic?: string[]\n//   mediant?: string[]\n//   subdominant?: string[]\n//   dominant?: string[]\n//   submediant?: string[]\n//   leadingTone?: string[]\n//   octave?: string[]\n// }\n\nlet soundToPlay = ['C5']\n\nconst keyDownHandler = (\n  event: React.KeyboardEvent<HTMLDivElement>\n): string[] => {\n  // console.log(event)\n  switch (event.code) {\n    case 'Digit1': {\n      soundToPlay = playChordOrNote.majorI!\n      break\n    }\n    case 'Digit2': {\n      soundToPlay = playChordOrNote.minorii!\n      break\n    }\n    case 'Digit3': {\n      soundToPlay = playChordOrNote.minoriii!\n      break\n    }\n    case 'Digit4': {\n      soundToPlay = playChordOrNote.majorIV!\n      break\n    }\n    case 'KeyQ': {\n      soundToPlay = playChordOrNote.majorV!\n      break\n    }\n    case 'KeyW': {\n      soundToPlay = playChordOrNote.minorvi!\n      break\n    }\n    case 'KeyE': {\n      soundToPlay = playChordOrNote.diminishedvii!\n      break\n    }\n    case 'KeyI': {\n      soundToPlay = playChordOrNote.tonic!\n      break\n    }\n    case 'KeyO': {\n      soundToPlay = playChordOrNote.supertonic!\n      break\n    }\n    case 'KeyP': {\n      soundToPlay = playChordOrNote.mediant!\n      break\n    }\n    case 'BracketLeft': {\n      soundToPlay = playChordOrNote.subdominant!\n      break\n    }\n    case 'KeyK': {\n      soundToPlay = playChordOrNote.dominant!\n      break\n    }\n    case 'KeyL': {\n      soundToPlay = playChordOrNote.submediant!\n      break\n    }\n    case 'Semicolon': {\n      soundToPlay = playChordOrNote.leadingTone!\n      break\n    }\n    case 'Quote': {\n      soundToPlay = playChordOrNote.octave!\n      break\n    }\n    default: {\n      soundToPlay = ['C5']\n      break\n    }\n  }\n  return soundToPlay\n}\n\nconst keyUpHandler = (\n  event: React.KeyboardEvent<HTMLDivElement>\n): string[] | undefined => {\n  let soundToPlay: string[] | undefined\n  // console.log(event)\n  switch (event.code) {\n    case 'Digit1': {\n      soundToPlay = playChordOrNote.majorI\n      break\n    }\n    case 'Digit2': {\n      soundToPlay = playChordOrNote.minorii\n      break\n    }\n    case 'Digit3': {\n      soundToPlay = playChordOrNote.minoriii\n      break\n    }\n    case 'Digit4': {\n      soundToPlay = playChordOrNote.majorIV\n      break\n    }\n    case 'KeyQ': {\n      soundToPlay = playChordOrNote.majorV\n      break\n    }\n    case 'KeyW': {\n      soundToPlay = playChordOrNote.minorvi\n      break\n    }\n    case 'KeyE': {\n      soundToPlay = playChordOrNote.diminishedvii\n      break\n    }\n    case 'KeyI': {\n      soundToPlay = playChordOrNote.tonic\n      break\n    }\n    case 'KeyO': {\n      soundToPlay = playChordOrNote.supertonic\n      break\n    }\n    case 'KeyP': {\n      soundToPlay = playChordOrNote.mediant\n      break\n    }\n    case 'BracketLeft': {\n      soundToPlay = playChordOrNote.subdominant\n      break\n    }\n    case 'KeyK': {\n      soundToPlay = playChordOrNote.dominant\n      break\n    }\n    case 'KeyL': {\n      soundToPlay = playChordOrNote.submediant\n      break\n    }\n    case 'Semicolon': {\n      soundToPlay = playChordOrNote.leadingTone\n      break\n    }\n    case 'Quote': {\n      soundToPlay = playChordOrNote.octave\n      break\n    }\n    default: {\n      soundToPlay = ['C5']\n      break\n    }\n  }\n  return soundToPlay\n}\n\n//let passToButtons = setKeyBoardKeys(newKeyToPlay)\n\nexport function ChordOrNoteButton ({\n  notesNameDisplay,\n  idx,\n  keyboardKey\n}: // passToButtons,\nButtonProps): JSX.Element {\n  // TODO: recieve front into to select what key the user wants to play\n  // waiting input\n\n  let soundToPlay: string[]\n  soundToPlay = ['C5']\n  const [sampler, setSampler] = MakeSampler()\n  const displayString = `${keyboardKey}${notesNameDisplay}`\n\n  const topPlacement = (): number => {\n    if (idx <= 4 || (idx >= 8 && idx <= 11)) {\n      // left 1st row\n      return 0\n    } else {\n      // left 2nd row\n      return 4\n    }\n  }\n\n  const leftPlacement = (): number => {\n    if (idx <= 4) {\n      // top left\n      return idx * 6 - 6\n    } else if (idx >= 8 && idx <= 11) {\n      //top right\n      return idx * 6 - 6 * 3\n    } else if (idx >= 5 && idx <= 8) {\n      // bottom left\n      return idx * 6 - 6.8 * 4\n    } else {\n      // bottom right\n      return idx * 6 - 10 * 4\n    }\n  }\n  return (\n    <div\n      onMouseDown={() => sampler?.triggerAttack(['C5'])} // Question: what is `onMouseDown`?\n      onMouseUp={() => sampler?.triggerRelease(['C5'], '+0.10')} // Question: what is `onMouseUp`?\n      onKeyDown={e => sampler?.triggerAttack(`${keyDownHandler(e)}`)}\n      tabIndex={0}\n      onKeyUp={e => sampler?.triggerRelease(`${keyUpHandler(e)}`, '+0.10')}\n      className={classNames('ba pointer absolute dim blue yellow bg-red h1')}\n      style={{\n        // CSS\n        display: 'flex',\n        top: `${topPlacement()}rem`,\n        left: `${leftPlacement()}rem`,\n        zIndex: 0,\n        height: '3rem',\n        width: '5rem',\n        padding: 0.1,\n        marginLeft: '0.25rem',\n        textAlign: 'center',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignSelf: 'center'\n      }}\n    >\n      {displayString}\n    </div>\n  )\n}\n\nfunction Chords_and_Notes_Generator ({\n  synth,\n  setSynth\n}: InstrumentProps): JSX.Element {\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect()\n\n      return new Tone.Synth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions\n      }).toDestination()\n    })\n  }\n\n\n  return (\n    <div className='pv4 bg-near-black'>\n      <div\n        className='pb2 pl4 white'\n        style={{\n          top: '0rem',\n          left: '5rem'\n        }}\n      >\n        Instructions:\n        Click a red button to activate the keyboard, then\n        2. Use keyboard keys (1-4, Q-E, i-[, k-')to play chords and single notes.\n      </div>\n      <div className='relative dib w-100 ml4' style={{ height: '43vh' }}>\n        {generateKeyToPlay('B').map(c => {\n          const stringOfNotes = c.notesToPlay\n          return (\n            <ChordOrNoteButton\n              notesNameDisplay={c.notesNameDisplay} //react key\n              notesToPlay={stringOfNotes}\n              idx={c.idx}\n              keyboardKey={c.keyboardKey}\n              passToButtons={c.passToButtons}\n            />\n          )\n        })}\n      </div>\n      {}\n    </div>\n  )\n}\n\nexport const matthewMadore_Instrument = new Instrument(\n  'ChordNoteGenerator',\n  Chords_and_Notes_Generator\n)\n\n\n"]},"metadata":{},"sourceType":"module"}