{"ast":null,"code":"var _jsxFileName = \"/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/matthewMadore_Instrument.tsx\";\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable'; //import React from 'react'\n\nimport React from 'react'; // project imports\n\nimport { Instrument } from '../Instruments';\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PianoKey({\n  note,\n  synth,\n  minor,\n  octave,\n  index\n}) {\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n  // const polySynth = new Tone.PolySynth().toDestination();\n  // const synth2 = new Tone.Synth().toDestination();\n  // const [sampler, setSampler] = useState(\n  //   new Tone.Sampler({\n  //     urls: {\n  //       A3: \"FluteClean_Asharp3.wav\",\n  //       D4: \"FluteClean_D4.wav\"\n  //     },\n  //     baseUrl: \"http://localhost:3000\"\n  //   }).toDestination()\n  // );\n  // const sampler = new Tone.Sampler({\n  //   urls: {\n  //     A1: \"A1.mp3\",\n  //     A2: \"A2.mp3\",\n  //   },\n  //   baseUrl: \"https://tonejs.github.io/audio/casio/\",\n  //   onload: () => {\n  //     sampler.triggerAttackRelease([\"C1\", \"E1\", \"G1\", \"B1\"], 0.5);\n  //   }\n  // }).toDestination();\n  // // onKeyUp handler function\n  // const keyDownHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\n  //   if (event.code === \"KeyZ\") {\n  //     console.log(\" keyDownHandler pressed\")\n  //     // polySynth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"],0.25);\n  //     synth2.triggerAttack(`C4`);\n  //     synth2.triggerAttack(`E4`);\n  //     synth2.triggerAttack(`G4`);\n  //   } else if (event.code === \"KeyX\") {\n  //     console.log(\" keyUpHandler pressed\")\n  //     polySynth.triggerAttack([\"C4\", \"E4\", \"A4\"]);\n  //    }  \n  // };\n  //   // onKeyUp handler function\n  //   const keyUpHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\n  //     if (event.code === \"KeyZ\") {\n  //       console.log(\" keyUpHandler pressed\")\n  //       //polySynth.triggerRelease([\"C4\", \"E4\", \"A4\"], .25);\n  //       synth2.triggerRelease('+0.10');\n  //       synth2.triggerRelease('+0.10');\n  //       synth2.triggerRelease('+0.10');\n  //     } else if (event.code === \"KeyX\") {\n  //       console.log(\" keyUpHandler pressed\")\n  //       polySynth.triggerRelease([\"C4\", \"E4\", \"A4\"], 1);\n  //     }  \n  //   };\n  return (\n    /*#__PURE__*/\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    _jsxDEV(\"div\", {\n      // onMouseDown={() => sampler?.triggerAttack([\"A3\",\"D4\"])} // Question: what is `onMouseDown`? \n      // onMouseUp={() => sampler?.triggerRelease(['A3','D4'],'+0.20')} // Question: what is `onMouseUp`?\n      onMouseDown: () => synth === null || synth === void 0 ? void 0 : synth.triggerAttack(`${note}`) // Question: what is `onMouseDown`? \n      ,\n      onMouseUp: () => synth === null || synth === void 0 ? void 0 : synth.triggerRelease('+0.10') // Question: what is `onMouseUp`?\n      // onKeyDown = { keyDownHandler }\n      // tabIndex={0}\n      // onKeyUp={keyUpHandler}\n      // onKeyDown = { () => sampler.triggerAttack('A3') }\n      // onKeyUp={() => sampler.triggerRelease('+0.25')}\n      ,\n      className: classNames('ba pointer absolute dim blue', {\n        'bg-black blue h1': minor,\n        // minor keys are black\n        'yellow bg-red h1': !minor // major keys are white\n\n      }),\n      style: {\n        // CSS\n        top: `${octave * 2}rem`,\n        left: `${index % 7 * 2}rem`,\n        zIndex: minor ? 0 : 0,\n        width: minor ? '1.0rem' : '1rem',\n        marginLeft: minor ? '0.rem' : 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this)\n  );\n} // eslint-disable-next-line\n\n_c = PianoKey;\n\nfunction PianoKeyWithoutJSX({\n  note,\n  synth,\n  minor,\n  index\n}) {\n  /**\n   * This React component for pedagogical purposes.\n   * See `PianoKey` for the React component with JSX (JavaScript XML).\n   */\n  return /*#__PURE__*/React.createElement('div', {\n    onKeyDown: () => synth === null || synth === void 0 ? void 0 : synth.triggerAttack(`${'C2'}`),\n    onMouseDown: () => synth === null || synth === void 0 ? void 0 : synth.triggerAttack(`${note}`),\n    onMouseUp: () => synth === null || synth === void 0 ? void 0 : synth.triggerRelease('+0.25'),\n    onKeyUp: () => synth === null || synth === void 0 ? void 0 : synth.triggerRelease('+0.25'),\n    className: classNames('ba pointer absolute dim', {\n      'bg-black black h3': minor,\n      'black bg-white h4': !minor\n    }),\n    style: {\n      top: 0,\n      left: `${index * 2}rem`,\n      zIndex: minor ? 1 : 0,\n      width: minor ? '1.5rem' : '2rem',\n      marginLeft: minor ? '0.25rem' : 0\n    }\n  }, []);\n}\n\n_c2 = PianoKeyWithoutJSX;\n\nfunction PianoType({\n  title,\n  onClick,\n  active\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1 green', {\n      'b--yellow green': active,\n      'gray b--light-gray': !active\n    }),\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = PianoType;\n\nfunction Piano({\n  synth,\n  setSynth\n}) {\n  const keys = List([{\n    note: 'C',\n    idx: 0\n  }, {\n    note: 'Db',\n    idx: 0.5\n  }, {\n    note: 'D',\n    idx: 1\n  }, {\n    note: 'Eb',\n    idx: 1.5\n  }, {\n    note: 'E',\n    idx: 2\n  }, {\n    note: 'F',\n    idx: 3\n  }, {\n    note: 'Gb',\n    idx: 3.5\n  }, {\n    note: 'G',\n    idx: 4\n  }, {\n    note: 'Ab',\n    idx: 4.5\n  }, {\n    note: 'A',\n    idx: 5\n  }, {\n    note: 'Bb',\n    idx: 5.5\n  }, {\n    note: 'B',\n    idx: 6\n  }]);\n\n  const setOscillator = newType => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      return new Tone.Synth({\n        oscillator: {\n          type: newType\n        }\n      }).toDestination();\n    });\n  };\n\n  const oscillators = List(['sine', 'sawtooth', 'square', 'triangle', 'fmsine', 'fmsawtooth', 'fmtriangle', 'amsine', 'amsawtooth', 'amtriangle']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative flex-wrap h4 w-100 ml4\",\n      children: Range(2, 7).map(octave => keys.map(key => {\n        const isMinor = key.note.indexOf('b') !== -1;\n        const note = `${key.note}${octave}`;\n        return /*#__PURE__*/_jsxDEV(PianoKey, {\n          //react key\n          note: note,\n          synth: synth,\n          minor: isMinor,\n          octave: octave,\n          index: (octave - 2) * 7 + key.idx\n        }, note, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'pl4 pt4 flex',\n      children: oscillators.map(o => /*#__PURE__*/_jsxDEV(PianoType, {\n        title: o,\n        onClick: () => setOscillator(o),\n        active: (synth === null || synth === void 0 ? void 0 : synth.oscillator.type) === o\n      }, o, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = Piano;\nexport const matthewMadore_Instrument = new Instrument('matthewMadore_Instrument', Piano);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"PianoKey\");\n$RefreshReg$(_c2, \"PianoKeyWithoutJSX\");\n$RefreshReg$(_c3, \"PianoType\");\n$RefreshReg$(_c4, \"Piano\");","map":{"version":3,"sources":["/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/matthewMadore_Instrument.tsx"],"names":["Tone","classNames","List","Range","React","Instrument","PianoKey","note","synth","minor","octave","index","triggerAttack","triggerRelease","top","left","zIndex","width","marginLeft","PianoKeyWithoutJSX","createElement","onKeyDown","onMouseDown","onMouseUp","onKeyUp","className","style","PianoType","title","onClick","active","Piano","setSynth","keys","idx","setOscillator","newType","oldSynth","disconnect","Synth","oscillator","type","toDestination","oscillators","map","key","isMinor","indexOf","o","matthewMadore_Instrument"],"mappings":"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","sourcesContent":["// 3rd party library imports\nimport * as Tone from 'tone'\nimport classNames from 'classnames'\nimport { List, Range } from 'immutable'\n//import React from 'react'\nimport React, { useState } from 'react'\n\n\n// project imports\nimport { Instrument, InstrumentProps } from '../Instruments'\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\ninterface PianoKeyProps {\n  note: string // C, Db, D, Eb, E, F, Gb, G, Ab, A, Bb, B\n  duration?: string\n  synth?: Tone.Synth // Contains library code for making sound\n  minor?: boolean // True if minor key, false if major key\n  octave: number\n  index: number // octave + index together give a location for the piano key\n  // sampler: Tone.Sampler\n}\n\nexport function PianoKey ({\n  note,\n  synth,\n  minor,\n  octave,\n  index\n}: PianoKeyProps): JSX.Element {\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n\n  // const polySynth = new Tone.PolySynth().toDestination();\n  // const synth2 = new Tone.Synth().toDestination();\n  // const [sampler, setSampler] = useState(\n  //   new Tone.Sampler({\n  //     urls: {\n  //       A3: \"FluteClean_Asharp3.wav\",\n  //       D4: \"FluteClean_D4.wav\"\n  //     },\n  //     baseUrl: \"http://localhost:3000\"\n  //   }).toDestination()\n  // );\n\n  // const sampler = new Tone.Sampler({\n  //   urls: {\n  //     A1: \"A1.mp3\",\n  //     A2: \"A2.mp3\",\n  //   },\n  //   baseUrl: \"https://tonejs.github.io/audio/casio/\",\n  //   onload: () => {\n  //     sampler.triggerAttackRelease([\"C1\", \"E1\", \"G1\", \"B1\"], 0.5);\n  //   }\n  // }).toDestination();\n\n  // // onKeyUp handler function\n  // const keyDownHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\n  //   if (event.code === \"KeyZ\") {\n  //     console.log(\" keyDownHandler pressed\")\n  //     // polySynth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"],0.25);\n  //     synth2.triggerAttack(`C4`);\n  //     synth2.triggerAttack(`E4`);\n  //     synth2.triggerAttack(`G4`);\n\n    \n  //   } else if (event.code === \"KeyX\") {\n  //     console.log(\" keyUpHandler pressed\")\n  //     polySynth.triggerAttack([\"C4\", \"E4\", \"A4\"]);\n  //    }  \n    \n  // };\n\n  //   // onKeyUp handler function\n  //   const keyUpHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\n  //     if (event.code === \"KeyZ\") {\n  //       console.log(\" keyUpHandler pressed\")\n  //       //polySynth.triggerRelease([\"C4\", \"E4\", \"A4\"], .25);\n  //       synth2.triggerRelease('+0.10');\n  //       synth2.triggerRelease('+0.10');\n  //       synth2.triggerRelease('+0.10');\n  //     } else if (event.code === \"KeyX\") {\n  //       console.log(\" keyUpHandler pressed\")\n  //       polySynth.triggerRelease([\"C4\", \"E4\", \"A4\"], 1);\n  //     }  \n      \n  //   };\n\n  \n  return (\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    <div\n\n      // onMouseDown={() => sampler?.triggerAttack([\"A3\",\"D4\"])} // Question: what is `onMouseDown`? \n      // onMouseUp={() => sampler?.triggerRelease(['A3','D4'],'+0.20')} // Question: what is `onMouseUp`?\n\n      onMouseDown={() => synth?.triggerAttack(`${note}`)} // Question: what is `onMouseDown`? \n      onMouseUp={() => synth?.triggerRelease('+0.10')} // Question: what is `onMouseUp`?\n      \n      // onKeyDown = { keyDownHandler }\n      // tabIndex={0}\n      // onKeyUp={keyUpHandler}\n      // onKeyDown = { () => sampler.triggerAttack('A3') }\n      // onKeyUp={() => sampler.triggerRelease('+0.25')}\n\n      className={classNames('ba pointer absolute dim blue', {\n        'bg-black blue h1': minor, // minor keys are black\n        'yellow bg-red h1': !minor // major keys are white\n      })}\n      style={{\n        // CSS\n        top: `${octave * 2}rem`,\n        left: `${index%7 * 2}rem`,\n        zIndex: minor ? 0 : 0,\n        width: minor ? '1.0rem' : '1rem',\n        marginLeft: minor ? '0.rem' : 0\n      }}\n    ></div>\n  )\n}\n\n// eslint-disable-next-line\nfunction PianoKeyWithoutJSX ({\n  note,\n  synth,\n  minor,\n  index\n}: PianoKeyProps): JSX.Element {\n  /**\n   * This React component for pedagogical purposes.\n   * See `PianoKey` for the React component with JSX (JavaScript XML).\n   */\n  return React.createElement(\n    'div',\n    {\n      onKeyDown: () => synth?.triggerAttack(`${'C2'}`),\n      onMouseDown: () => synth?.triggerAttack(`${note}`),\n      onMouseUp: () => synth?.triggerRelease('+0.25'),\n      onKeyUp: () => synth?.triggerRelease('+0.25'),\n      className: classNames('ba pointer absolute dim', {\n        'bg-black black h3': minor,\n        'black bg-white h4': !minor\n      }),\n      style: {\n        top: 0,\n        left: `${index * 2}rem`,\n        zIndex: minor ? 1 : 0,\n        width: minor ? '1.5rem' : '2rem',\n        marginLeft: minor ? '0.25rem' : 0\n      }\n    },\n    []\n  )\n}\n\nfunction PianoType ({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      className={classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1 green', {\n        'b--yellow green': active,\n        'gray b--light-gray': !active\n      })}\n    >\n      {title}\n    </div>\n  )\n}\n\nfunction Piano ({ synth, setSynth }: InstrumentProps): JSX.Element {\n  const keys = List([\n    { note: 'C', idx: 0 },\n    { note: 'Db', idx: 0.5 },\n    { note: 'D', idx: 1 },\n    { note: 'Eb', idx: 1.5 },\n    { note: 'E', idx: 2 },\n    { note: 'F', idx: 3 },\n    { note: 'Gb', idx: 3.5 },\n    { note: 'G', idx: 4 },\n    { note: 'Ab', idx: 4.5 },\n    { note: 'A', idx: 5 },\n    { note: 'Bb', idx: 5.5 },\n    { note: 'B', idx: 6 }\n  ])\n\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect()\n\n      return new Tone.Synth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions\n      }).toDestination()\n    })\n  }\n\n  const oscillators: List<OscillatorType> = List([\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle',\n    'fmsine',\n    'fmsawtooth',\n    'fmtriangle',\n    'amsine',\n    'amsawtooth',\n    'amtriangle'\n  ]) as List<OscillatorType>\n\n  return (\n    <div className='pv4'>\n      <div className='relative flex-wrap h4 w-100 ml4'>\n        {Range(2, 7).map(octave =>\n          keys.map(key => {\n            const isMinor = key.note.indexOf('b') !== -1\n            const note = `${key.note}${octave}`\n            return (\n              <PianoKey\n                key={note} //react key\n                note={note}\n                synth={synth}\n                minor={isMinor}\n                octave={octave}\n                index={(octave - 2) * 7 + key.idx}\n              />\n            )\n          })\n        )}\n      </div>\n      <div className={'pl4 pt4 flex'}>\n\n        {oscillators.map(o => (\n          <PianoType\n            key={o}\n            title={o}\n            onClick={() => setOscillator(o)}\n            active={synth?.oscillator.type === o}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport const matthewMadore_Instrument = new Instrument(\n  'matthewMadore_Instrument',\n  Piano\n)\n"]},"metadata":{},"sourceType":"module"}