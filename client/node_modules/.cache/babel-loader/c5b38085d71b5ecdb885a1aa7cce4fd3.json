{"ast":null,"code":"import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n  return (nativeContext, options) => {\n    // Bug #62: Safari does not support ConstantSourceNodes.\n    if (nativeContext.createConstantSource === undefined) {\n      return createNativeConstantSourceNodeFaker(nativeContext, options);\n    }\n\n    const nativeConstantSourceNode = nativeContext.createConstantSource();\n    assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset'); // Bug #44: Safari does not throw a RangeError yet.\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n    } // Bug #44: Only Firefox does not throw a RangeError yet.\n\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n    } // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n\n\n    addSilentConnection(nativeContext, nativeConstantSourceNode);\n    return nativeConstantSourceNode;\n  };\n};","map":{"version":3,"sources":["../../../src/factories/native-constant-source-node-factory.ts"],"names":[],"mappings":"AAAA,SAAS,oCAAT,QAAqD,uDAArD;AACA,SAAS,4BAAT,QAA6C,6CAA7C;AACA,SAAS,yDAAT,QAA0E,8EAA1E;AACA,SAAS,wDAAT,QAAyE,6EAAzE;AAGA,OAAO,MAAM,qCAAqC,GAA4C,CAC1F,mBAD0F,EAE1F,eAF0F,EAG1F,mCAH0F,EAI1F,gEAJ0F,EAK1F,+DAL0F,KAM1F;AACA,SAAO,CAAC,aAAD,EAAgB,OAAhB,KAA2B;AAC9B;AACA,QAAI,aAAa,CAAC,oBAAd,KAAuC,SAA3C,EAAsD;AAClD,aAAO,mCAAmC,CAAC,aAAD,EAAgB,OAAhB,CAA1C;AACH;;AAED,UAAM,wBAAwB,GAAG,aAAa,CAAC,oBAAd,EAAjC;AAEA,IAAA,4BAA4B,CAAC,wBAAD,EAA2B,OAA3B,CAA5B;AAEA,IAAA,oCAAoC,CAAC,wBAAD,EAA2B,OAA3B,EAAoC,QAApC,CAApC,CAV8B,CAY9B;;AACA,QACI,CAAC,eAAe,CAAC,gEAAD,EAAmE,MAC/E,gEAAgE,CAAC,aAAD,CADpD,CADpB,EAIE;AACE,MAAA,yDAAyD,CAAC,wBAAD,CAAzD;AACH,KAnB6B,CAqB9B;;;AACA,QACI,CAAC,eAAe,CAAC,+DAAD,EAAkE,MAC9E,+DAA+D,CAAC,aAAD,CADnD,CADpB,EAIE;AACE,MAAA,wDAAwD,CAAC,wBAAD,CAAxD;AACH,KA5B6B,CA8B9B;;;AACA,IAAA,mBAAmB,CAAC,aAAD,EAAgB,wBAAhB,CAAnB;AAEA,WAAO,wBAAP;AACH,GAlCD;AAmCH,CA1CM","sourceRoot":"","sourcesContent":["import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n    return (nativeContext, options) => {\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n        const nativeConstantSourceNode = nativeContext.createConstantSource();\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n        return nativeConstantSourceNode;\n    };\n};\n//# sourceMappingURL=native-constant-source-node-factory.js.map"]},"metadata":{},"sourceType":"module"}