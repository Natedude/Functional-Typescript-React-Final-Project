{"ast":null,"code":"var _jsxFileName = \"/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/Natedude_Instrument.tsx\",\n    _s = $RefreshSig$();\n\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\n// import React from 'react';\nimport React, { useState } from 'react'; // project imports\n\nimport { Instrument } from '../Instruments';\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getDrumKitProps() {\n  return {\n    name: 'Kurzweil Kit 01',\n    prefix: 'Kurzweil_Kit_01/',\n    kitNum: 0,\n    urls: {\n      A3: 'CYCdh_Kurz01-Kick03.wav',\n      B3: 'CYCdh_Kurz01-Snr02.wav',\n      C3: 'CYCdh_Kurz01-ClHat.wav',\n      D3: 'CYCdh_Kurz01-Tom04.wav',\n      //leftTom\n      E3: 'CYCdh_Kurz01-Tom03.wav',\n      //rightTom\n      Eb3: 'CYCdh_Kurz01-Tom01.wav',\n      //floorTom\n      F3: 'CYCdh_Kurz01-Crash01.wav',\n      G3: 'CYCdh_Kurz01-Ride01.wav'\n    } // TODO: add floor tom as Tom01 and make leftTom and rightTom in 03,04\n\n  };\n}\n\n;\nconst urlPrefix = 'Natedude/'; // takes in DrumKitProps and returns [sampler, setSampler]\n\nfunction MakeSampler(newKit) {\n  _s();\n\n  const [sampler, setSampler] = useState(new Tone.Sampler({\n    urls: newKit.urls,\n    baseUrl: `http://localhost:3000/${urlPrefix}${newKit.prefix}`\n  }).toDestination());\n  return [sampler, setSampler];\n}\n\n_s(MakeSampler, \"vtHU2EfOQzslonKGEFqUlCyaRUU=\");\n\n_c = MakeSampler;\nexport function DrumKitPiece({\n  note,\n  sampler,\n  styles,\n  hitboxStyles\n}) {\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n  return (\n    /*#__PURE__*/\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    _jsxDEV(\"div\", {\n      className: classNames('b--blue ba absolute h1'),\n      style: Object.assign({}, {\n        // CSS\n        backgroundSize: 'contain',\n        backgroundRepeat: 'no-repeat'\n      }, styles),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onMouseDown: () => sampler.triggerAttack(`${note}`),\n        onMouseUp: () => sampler.triggerRelease(`${note}`, '+0.25'),\n        className: classNames('b--red ba pointer'),\n        style: hitboxStyles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  );\n} // function PianoType({ title, onClick, active }: any): JSX.Element {\n//   return (\n//     <div\n//       onClick={onClick}\n//       className={classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n//         'b--red green': active,\n//         'gray b--light-gray': !active,\n//       })}\n//     >\n//       {title}\n//     </div>\n//   );\n// }\n//  Object.keys(drumKits)\n// interface Styles {\n//   backgroundImage: string;\n//   width: string;\n//   height: string;\n//   top: string;\n//   left: string;\n// }\n// interface DrumKitPieceSpec {\n// }\n\n_c2 = DrumKitPiece;\n\nfunction DrumKit({\n  synth,\n  setSynth\n}) {\n  // drumPieces instead of keys\n  const wUnit = 'rem';\n  const hUnit = 'rem';\n  const uiScale = 1;\n  const drumPieces = [{\n    note: 'F3',\n    //crash\n    styles: {\n      backgroundImage: 'url(Natedude/img/crash.png)',\n      width: `${uiScale * 8}${wUnit}`,\n      height: `${uiScale * 20}${hUnit}`,\n      top: `${uiScale * 2}${hUnit}`,\n      left: `${uiScale * 3}${wUnit}`\n    },\n    hitboxStyles: {\n      float: 'right',\n      width: `${uiScale * 6.5}${wUnit}`,\n      height: `${uiScale * 4.5}${hUnit}`,\n      // borderRadius: '1rem',\n      borderTopLeftRadius: '70%',\n      borderTopRightRadius: '120%',\n      borderBottomRightRadius: '70%',\n      borderBottomLeftRadius: '120%'\n    }\n  }, {\n    note: 'G3',\n    //ride\n    styles: {\n      backgroundImage: 'url(Natedude/img/ride.png)',\n      width: `${uiScale * 7.7}${wUnit}`,\n      height: `${uiScale * 16}${hUnit}`,\n      top: `${uiScale * 4}${hUnit}`,\n      left: `${uiScale * 23}${wUnit}`\n    },\n    hitboxStyles: {\n      // float: 'right',\n      width: `${uiScale * 5}${wUnit}`,\n      height: `${uiScale * 5.3}${hUnit}`,\n      // borderRadius: '1rem',\n      borderTopLeftRadius: '130%',\n      borderTopRightRadius: '60%',\n      borderBottomRightRadius: '130%',\n      borderBottomLeftRadius: '70%'\n    }\n  }, {\n    note: 'A3',\n    //kick\n    styles: {\n      backgroundImage: 'url(Natedude/img/kick.png)',\n      width: `${uiScale * 11}${wUnit}`,\n      height: `${uiScale * 11}${hUnit}`,\n      top: `${uiScale * 11}${hUnit}`,\n      left: `${uiScale * 11}${wUnit}`\n    },\n    hitboxStyles: {\n      // float: 'center',\n      position: 'absolute',\n      width: `${uiScale * 8.8}${wUnit}`,\n      height: `${uiScale * 9}${hUnit}`,\n      top: `${uiScale * 3}%`,\n      left: `${uiScale * 10.4}%`,\n      borderRadius: '100%' // marginTop: '-4.5${hUnit}',\n      // marginLeft: '-6.5${wUnit}',\n      // borderRadius: '1rem',\n\n    }\n  }, {\n    note: 'C3',\n    //high hat\n    styles: {\n      backgroundImage: 'url(Natedude/img/entireHighHat.png)',\n      width: `${uiScale * 7}${wUnit}`,\n      height: `${uiScale * 15}${hUnit}`,\n      top: `${uiScale * 7}${hUnit}`,\n      left: `${uiScale * 3}${wUnit}`\n    },\n    hitboxStyles: {\n      position: 'absolute',\n      width: `${uiScale * 6.3}${wUnit}`,\n      height: `${uiScale * 1.5}${hUnit}`,\n      top: `${uiScale * 7.7}%`,\n      left: `${uiScale * 2}%`,\n      // borderRadius: '1rem',\n      borderTopLeftRadius: '100%',\n      borderTopRightRadius: '100%',\n      borderBottomRightRadius: '100%',\n      borderBottomLeftRadius: '100%'\n    }\n  }, // ///////////////////////////////////////////////////////////////\n  {\n    note: 'B3',\n    //snare\n    styles: {\n      backgroundImage: 'url(Natedude/img/fullSnare.png)',\n      width: `${uiScale * 7}${wUnit}`,\n      height: `${uiScale * 12}${wUnit}`,\n      top: `${uiScale * 11}${hUnit}`,\n      left: `${uiScale * 5}${wUnit}`\n    },\n    hitboxStyles: {\n      width: `${uiScale * 7}${wUnit}`,\n      height: `${uiScale * 3}${wUnit}`\n    }\n  }, {\n    note: 'D3',\n    //leftTom\n    styles: {\n      backgroundImage: 'url(Natedude/img/leftTom.png)',\n      width: `${uiScale * 6}${wUnit}`,\n      height: `${uiScale * 4.5}${hUnit}`,\n      top: `${uiScale * 6.5}${hUnit}`,\n      left: `${uiScale * 10.2}${wUnit}`\n    },\n    hitboxStyles: {\n      width: `${uiScale * 5.1}${wUnit}`,\n      height: `${uiScale * 4.3}${hUnit}`\n    }\n  }, {\n    note: 'E3',\n    //rightTom\n    styles: {\n      backgroundImage: 'url(Natedude/img/rightTom.png)',\n      width: `${uiScale * 5}${wUnit}`,\n      height: `${uiScale * 4.5}${hUnit}`,\n      top: `${uiScale * 6.5}${hUnit}`,\n      left: `${uiScale * 17}${wUnit}`\n    },\n    hitboxStyles: {\n      float: 'right',\n      width: `${uiScale * 4.2}${wUnit}`,\n      height: `${uiScale * 4.3}${hUnit}`\n    }\n  }, {\n    note: 'Eb3',\n    //floorTom\n    styles: {\n      backgroundImage: 'url(Natedude/img/floorTom.png)',\n      width: `${uiScale * 7.3}${wUnit}`,\n      height: `${uiScale * 11}${hUnit}`,\n      top: `${uiScale * 11}${hUnit}`,\n      left: `${uiScale * 22}${wUnit}`\n    },\n    hitboxStyles: {\n      position: 'absolute',\n      width: `${uiScale * 6.1}${wUnit}`,\n      height: `${uiScale * 6.5}${hUnit}`,\n      top: `${uiScale * 2}%`,\n      left: `${uiScale * 6}%`\n    }\n  }]; // const p = drumPieces[0];\n  //setDrumKit\n\n  const setOscillator = newType => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      return new Tone.Synth({\n        oscillator: {\n          type: newType\n        }\n      }).toDestination();\n    });\n  };\n\n  var [sampler, setSampler] = MakeSampler(getDrumKitProps());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-near-black\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative dib w-100 ml4\",\n      style: {\n        height: '43vh'\n      },\n      children: drumPieces.map(p => {\n        return /*#__PURE__*/_jsxDEV(DrumKitPiece, {\n          note: p.note,\n          sampler: sampler,\n          styles: p.styles,\n          hitboxStyles: p.hitboxStyles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'pl4 pt4 flex'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = DrumKit;\nexport const Natedude_Instrument = new Instrument('Natedude_Instrument', DrumKit);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MakeSampler\");\n$RefreshReg$(_c2, \"DrumKitPiece\");\n$RefreshReg$(_c3, \"DrumKit\");","map":{"version":3,"sources":["/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/Natedude_Instrument.tsx"],"names":["Tone","classNames","React","useState","Instrument","getDrumKitProps","name","prefix","kitNum","urls","A3","B3","C3","D3","E3","Eb3","F3","G3","urlPrefix","MakeSampler","newKit","sampler","setSampler","Sampler","baseUrl","toDestination","DrumKitPiece","note","styles","hitboxStyles","Object","assign","backgroundSize","backgroundRepeat","triggerAttack","triggerRelease","DrumKit","synth","setSynth","wUnit","hUnit","uiScale","drumPieces","backgroundImage","width","height","top","left","float","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","position","borderRadius","setOscillator","newType","oldSynth","disconnect","Synth","oscillator","type","map","p","Natedude_Instrument"],"mappings":"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","sourcesContent":["// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\n// import React from 'react';\nimport React, { useState } from 'react';\n\n// project imports\nimport { Instrument, InstrumentProps } from '../Instruments';\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\n\n\n\ninterface DrumKitProps {\n  name: string;\n  prefix: string;\n  kitNum: number;\n  urls: {\n    A3: string; //kick\n    B3: string; //snare\n    C3: string; //highHat\n    D3: string; //tomLeft\n    E3: string; //tomRight\n    Eb3: string;//floorTom\n    F3: string; //crash\n    G3: string; //ride\n  }\n  // color: string;\n}\n\nfunction getDrumKitProps(){\n  return {\n    name: 'Kurzweil Kit 01',\n    prefix: 'Kurzweil_Kit_01/',\n    kitNum: 0,\n      urls: {\n        A3: 'CYCdh_Kurz01-Kick03.wav',\n        B3: 'CYCdh_Kurz01-Snr02.wav',\n        C3: 'CYCdh_Kurz01-ClHat.wav',\n        D3: 'CYCdh_Kurz01-Tom04.wav', //leftTom\n        E3: 'CYCdh_Kurz01-Tom03.wav', //rightTom\n        Eb3: 'CYCdh_Kurz01-Tom01.wav', //floorTom\n        F3: 'CYCdh_Kurz01-Crash01.wav',\n        G3: 'CYCdh_Kurz01-Ride01.wav'\n      }\n      // TODO: add floor tom as Tom01 and make leftTom and rightTom in 03,04\n    } as DrumKitProps;\n  };\n\n  const urlPrefix = 'Natedude/'\n\n  // takes in DrumKitProps and returns [sampler, setSampler]\n  function MakeSampler(newKit: DrumKitProps){\n    const [sampler, setSampler] = useState(\n      new Tone.Sampler({\n        urls: newKit.urls,\n        baseUrl: `http://localhost:3000/${urlPrefix}${newKit.prefix}`,\n      }).toDestination()\n      );\n      return [sampler, setSampler] as [Tone.Sampler, React.Dispatch<React.SetStateAction<Tone.Sampler>>];\n    }\n\n    interface DrumKitPieceProps {\n      note: string; // kick, snare, highHat, tomLeft, tomRight, crash, ride\n      sampler: Tone.Sampler;\n      styles: Object;\n      hitboxStyles: Object;\n    }\n\n    export function DrumKitPiece({\n      note,\n      sampler,\n      styles,\n      hitboxStyles\n    }: DrumKitPieceProps): JSX.Element {\n      /**\n       * This React component corresponds to either a major or minor key in the piano.\n       * See `PianoKeyWithoutJSX` for the React component without JSX.\n       */\n      return (\n        // Observations:\n        // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n        // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n        // 3. The curly braces `{` and `}` should remind you of string interpolation.\n        <div\n          className={classNames('b--blue ba absolute h1')}\n          style={Object.assign({},\n            {\n              // CSS\n              backgroundSize: 'contain',\n              backgroundRepeat: 'no-repeat',\n            }, styles)}\n        >\n          <div\n            onMouseDown={() => sampler.triggerAttack(`${note}`)}\n            onMouseUp={() => sampler.triggerRelease(`${note}`,'+0.25')}\n            className={classNames('b--red ba pointer')}\n            style={hitboxStyles}\n          ></div>\n          {/* <div></div> */}\n        </div>\n      );\n    }\n\n// function PianoType({ title, onClick, active }: any): JSX.Element {\n//   return (\n//     <div\n//       onClick={onClick}\n//       className={classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n//         'b--red green': active,\n//         'gray b--light-gray': !active,\n//       })}\n//     >\n//       {title}\n//     </div>\n//   );\n// }\n//  Object.keys(drumKits)\n// interface Styles {\n//   backgroundImage: string;\n//   width: string;\n//   height: string;\n//   top: string;\n//   left: string;\n// }\n\n// interface DrumKitPieceSpec {\n\n// }\n\nfunction DrumKit({ synth, setSynth }: InstrumentProps): JSX.Element {\n\n  // drumPieces instead of keys\n  const wUnit = 'rem'\n  const hUnit = 'rem'\n\n  const uiScale = 1;\n  const drumPieces = [\n    {\n      note: 'F3', //crash\n      styles: {\n        backgroundImage: 'url(Natedude/img/crash.png)',\n        width: `${uiScale*8}${wUnit}`,\n        height: `${uiScale*20}${hUnit}`,\n        top: `${uiScale*2}${hUnit}`,\n        left: `${uiScale*3}${wUnit}`,\n      },\n      hitboxStyles:{\n        float: 'right',\n        width: `${uiScale*6.5}${wUnit}`,\n        height: `${uiScale*4.5}${hUnit}`,\n        // borderRadius: '1rem',\n        borderTopLeftRadius: '70%',\n        borderTopRightRadius: '120%',\n        borderBottomRightRadius: '70%',\n        borderBottomLeftRadius: '120%',\n\n      }\n    },\n    {\n      note: 'G3', //ride\n      styles: {\n        backgroundImage: 'url(Natedude/img/ride.png)',\n        width: `${uiScale*7.7}${wUnit}`,\n        height: `${uiScale*16}${hUnit}`,\n        top: `${uiScale*4}${hUnit}`,\n        left: `${uiScale*23}${wUnit}`,\n      },\n      hitboxStyles:{\n        // float: 'right',\n        width: `${uiScale*5}${wUnit}`,\n        height: `${uiScale*5.3}${hUnit}`,\n        // borderRadius: '1rem',\n        borderTopLeftRadius: '130%',\n        borderTopRightRadius: '60%',\n        borderBottomRightRadius: '130%',\n        borderBottomLeftRadius: '70%',\n\n      }\n    },\n    {\n      note: 'A3', //kick\n      styles: {\n        backgroundImage: 'url(Natedude/img/kick.png)',\n        width: `${uiScale*11}${wUnit}`,\n        height: `${uiScale*11}${hUnit}`,\n        top: `${uiScale*11}${hUnit}`,\n        left: `${uiScale*11}${wUnit}`,\n      },\n      hitboxStyles:{\n        // float: 'center',\n        position: 'absolute',\n        width: `${uiScale*8.8}${wUnit}`,\n        height: `${uiScale*9}${hUnit}`,\n        top: `${uiScale*3}%`,\n        left: `${uiScale*10.4}%`,\n        borderRadius: '100%',\n        // marginTop: '-4.5${hUnit}',\n        // marginLeft: '-6.5${wUnit}',\n        // borderRadius: '1rem',\n      }\n    },\n    {\n      note: 'C3', //high hat\n      styles: {\n        backgroundImage: 'url(Natedude/img/entireHighHat.png)',\n        width: `${uiScale*7}${wUnit}`,\n        height: `${uiScale*15}${hUnit}`,\n        top: `${uiScale*7}${hUnit}`,\n        left: `${uiScale*3}${wUnit}`,\n      },\n      hitboxStyles:{\n        position: 'absolute',\n        width: `${uiScale*6.3}${wUnit}`,\n        height: `${uiScale*1.5}${hUnit}`,\n        top: `${uiScale*7.7}%`,\n        left: `${uiScale*2}%`,\n        // borderRadius: '1rem',\n        borderTopLeftRadius: '100%',\n        borderTopRightRadius: '100%',\n        borderBottomRightRadius: '100%',\n        borderBottomLeftRadius: '100%',\n      }\n    },\n    // ///////////////////////////////////////////////////////////////\n    {\n      note: 'B3', //snare\n      styles: {\n        backgroundImage: 'url(Natedude/img/fullSnare.png)',\n        width: `${uiScale*7}${wUnit}`,\n        height: `${uiScale*12}${wUnit}`,\n        top: `${uiScale*11}${hUnit}`,\n        left: `${uiScale*5}${wUnit}`,\n      },\n      hitboxStyles:{\n        width: `${uiScale*7}${wUnit}`,\n        height: `${uiScale*3}${wUnit}`,\n      }\n    },\n\n    {\n      note: 'D3', //leftTom\n      styles: {\n        backgroundImage: 'url(Natedude/img/leftTom.png)',\n        width: `${uiScale*6}${wUnit}`,\n        height: `${uiScale*4.5}${hUnit}`,\n        top: `${uiScale*6.5}${hUnit}`,\n        left: `${uiScale*10.2}${wUnit}`,\n      },\n      hitboxStyles:{\n        width: `${uiScale*5.1}${wUnit}`,\n        height: `${uiScale*4.3}${hUnit}`,\n      }\n    },\n    {\n      note: 'E3', //rightTom\n      styles: {\n        backgroundImage: 'url(Natedude/img/rightTom.png)',\n        width: `${uiScale*5}${wUnit}`,\n        height: `${uiScale*4.5}${hUnit}`,\n        top: `${uiScale*6.5}${hUnit}`,\n        left: `${uiScale*17}${wUnit}`,\n      },\n      hitboxStyles:{\n        float: 'right',\n        width: `${uiScale*4.2}${wUnit}`,\n        height: `${uiScale*4.3}${hUnit}`,\n      }\n    },\n    {\n      note: 'Eb3', //floorTom\n      styles: {\n        backgroundImage: 'url(Natedude/img/floorTom.png)',\n        width: `${uiScale*7.3}${wUnit}`,\n        height: `${uiScale*11}${hUnit}`,\n        top: `${uiScale*11}${hUnit}`,\n        left: `${uiScale*22}${wUnit}`,\n      },\n      hitboxStyles:{\n        position: 'absolute',\n        width: `${uiScale*6.1}${wUnit}`,\n        height: `${uiScale*6.5}${hUnit}`,\n        top: `${uiScale*2}%`,\n        left: `${uiScale*6}%`,\n      }\n    },\n  ]\n  // const p = drumPieces[0];\n\n\n  //setDrumKit\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n\n      return new Tone.Synth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n      }).toDestination();\n    });\n  };\n\n  var [sampler, setSampler] = MakeSampler(getDrumKitProps());\n\n  return (\n    <div className=\"bg-near-black\">\n      <div className=\"relative dib w-100 ml4\" style={{height: '43vh'}}>\n        {drumPieces.map(p => {\n          return (\n            <DrumKitPiece\n              note={p.note}\n              sampler={sampler}\n              styles={p.styles}\n              hitboxStyles={p.hitboxStyles}\n            />\n          );\n        })}\n        {/* <DrumKitPiece\n          note={p.note}\n          sampler={sampler}\n          image={p.image}\n          height={p.height}\n          width={p.width}\n        /> */}\n      </div>\n      <div className={'pl4 pt4 flex'}>\n        {}\n      </div>\n    </div>\n  );\n}\n\nexport const Natedude_Instrument = new Instrument('Natedude_Instrument', DrumKit);\n"]},"metadata":{},"sourceType":"module"}