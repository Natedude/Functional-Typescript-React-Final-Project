{"ast":null,"code":"var _jsxFileName = \"/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/Nishamgr_Flute.tsx\";\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List } from 'immutable'; // project imports\n\nimport { Instrument } from '../Instruments';\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n * This component is used to create the stripes on the flute\n * @param param0\n * @returns\n */\nexport function FluteStripe({\n  color,\n  width,\n  height\n}) {\n  return (\n    /*#__PURE__*/\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    _jsxDEV(\"div\", {\n      style: {\n        backgroundColor: `${color || 'red'}`,\n        height: `${height || 70}px`,\n        width: `${width || 25}px`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = FluteStripe;\nexport function ToneHole({\n  note,\n  synth,\n  index\n}) {\n  /**\n   * This component will manage the tone holes\n   */\n  return (\n    /*#__PURE__*/\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    _jsxDEV(\"div\", {\n      onMouseDown: () => synth === null || synth === void 0 ? void 0 : synth.triggerAttack(note, '8n') // Question: what is `onMouseDown`?\n      ,\n      onMouseUp: () => synth === null || synth === void 0 ? void 0 : synth.triggerRelease('+0.15') // Question: what is `onMouseUp`?\n      ,\n      className: \"bg-black\",\n      style: {\n        borderRadius: '50%',\n        height: '2rem',\n        width: '2rem',\n        marginTop: '1.3rem',\n        left: `${index * 3}rem`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c2 = ToneHole;\n\nfunction FluteType({\n  title,\n  onClick,\n  active\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n      'b--black black': active,\n      'gray b--light-gray': !active\n    }),\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = FluteType;\n\nfunction Flute({\n  synth,\n  setSynth\n}) {\n  // Adjust keys, add or remove new keys\n  const keys = List([{\n    note: 'C4',\n    idx: 0\n  }, {\n    note: 'D4',\n    idx: 1\n  }, {\n    note: 'E4',\n    idx: 2\n  }, {\n    note: 'F4',\n    idx: 3\n  }, {\n    note: 'G4',\n    idx: 4\n  }, {\n    note: 'A4',\n    idx: 5\n  }, {\n    note: 'B4',\n    idx: 6\n  }]); // C Pentatonic [\"C4\", \"D4\", \"E4\", \"G4\", \"A4\", \"C5\"]\n\n  const setOscillator = newType => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      const newSynth = new Tone.MonoSynth({\n        oscillator: {\n          type: newType // frequency: 600, // Set the base frequency\n\n        },\n        // Synth comprises of oscillator and envelop\n        // Amplitude Envelop\n        envelope: {\n          attack: 0.11,\n          decay: 0.2,\n          release: 0.4,\n          sustain: 0.8\n        },\n        // Apply filter\n        filter: {\n          frequency: 240\n        },\n        // Adjust filterEnvelop | FrequencyEnvelop\n        filterEnvelope: {\n          attack: 0.2,\n          baseFrequency: 'C2',\n          octaves: 4\n        }\n      }).toDestination(); // Added LFO to modify the synth\n      // const lfo = new Tone.LFO(4, 800, 1400); // frequency, minimum, maximum\n      // lfo.connect(newSynth.oscillator.frequency).start();\n      // Add filter\n      // var filter = new Tone.Filter(200, 'lowpass').toDestination();\n      // filter.frequency.rampTo(6000, '4n');\n      // newSynth.connect(filter.frequency);\n\n      const filter = new Tone.AutoFilter(5).start();\n      const distortion = new Tone.Distortion(0.7);\n      newSynth.chain(filter, distortion, Tone.Destination);\n      return newSynth;\n    });\n  };\n\n  const oscillators = List(['sine', 'sawtooth', 'square', 'triangle', 'fmsine', 'fmsawtooth', 'fmtriangle', 'amsine', 'amsawtooth', 'amtriangle']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-yellow flex\",\n      style: {\n        height: '70px',\n        width: '570px',\n        margin: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(FluteStripe, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml2 mr2\",\n        children: /*#__PURE__*/_jsxDEV(ToneHole, {\n          note: keys.toArray()[0].note,\n          synth: synth,\n          index: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FluteStripe, {\n        color: \"#aa0000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FluteStripe, {\n        color: \"#00ee00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FluteStripe, {\n        color: \"#4444ff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-auto flex\",\n        children: keys.map((key, indx) => {\n          // Skip the first one\n          if (!indx) return null;\n          const isMinor = key.note.indexOf('b') !== -1;\n          const note = `${key.note}`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mr2\",\n            children: /*#__PURE__*/_jsxDEV(ToneHole, {\n              //react key\n              note: note,\n              synth: synth,\n              minor: isMinor,\n              index: key.idx + 1\n            }, note, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)\n          }, indx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'pl4 pt4 flex',\n      children: oscillators.map(o => /*#__PURE__*/_jsxDEV(FluteType, {\n        title: o,\n        onClick: () => setOscillator(o),\n        active: (synth === null || synth === void 0 ? void 0 : synth.oscillator.type) === o\n      }, o, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = Flute;\nexport const Nishamgr_Flute = new Instrument('Nishamgr_Flute', Flute);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"FluteStripe\");\n$RefreshReg$(_c2, \"ToneHole\");\n$RefreshReg$(_c3, \"FluteType\");\n$RefreshReg$(_c4, \"Flute\");","map":{"version":3,"sources":["/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/Nishamgr_Flute.tsx"],"names":["Tone","classNames","List","Instrument","FluteStripe","color","width","height","backgroundColor","ToneHole","note","synth","index","triggerAttack","triggerRelease","borderRadius","marginTop","left","FluteType","title","onClick","active","Flute","setSynth","keys","idx","setOscillator","newType","oldSynth","disconnect","newSynth","MonoSynth","oscillator","type","envelope","attack","decay","release","sustain","filter","frequency","filterEnvelope","baseFrequency","octaves","toDestination","AutoFilter","start","distortion","Distortion","chain","Destination","oscillators","margin","toArray","map","key","indx","isMinor","indexOf","o","Nishamgr_Flute"],"mappings":"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","sourcesContent":["// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List } from 'immutable';\n\n// project imports\nimport { Instrument, InstrumentProps } from '../Instruments';\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\ninterface ToneHoleProps {\n  note: string; // C, Db, D, Eb, E, F, Gb, G, Ab, A, Bb, B\n  duration?: string;\n  synth?: Tone.Synth | Tone.MonoSynth; // Contains library code for making sound\n  minor?: boolean; // True if minor key, false if major key\n  octave?: number;\n  index: number; // octave + index together give a location for the piano key\n}\n\ninterface FluteStripeProps {\n  color?: string; // Hex value or color name, #786663 or, red\n  width?: string; // width in pixels\n  height?: string; // in pixels\n}\n\n/**\n * This component is used to create the stripes on the flute\n * @param param0\n * @returns\n */\nexport function FluteStripe({ color, width, height }: FluteStripeProps): JSX.Element {\n  return (\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    <div\n      style={{\n        backgroundColor: `${color || 'red'}`,\n        height: `${height || 70}px`,\n        width: `${width || 25}px`,\n      }}\n    ></div>\n  );\n}\n\nexport function ToneHole({ note, synth, index }: ToneHoleProps): JSX.Element {\n  /**\n   * This component will manage the tone holes\n   */\n  return (\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    <div\n      onMouseDown={() => synth?.triggerAttack(note, '8n')} // Question: what is `onMouseDown`?\n      onMouseUp={() => synth?.triggerRelease('+0.15')} // Question: what is `onMouseUp`?\n      className=\"bg-black\"\n      style={{\n        borderRadius: '50%',\n        height: '2rem',\n        width: '2rem',\n        marginTop: '1.3rem',\n        left: `${index * 3}rem`,\n      }}\n    ></div>\n  );\n}\n\nfunction FluteType({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      className={classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n        'b--black black': active,\n        'gray b--light-gray': !active,\n      })}\n    >\n      {title}\n    </div>\n  );\n}\n\nfunction Flute({ synth, setSynth }: InstrumentProps): JSX.Element {\n  // Adjust keys, add or remove new keys\n  const keys = List([\n    { note: 'C4', idx: 0 },\n    { note: 'D4', idx: 1 },\n    { note: 'E4', idx: 2 },\n    { note: 'F4', idx: 3 },\n    { note: 'G4', idx: 4 },\n    { note: 'A4', idx: 5 },\n    { note: 'B4', idx: 6 },\n  ]);\n\n  // C Pentatonic [\"C4\", \"D4\", \"E4\", \"G4\", \"A4\", \"C5\"]\n\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth((oldSynth) => {\n      oldSynth.disconnect();\n\n      const newSynth = new Tone.MonoSynth({\n        oscillator: {\n          type: newType,\n          // frequency: 600, // Set the base frequency\n        } as Tone.OmniOscillatorOptions,\n        // Synth comprises of oscillator and envelop\n        // Amplitude Envelop\n        envelope: {\n          attack: 0.11,\n          decay: 0.2,\n          release: 0.4,\n          sustain: 0.8,\n        },\n        // Apply filter\n        filter: {\n          frequency: 240,\n        },\n        // Adjust filterEnvelop | FrequencyEnvelop\n        filterEnvelope: {\n          attack: 0.2,\n          baseFrequency: 'C2',\n          octaves: 4,\n        },\n      }).toDestination();\n\n      // Added LFO to modify the synth\n      // const lfo = new Tone.LFO(4, 800, 1400); // frequency, minimum, maximum\n      // lfo.connect(newSynth.oscillator.frequency).start();\n\n      // Add filter\n      // var filter = new Tone.Filter(200, 'lowpass').toDestination();\n      // filter.frequency.rampTo(6000, '4n');\n      // newSynth.connect(filter.frequency);\n\n      const filter = new Tone.AutoFilter(5).start();\n      const distortion = new Tone.Distortion(0.7);\n\n      newSynth.chain(filter, distortion, Tone.Destination);\n\n      return newSynth;\n    });\n  };\n\n  const oscillators: List<OscillatorType> = List([\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle',\n    'fmsine',\n    'fmsawtooth',\n    'fmtriangle',\n    'amsine',\n    'amsawtooth',\n    'amtriangle',\n  ]) as List<OscillatorType>;\n\n  return (\n    <div className=\"pv4\">\n      <div className=\"bg-yellow flex\" style={{ height: '70px', width: '570px', margin: 'auto' }}>\n        <FluteStripe />\n\n        <div className=\"ml2 mr2\">\n          <ToneHole note={keys.toArray()[0].note} synth={synth} index={0} />\n        </div>\n\n        <FluteStripe color=\"#aa0000\" />\n        <FluteStripe color=\"#00ee00\" />\n        <FluteStripe color=\"#4444ff\" />\n\n        <div className=\"ml-auto flex\">\n          {keys.map((key, indx) => {\n            // Skip the first one\n            if (!indx) return null;\n\n            const isMinor = key.note.indexOf('b') !== -1;\n            const note = `${key.note}`;\n            return (\n              <div key={indx} className=\"mr2\">\n                <ToneHole\n                  key={note} //react key\n                  note={note}\n                  synth={synth}\n                  minor={isMinor}\n                  index={key.idx + 1}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className={'pl4 pt4 flex'}>\n        {oscillators.map((o) => (\n          <FluteType\n            key={o}\n            title={o}\n            onClick={() => setOscillator(o)}\n            active={synth?.oscillator.type === o}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport const Nishamgr_Flute = new Instrument('Nishamgr_Flute', Flute);\n"]},"metadata":{},"sourceType":"module"}