{"ast":null,"code":"import { isAnyAudioContext, isAnyAudioNode, isAnyAudioParam, isAnyOfflineAudioContext } from \"standardized-audio-context\";\n/**\n * Test if the given value is an instanceof AudioParam\n */\n\nexport function isAudioParam(arg) {\n  return isAnyAudioParam(arg);\n}\n/**\n * Test if the given value is an instanceof AudioNode\n */\n\nexport function isAudioNode(arg) {\n  return isAnyAudioNode(arg);\n}\n/**\n * Test if the arg is instanceof an OfflineAudioContext\n */\n\nexport function isOfflineAudioContext(arg) {\n  return isAnyOfflineAudioContext(arg);\n}\n/**\n * Test if the arg is an instanceof AudioContext\n */\n\nexport function isAudioContext(arg) {\n  return isAnyAudioContext(arg);\n}\n/**\n * Test if the arg is instanceof an AudioBuffer\n */\n\nexport function isAudioBuffer(arg) {\n  return arg instanceof AudioBuffer;\n}","map":{"version":3,"sources":["../../../../Tone/core/util/AdvancedTypeCheck.ts"],"names":[],"mappings":"AAAA,SACC,iBADD,EACoB,cADpB,EAEC,eAFD,EAEkB,wBAFlB,QAGO,4BAHP;AAKA;;AAEG;;AACH,OAAM,SAAU,YAAV,CAAuB,GAAvB,EAA+B;AACpC,SAAO,eAAe,CAAC,GAAD,CAAtB;AACA;AAED;;AAEG;;AACH,OAAM,SAAU,WAAV,CAAsB,GAAtB,EAA8B;AACnC,SAAO,cAAc,CAAC,GAAD,CAArB;AACA;AAED;;AAEG;;AACH,OAAM,SAAU,qBAAV,CAAgC,GAAhC,EAAwC;AAC7C,SAAO,wBAAwB,CAAC,GAAD,CAA/B;AACA;AAED;;AAEG;;AACH,OAAM,SAAU,cAAV,CAAyB,GAAzB,EAAiC;AACtC,SAAO,iBAAiB,CAAC,GAAD,CAAxB;AACA;AAED;;AAEG;;AACH,OAAM,SAAU,aAAV,CAAwB,GAAxB,EAAgC;AACrC,SAAO,GAAG,YAAY,WAAtB;AACA","sourceRoot":"","sourcesContent":["import { isAnyAudioContext, isAnyAudioNode, isAnyAudioParam, isAnyOfflineAudioContext, } from \"standardized-audio-context\";\n/**\n * Test if the given value is an instanceof AudioParam\n */\nexport function isAudioParam(arg) {\n    return isAnyAudioParam(arg);\n}\n/**\n * Test if the given value is an instanceof AudioNode\n */\nexport function isAudioNode(arg) {\n    return isAnyAudioNode(arg);\n}\n/**\n * Test if the arg is instanceof an OfflineAudioContext\n */\nexport function isOfflineAudioContext(arg) {\n    return isAnyOfflineAudioContext(arg);\n}\n/**\n * Test if the arg is an instanceof AudioContext\n */\nexport function isAudioContext(arg) {\n    return isAnyAudioContext(arg);\n}\n/**\n * Test if the arg is instanceof an AudioBuffer\n */\nexport function isAudioBuffer(arg) {\n    return arg instanceof AudioBuffer;\n}\n//# sourceMappingURL=AdvancedTypeCheck.js.map"]},"metadata":{},"sourceType":"module"}