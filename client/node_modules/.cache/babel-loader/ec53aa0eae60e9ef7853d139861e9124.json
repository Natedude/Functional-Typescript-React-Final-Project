{"ast":null,"code":"var _jsxFileName = \"/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/Nishamgr_Flute.tsx\";\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport { List } from 'immutable'; // project imports\n\nimport { Instrument } from '../Instruments';\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n * This component is used to create the stripes on the flute\n * @param param0\n * @returns\n */\nexport function FluteStripe({\n  color,\n  width,\n  height\n}) {\n  return (\n    /*#__PURE__*/\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    _jsxDEV(\"div\", {\n      style: {\n        backgroundColor: `${color || 'red'}`,\n        height: `${height || 70}px`,\n        width: `${width || 25}px`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = FluteStripe;\nexport function ToneHole({\n  index,\n  player\n}) {\n  /**\n   * This component will manage the tone holes\n   */\n  return (\n    /*#__PURE__*/\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    _jsxDEV(\"div\", {\n      onMouseDown: () => {\n        return player.start();\n      } // Question: what is `onMouseDown`?\n      ,\n      onMouseUp: () => player === null || player === void 0 ? void 0 : player.stop() // Question: what is `onMouseUp`?\n      ,\n      className: \"bg-black\",\n      style: {\n        borderRadius: '50%',\n        height: '2rem',\n        width: '2rem',\n        marginTop: '1.3rem',\n        left: `${index * 3}rem`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c2 = ToneHole;\n\nfunction Flute({\n  synth,\n  setSynth\n}) {\n  // Adjust keys, add or remove new keys\n  const keys = List([{\n    note: 'C3',\n    idx: 0,\n    loop: false\n  }, {\n    note: 'C4',\n    idx: 1,\n    loop: false\n  }, {\n    note: 'D2',\n    idx: 2,\n    loop: false\n  }, {\n    note: 'D3',\n    idx: 3,\n    loop: false\n  }, {\n    note: 'D4',\n    idx: 4,\n    loop: false\n  }, {\n    note: 'A3',\n    idx: 5,\n    loop: false\n  }]);\n\n  function setTune(note) {\n    return new Tone.Player(`../../nmagarSound/${note}.wav`).toDestination();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-yellow flex\",\n      style: {\n        height: '70px',\n        width: '570px',\n        margin: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(FluteStripe, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml2 mr2\",\n        children: /*#__PURE__*/_jsxDEV(ToneHole, {\n          player: setTune('A2'),\n          index: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FluteStripe, {\n        color: \"#aa0000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FluteStripe, {\n        color: \"#00ee00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FluteStripe, {\n        color: \"#4444ff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-auto flex\",\n        children: keys.map((key, indx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mr2\",\n            children: /*#__PURE__*/_jsxDEV(ToneHole, {\n              //react key\n              player: setTune(key.note),\n              loop: key.loop,\n              index: key.idx + 1\n            }, key.note, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, indx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Flute;\nexport const Nishamgr_Flute = new Instrument('Nishamgr_Flute', Flute);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FluteStripe\");\n$RefreshReg$(_c2, \"ToneHole\");\n$RefreshReg$(_c3, \"Flute\");","map":{"version":3,"sources":["/Users/nathanhildum/Documents/Programming/github/SFSU-CSC600/final-project-brute_force-600/client/src/instruments/Nishamgr_Flute.tsx"],"names":["Tone","List","Instrument","FluteStripe","color","width","height","backgroundColor","ToneHole","index","player","start","stop","borderRadius","marginTop","left","Flute","synth","setSynth","keys","note","idx","loop","setTune","Player","toDestination","margin","map","key","indx","Nishamgr_Flute"],"mappings":"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","sourcesContent":["// 3rd party library imports\nimport * as Tone from 'tone';\nimport { List } from 'immutable';\n\n// project imports\nimport { Instrument, InstrumentProps } from '../Instruments';\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\ninterface ToneHoleProps {\n  duration?: string;\n  player: Tone.Player; // Contains library code for making sound\n  loop?: boolean;\n  index: number; // octave + index together give a location for the piano key\n}\n\ninterface FluteStripeProps {\n  color?: string; // Hex value or color name, #786663 or, red\n  width?: string; // width in pixels\n  height?: string; // in pixels\n}\n\n/**\n * This component is used to create the stripes on the flute\n * @param param0\n * @returns\n */\nexport function FluteStripe({ color, width, height }: FluteStripeProps): JSX.Element {\n  return (\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    <div\n      style={{\n        backgroundColor: `${color || 'red'}`,\n        height: `${height || 70}px`,\n        width: `${width || 25}px`,\n      }}\n    ></div>\n  );\n}\n\nexport function ToneHole({ index, player }: ToneHoleProps): JSX.Element {\n  /**\n   * This component will manage the tone holes\n   */\n  return (\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    <div\n      onMouseDown={() => {\n        return player.start();\n      }} // Question: what is `onMouseDown`?\n      onMouseUp={() => player?.stop()} // Question: what is `onMouseUp`?\n      className=\"bg-black\"\n      style={{\n        borderRadius: '50%',\n        height: '2rem',\n        width: '2rem',\n        marginTop: '1.3rem',\n        left: `${index * 3}rem`,\n      }}\n    ></div>\n  );\n}\n\nfunction Flute({ synth, setSynth }: InstrumentProps): JSX.Element {\n  // Adjust keys, add or remove new keys\n  const keys = List([\n    { note: 'C3', idx: 0, loop: false },\n    { note: 'C4', idx: 1, loop: false },\n    { note: 'D2', idx: 2, loop: false },\n    { note: 'D3', idx: 3, loop: false },\n    { note: 'D4', idx: 4, loop: false },\n    { note: 'A3', idx: 5, loop: false },\n  ]);\n\n  function setTune(note: string) {\n    return new Tone.Player(`../../nmagarSound/${note}.wav`).toDestination();\n  }\n\n  return (\n    <div className=\"pv4\">\n      <div className=\"bg-yellow flex\" style={{ height: '70px', width: '570px', margin: 'auto' }}>\n        <FluteStripe />\n\n        <div className=\"ml2 mr2\">\n          <ToneHole player={setTune('A2')} index={0} />\n        </div>\n\n        <FluteStripe color=\"#aa0000\" />\n        <FluteStripe color=\"#00ee00\" />\n        <FluteStripe color=\"#4444ff\" />\n\n        <div className=\"ml-auto flex\">\n          {keys.map((key, indx) => {\n            return (\n              <div key={indx} className=\"mr2\">\n                <ToneHole\n                  key={key.note} //react key\n                  player={setTune(key.note)}\n                  loop={key.loop}\n                  index={key.idx + 1}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport const Nishamgr_Flute = new Instrument('Nishamgr_Flute', Flute);\n"]},"metadata":{},"sourceType":"module"}