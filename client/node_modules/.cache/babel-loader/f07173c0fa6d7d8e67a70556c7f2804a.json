{"ast":null,"code":"export const testAudioWorkletNodeOptionsClonability = audioWorkletNodeOptions => {\n  const {\n    port1,\n    port2\n  } = new MessageChannel();\n\n  try {\n    // This will throw an error if the audioWorkletNodeOptions are not clonable.\n    port1.postMessage(audioWorkletNodeOptions);\n  } finally {\n    port1.close();\n    port2.close();\n  }\n};","map":{"version":3,"sources":["../../../src/helpers/test-audio-worklet-node-options-clonability.ts"],"names":[],"mappings":"AAEA,OAAO,MAAM,sCAAsC,GAAqD,uBAAD,IAA4B;AAC/H,QAAM;AAAE,IAAA,KAAF;AAAS,IAAA;AAAT,MAAmB,IAAI,cAAJ,EAAzB;;AAEA,MAAI;AACA;AACA,IAAA,KAAK,CAAC,WAAN,CAAkB,uBAAlB;AACH,GAHD,SAGU;AACN,IAAA,KAAK,CAAC,KAAN;AACA,IAAA,KAAK,CAAC,KAAN;AACH;AACJ,CAVM","sourceRoot":"","sourcesContent":["export const testAudioWorkletNodeOptionsClonability = (audioWorkletNodeOptions) => {\n    const { port1, port2 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n        port2.close();\n    }\n};\n//# sourceMappingURL=test-audio-worklet-node-options-clonability.js.map"]},"metadata":{},"sourceType":"module"}