{"ast":null,"code":"import { Emitter } from \"../util/Emitter\";\nexport class BaseContext extends Emitter {\n  constructor() {\n    super(...arguments);\n    this.isOffline = false;\n  }\n  /*\n   * This is a placeholder so that JSON.stringify does not throw an error\n   * This matches what JSON.stringify(audioContext) returns on a native\n   * audioContext instance.\n   */\n\n\n  toJSON() {\n    return {};\n  }\n\n}","map":{"version":3,"sources":["../../../../Tone/core/context/BaseContext.ts"],"names":[],"mappings":"AACA,SAAS,OAAT,QAAwB,iBAAxB;AA2BA,OAAM,MAAgB,WAAhB,SACG,OADH,CACkC;AADxC,EAAA,WAAA,GAAA;;AAoIU,SAAA,SAAA,GAAqB,KAArB;AACT;AAVA;;;;AAIG;;;AACH,EAAA,MAAM,GAAA;AACL,WAAO,EAAP;AACA;;AAjIsC","sourceRoot":"","sourcesContent":["import { Emitter } from \"../util/Emitter\";\nexport class BaseContext extends Emitter {\n    constructor() {\n        super(...arguments);\n        this.isOffline = false;\n    }\n    /*\n     * This is a placeholder so that JSON.stringify does not throw an error\n     * This matches what JSON.stringify(audioContext) returns on a native\n     * audioContext instance.\n     */\n    toJSON() {\n        return {};\n    }\n}\n//# sourceMappingURL=BaseContext.js.map"]},"metadata":{},"sourceType":"module"}