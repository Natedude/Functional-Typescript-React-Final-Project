{"ast":null,"code":"export const pickElementFromSet = (set, predicate) => {\n  const matchingElements = Array.from(set).filter(predicate);\n\n  if (matchingElements.length > 1) {\n    throw Error('More than one element was found.');\n  }\n\n  if (matchingElements.length === 0) {\n    throw Error('No element was found.');\n  }\n\n  const [matchingElement] = matchingElements;\n  set.delete(matchingElement);\n  return matchingElement;\n};","map":{"version":3,"sources":["../../../src/helpers/pick-element-from-set.ts"],"names":[],"mappings":"AAEA,OAAO,MAAM,kBAAkB,GAAgC,CAAC,GAAD,EAAM,SAAN,KAAmB;AAC9E,QAAM,gBAAgB,GAAG,KAAK,CAAC,IAAN,CAAW,GAAX,EAAgB,MAAhB,CAAuB,SAAvB,CAAzB;;AAEA,MAAI,gBAAgB,CAAC,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B,UAAM,KAAK,CAAC,kCAAD,CAAX;AACH;;AAED,MAAI,gBAAgB,CAAC,MAAjB,KAA4B,CAAhC,EAAmC;AAC/B,UAAM,KAAK,CAAC,uBAAD,CAAX;AACH;;AAED,QAAM,CAAC,eAAD,IAAoB,gBAA1B;AAEA,EAAA,GAAG,CAAC,MAAJ,CAAW,eAAX;AAEA,SAAO,eAAP;AACH,CAhBM","sourceRoot":"","sourcesContent":["export const pickElementFromSet = (set, predicate) => {\n    const matchingElements = Array.from(set).filter(predicate);\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n    const [matchingElement] = matchingElements;\n    set.delete(matchingElement);\n    return matchingElement;\n};\n//# sourceMappingURL=pick-element-from-set.js.map"]},"metadata":{},"sourceType":"module"}