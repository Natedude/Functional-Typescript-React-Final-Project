{"ast":null,"code":"export const createNativeMediaStreamAudioSourceNode = (nativeAudioContext, {\n  mediaStream\n}) => {\n  const audioStreamTracks = mediaStream.getAudioTracks();\n  /*\n   * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n   * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n   */\n\n  audioStreamTracks.sort((a, b) => a.id < b.id ? -1 : a.id > b.id ? 1 : 0);\n  const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);\n  const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n  /*\n   * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs\n   * to be overwritten as it would otherwise expose the reconstructed version.\n   */\n\n  Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', {\n    value: mediaStream\n  });\n  return nativeMediaStreamAudioSourceNode;\n};","map":{"version":3,"sources":["../../../src/factories/native-media-stream-audio-source-node.ts"],"names":[],"mappings":"AAEA,OAAO,MAAM,sCAAsC,GAA6C,CAAC,kBAAD,EAAqB;AAAE,EAAA;AAAF,CAArB,KAAwC;AACpI,QAAM,iBAAiB,GAAG,WAAW,CAAC,cAAZ,EAA1B;AACA;;;AAGG;;AACH,EAAA,iBAAiB,CAAC,IAAlB,CAAuB,CAAC,CAAD,EAAI,CAAJ,KAAW,CAAC,CAAC,EAAF,GAAO,CAAC,CAAC,EAAT,GAAc,CAAC,CAAf,GAAmB,CAAC,CAAC,EAAF,GAAO,CAAC,CAAC,EAAT,GAAc,CAAd,GAAkB,CAAvE;AAEA,QAAM,yBAAyB,GAAG,iBAAiB,CAAC,KAAlB,CAAwB,CAAxB,EAA2B,CAA3B,CAAlC;AAEA,QAAM,gCAAgC,GAAG,kBAAkB,CAAC,uBAAnB,CAA2C,IAAI,WAAJ,CAAgB,yBAAhB,CAA3C,CAAzC;AAEA;;;AAGG;;AACH,EAAA,MAAM,CAAC,cAAP,CAAsB,gCAAtB,EAAwD,aAAxD,EAAuE;AAAE,IAAA,KAAK,EAAE;AAAT,GAAvE;AAEA,SAAO,gCAAP;AACH,CAnBM","sourceRoot":"","sourcesContent":["export const createNativeMediaStreamAudioSourceNode = (nativeAudioContext, { mediaStream }) => {\n    const audioStreamTracks = mediaStream.getAudioTracks();\n    /*\n     * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n     * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n     */\n    audioStreamTracks.sort((a, b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0));\n    const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n    /*\n     * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs\n     * to be overwritten as it would otherwise expose the reconstructed version.\n     */\n    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n    return nativeMediaStreamAudioSourceNode;\n};\n//# sourceMappingURL=native-media-stream-audio-source-node.js.map"]},"metadata":{},"sourceType":"module"}