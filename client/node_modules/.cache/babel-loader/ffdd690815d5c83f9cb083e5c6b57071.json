{"ast":null,"code":"import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToActive = audioNode => {\n  if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n    throw new Error('The AudioNode is already stored.');\n  }\n\n  ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n  getEventListenersOfAudioNode(audioNode).forEach(eventListener => eventListener(true));\n};","map":{"version":3,"sources":["../../../src/helpers/set-internal-state-to-active.ts"],"names":[],"mappings":"AAAA,SAAS,uBAAT,QAAwC,YAAxC;AAGA,SAAS,4BAAT,QAA6C,qCAA7C;AAEA,OAAO,MAAM,wBAAwB,GAAwB,SAArB,IAAiD;AACrF,MAAI,uBAAuB,CAAC,GAAxB,CAA4B,SAA5B,CAAJ,EAA4C;AACxC,UAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;AACH;;AAED,EAAA,uBAAuB,CAAC,GAAxB,CAA4B,SAA5B;AAEA,EAAA,4BAA4B,CAAC,SAAD,CAA5B,CAAwC,OAAxC,CAAiD,aAAD,IAAmB,aAAa,CAAC,IAAD,CAAhF;AACH,CARM","sourceRoot":"","sourcesContent":["import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToActive = (audioNode) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));\n};\n//# sourceMappingURL=set-internal-state-to-active.js.map"]},"metadata":{},"sourceType":"module"}